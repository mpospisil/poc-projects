# coding: utf-8

"""
    Connection Rest API 1.0

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import warnings
from pydantic import validate_call, Field, StrictFloat, StrictStr, StrictInt
from typing import Any, Dict, List, Optional, Tuple, Union
from typing_extensions import Annotated

from pydantic import StrictInt, StrictStr
from typing import List, Optional
from connection_restapi_client_poc.models.idea_rsws_lib_css_service_material_type_ci_basic_types import IdeaRSWsLibCssServiceMaterialTypeCIBasicTypes
from connection_restapi_client_poc.models.idea_stati_ca_plugin_api_connection_rest_model_model_project_proj_bolt_assembly_idea_stati_ca_plugin import IdeaStatiCaPluginApiConnectionRestModelModelProjectProjBoltAssemblyIdeaStatiCaPlugin
from connection_restapi_client_poc.models.idea_stati_ca_plugin_api_connection_rest_model_model_project_proj_cross_section_idea_stati_ca_plugin import IdeaStatiCaPluginApiConnectionRestModelModelProjectProjCrossSectionIdeaStatiCaPlugin
from connection_restapi_client_poc.models.idea_stati_ca_plugin_api_connection_rest_model_model_project_proj_material_idea_stati_ca_plugin import IdeaStatiCaPluginApiConnectionRestModelModelProjectProjMaterialIdeaStatiCaPlugin
from connection_restapi_client_poc.models.idea_stati_ca_plugin_api_connection_rest_model_model_project_proj_pin_idea_stati_ca_plugin import IdeaStatiCaPluginApiConnectionRestModelModelProjectProjPinIdeaStatiCaPlugin

from connection_restapi_client_poc.api_client import ApiClient, RequestSerialized
from connection_restapi_client_poc.api_response import ApiResponse
from connection_restapi_client_poc.rest import RESTResponseType


class MaterialApi:
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None) -> None:
        if api_client is None:
            api_client = ApiClient.get_default()
        self.api_client = api_client


    @validate_call
    def api1_projects_project_id_connections_connection_id_materials_bolt_assemblies_get(
        self,
        project_id: StrictStr,
        connection_id: StrictInt,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> List[IdeaStatiCaPluginApiConnectionRestModelModelProjectProjBoltAssemblyIdeaStatiCaPlugin]:
        """api1_projects_project_id_connections_connection_id_materials_bolt_assemblies_get


        :param project_id: (required)
        :type project_id: str
        :param connection_id: (required)
        :type connection_id: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._api1_projects_project_id_connections_connection_id_materials_bolt_assemblies_get_serialize(
            project_id=project_id,
            connection_id=connection_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "List[IdeaStatiCaPluginApiConnectionRestModelModelProjectProjBoltAssemblyIdeaStatiCaPlugin]",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def api1_projects_project_id_connections_connection_id_materials_bolt_assemblies_get_with_http_info(
        self,
        project_id: StrictStr,
        connection_id: StrictInt,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[List[IdeaStatiCaPluginApiConnectionRestModelModelProjectProjBoltAssemblyIdeaStatiCaPlugin]]:
        """api1_projects_project_id_connections_connection_id_materials_bolt_assemblies_get


        :param project_id: (required)
        :type project_id: str
        :param connection_id: (required)
        :type connection_id: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._api1_projects_project_id_connections_connection_id_materials_bolt_assemblies_get_serialize(
            project_id=project_id,
            connection_id=connection_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "List[IdeaStatiCaPluginApiConnectionRestModelModelProjectProjBoltAssemblyIdeaStatiCaPlugin]",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def api1_projects_project_id_connections_connection_id_materials_bolt_assemblies_get_without_preload_content(
        self,
        project_id: StrictStr,
        connection_id: StrictInt,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """api1_projects_project_id_connections_connection_id_materials_bolt_assemblies_get


        :param project_id: (required)
        :type project_id: str
        :param connection_id: (required)
        :type connection_id: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._api1_projects_project_id_connections_connection_id_materials_bolt_assemblies_get_serialize(
            project_id=project_id,
            connection_id=connection_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "List[IdeaStatiCaPluginApiConnectionRestModelModelProjectProjBoltAssemblyIdeaStatiCaPlugin]",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _api1_projects_project_id_connections_connection_id_materials_bolt_assemblies_get_serialize(
        self,
        project_id,
        connection_id,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, Union[str, bytes]] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if project_id is not None:
            _path_params['projectId'] = project_id
        if connection_id is not None:
            _path_params['connectionId'] = connection_id
        # process the query parameters
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/api/1/projects/{projectId}/connections/{connectionId}/materials/bolt-assemblies',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def api1_projects_project_id_connections_connection_id_materials_bolt_assemblies_post(
        self,
        project_id: StrictStr,
        connection_id: StrictInt,
        idea_stati_ca_plugin_api_connection_rest_model_model_project_proj_bolt_assembly_idea_stati_ca_plugin: Optional[IdeaStatiCaPluginApiConnectionRestModelModelProjectProjBoltAssemblyIdeaStatiCaPlugin] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> IdeaStatiCaPluginApiConnectionRestModelModelProjectProjBoltAssemblyIdeaStatiCaPlugin:
        """api1_projects_project_id_connections_connection_id_materials_bolt_assemblies_post


        :param project_id: (required)
        :type project_id: str
        :param connection_id: (required)
        :type connection_id: int
        :param idea_stati_ca_plugin_api_connection_rest_model_model_project_proj_bolt_assembly_idea_stati_ca_plugin:
        :type idea_stati_ca_plugin_api_connection_rest_model_model_project_proj_bolt_assembly_idea_stati_ca_plugin: IdeaStatiCaPluginApiConnectionRestModelModelProjectProjBoltAssemblyIdeaStatiCaPlugin
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._api1_projects_project_id_connections_connection_id_materials_bolt_assemblies_post_serialize(
            project_id=project_id,
            connection_id=connection_id,
            idea_stati_ca_plugin_api_connection_rest_model_model_project_proj_bolt_assembly_idea_stati_ca_plugin=idea_stati_ca_plugin_api_connection_rest_model_model_project_proj_bolt_assembly_idea_stati_ca_plugin,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "IdeaStatiCaPluginApiConnectionRestModelModelProjectProjBoltAssemblyIdeaStatiCaPlugin",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def api1_projects_project_id_connections_connection_id_materials_bolt_assemblies_post_with_http_info(
        self,
        project_id: StrictStr,
        connection_id: StrictInt,
        idea_stati_ca_plugin_api_connection_rest_model_model_project_proj_bolt_assembly_idea_stati_ca_plugin: Optional[IdeaStatiCaPluginApiConnectionRestModelModelProjectProjBoltAssemblyIdeaStatiCaPlugin] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[IdeaStatiCaPluginApiConnectionRestModelModelProjectProjBoltAssemblyIdeaStatiCaPlugin]:
        """api1_projects_project_id_connections_connection_id_materials_bolt_assemblies_post


        :param project_id: (required)
        :type project_id: str
        :param connection_id: (required)
        :type connection_id: int
        :param idea_stati_ca_plugin_api_connection_rest_model_model_project_proj_bolt_assembly_idea_stati_ca_plugin:
        :type idea_stati_ca_plugin_api_connection_rest_model_model_project_proj_bolt_assembly_idea_stati_ca_plugin: IdeaStatiCaPluginApiConnectionRestModelModelProjectProjBoltAssemblyIdeaStatiCaPlugin
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._api1_projects_project_id_connections_connection_id_materials_bolt_assemblies_post_serialize(
            project_id=project_id,
            connection_id=connection_id,
            idea_stati_ca_plugin_api_connection_rest_model_model_project_proj_bolt_assembly_idea_stati_ca_plugin=idea_stati_ca_plugin_api_connection_rest_model_model_project_proj_bolt_assembly_idea_stati_ca_plugin,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "IdeaStatiCaPluginApiConnectionRestModelModelProjectProjBoltAssemblyIdeaStatiCaPlugin",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def api1_projects_project_id_connections_connection_id_materials_bolt_assemblies_post_without_preload_content(
        self,
        project_id: StrictStr,
        connection_id: StrictInt,
        idea_stati_ca_plugin_api_connection_rest_model_model_project_proj_bolt_assembly_idea_stati_ca_plugin: Optional[IdeaStatiCaPluginApiConnectionRestModelModelProjectProjBoltAssemblyIdeaStatiCaPlugin] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """api1_projects_project_id_connections_connection_id_materials_bolt_assemblies_post


        :param project_id: (required)
        :type project_id: str
        :param connection_id: (required)
        :type connection_id: int
        :param idea_stati_ca_plugin_api_connection_rest_model_model_project_proj_bolt_assembly_idea_stati_ca_plugin:
        :type idea_stati_ca_plugin_api_connection_rest_model_model_project_proj_bolt_assembly_idea_stati_ca_plugin: IdeaStatiCaPluginApiConnectionRestModelModelProjectProjBoltAssemblyIdeaStatiCaPlugin
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._api1_projects_project_id_connections_connection_id_materials_bolt_assemblies_post_serialize(
            project_id=project_id,
            connection_id=connection_id,
            idea_stati_ca_plugin_api_connection_rest_model_model_project_proj_bolt_assembly_idea_stati_ca_plugin=idea_stati_ca_plugin_api_connection_rest_model_model_project_proj_bolt_assembly_idea_stati_ca_plugin,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "IdeaStatiCaPluginApiConnectionRestModelModelProjectProjBoltAssemblyIdeaStatiCaPlugin",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _api1_projects_project_id_connections_connection_id_materials_bolt_assemblies_post_serialize(
        self,
        project_id,
        connection_id,
        idea_stati_ca_plugin_api_connection_rest_model_model_project_proj_bolt_assembly_idea_stati_ca_plugin,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, Union[str, bytes]] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if project_id is not None:
            _path_params['projectId'] = project_id
        if connection_id is not None:
            _path_params['connectionId'] = connection_id
        # process the query parameters
        # process the header parameters
        # process the form parameters
        # process the body parameter
        if idea_stati_ca_plugin_api_connection_rest_model_model_project_proj_bolt_assembly_idea_stati_ca_plugin is not None:
            _body_params = idea_stati_ca_plugin_api_connection_rest_model_model_project_proj_bolt_assembly_idea_stati_ca_plugin


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/xml', 
                        'text/xml', 
                        'application/*+xml', 
                        'application/json-patch+json', 
                        'application/json', 
                        'text/json', 
                        'application/*+json'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
        ]

        return self.api_client.param_serialize(
            method='POST',
            resource_path='/api/1/projects/{projectId}/connections/{connectionId}/materials/bolt-assemblies',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def api1_projects_project_id_connections_connection_id_materials_cross_sections_get(
        self,
        project_id: StrictStr,
        connection_id: StrictInt,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> List[IdeaStatiCaPluginApiConnectionRestModelModelProjectProjCrossSectionIdeaStatiCaPlugin]:
        """api1_projects_project_id_connections_connection_id_materials_cross_sections_get


        :param project_id: (required)
        :type project_id: str
        :param connection_id: (required)
        :type connection_id: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._api1_projects_project_id_connections_connection_id_materials_cross_sections_get_serialize(
            project_id=project_id,
            connection_id=connection_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "List[IdeaStatiCaPluginApiConnectionRestModelModelProjectProjCrossSectionIdeaStatiCaPlugin]",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def api1_projects_project_id_connections_connection_id_materials_cross_sections_get_with_http_info(
        self,
        project_id: StrictStr,
        connection_id: StrictInt,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[List[IdeaStatiCaPluginApiConnectionRestModelModelProjectProjCrossSectionIdeaStatiCaPlugin]]:
        """api1_projects_project_id_connections_connection_id_materials_cross_sections_get


        :param project_id: (required)
        :type project_id: str
        :param connection_id: (required)
        :type connection_id: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._api1_projects_project_id_connections_connection_id_materials_cross_sections_get_serialize(
            project_id=project_id,
            connection_id=connection_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "List[IdeaStatiCaPluginApiConnectionRestModelModelProjectProjCrossSectionIdeaStatiCaPlugin]",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def api1_projects_project_id_connections_connection_id_materials_cross_sections_get_without_preload_content(
        self,
        project_id: StrictStr,
        connection_id: StrictInt,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """api1_projects_project_id_connections_connection_id_materials_cross_sections_get


        :param project_id: (required)
        :type project_id: str
        :param connection_id: (required)
        :type connection_id: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._api1_projects_project_id_connections_connection_id_materials_cross_sections_get_serialize(
            project_id=project_id,
            connection_id=connection_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "List[IdeaStatiCaPluginApiConnectionRestModelModelProjectProjCrossSectionIdeaStatiCaPlugin]",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _api1_projects_project_id_connections_connection_id_materials_cross_sections_get_serialize(
        self,
        project_id,
        connection_id,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, Union[str, bytes]] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if project_id is not None:
            _path_params['projectId'] = project_id
        if connection_id is not None:
            _path_params['connectionId'] = connection_id
        # process the query parameters
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/api/1/projects/{projectId}/connections/{connectionId}/materials/cross-sections',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def api1_projects_project_id_connections_connection_id_materials_cross_sections_post(
        self,
        project_id: StrictStr,
        connection_id: StrictInt,
        idea_stati_ca_plugin_api_connection_rest_model_model_project_proj_cross_section_idea_stati_ca_plugin: Optional[IdeaStatiCaPluginApiConnectionRestModelModelProjectProjCrossSectionIdeaStatiCaPlugin] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> IdeaStatiCaPluginApiConnectionRestModelModelProjectProjCrossSectionIdeaStatiCaPlugin:
        """api1_projects_project_id_connections_connection_id_materials_cross_sections_post


        :param project_id: (required)
        :type project_id: str
        :param connection_id: (required)
        :type connection_id: int
        :param idea_stati_ca_plugin_api_connection_rest_model_model_project_proj_cross_section_idea_stati_ca_plugin:
        :type idea_stati_ca_plugin_api_connection_rest_model_model_project_proj_cross_section_idea_stati_ca_plugin: IdeaStatiCaPluginApiConnectionRestModelModelProjectProjCrossSectionIdeaStatiCaPlugin
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._api1_projects_project_id_connections_connection_id_materials_cross_sections_post_serialize(
            project_id=project_id,
            connection_id=connection_id,
            idea_stati_ca_plugin_api_connection_rest_model_model_project_proj_cross_section_idea_stati_ca_plugin=idea_stati_ca_plugin_api_connection_rest_model_model_project_proj_cross_section_idea_stati_ca_plugin,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "IdeaStatiCaPluginApiConnectionRestModelModelProjectProjCrossSectionIdeaStatiCaPlugin",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def api1_projects_project_id_connections_connection_id_materials_cross_sections_post_with_http_info(
        self,
        project_id: StrictStr,
        connection_id: StrictInt,
        idea_stati_ca_plugin_api_connection_rest_model_model_project_proj_cross_section_idea_stati_ca_plugin: Optional[IdeaStatiCaPluginApiConnectionRestModelModelProjectProjCrossSectionIdeaStatiCaPlugin] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[IdeaStatiCaPluginApiConnectionRestModelModelProjectProjCrossSectionIdeaStatiCaPlugin]:
        """api1_projects_project_id_connections_connection_id_materials_cross_sections_post


        :param project_id: (required)
        :type project_id: str
        :param connection_id: (required)
        :type connection_id: int
        :param idea_stati_ca_plugin_api_connection_rest_model_model_project_proj_cross_section_idea_stati_ca_plugin:
        :type idea_stati_ca_plugin_api_connection_rest_model_model_project_proj_cross_section_idea_stati_ca_plugin: IdeaStatiCaPluginApiConnectionRestModelModelProjectProjCrossSectionIdeaStatiCaPlugin
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._api1_projects_project_id_connections_connection_id_materials_cross_sections_post_serialize(
            project_id=project_id,
            connection_id=connection_id,
            idea_stati_ca_plugin_api_connection_rest_model_model_project_proj_cross_section_idea_stati_ca_plugin=idea_stati_ca_plugin_api_connection_rest_model_model_project_proj_cross_section_idea_stati_ca_plugin,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "IdeaStatiCaPluginApiConnectionRestModelModelProjectProjCrossSectionIdeaStatiCaPlugin",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def api1_projects_project_id_connections_connection_id_materials_cross_sections_post_without_preload_content(
        self,
        project_id: StrictStr,
        connection_id: StrictInt,
        idea_stati_ca_plugin_api_connection_rest_model_model_project_proj_cross_section_idea_stati_ca_plugin: Optional[IdeaStatiCaPluginApiConnectionRestModelModelProjectProjCrossSectionIdeaStatiCaPlugin] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """api1_projects_project_id_connections_connection_id_materials_cross_sections_post


        :param project_id: (required)
        :type project_id: str
        :param connection_id: (required)
        :type connection_id: int
        :param idea_stati_ca_plugin_api_connection_rest_model_model_project_proj_cross_section_idea_stati_ca_plugin:
        :type idea_stati_ca_plugin_api_connection_rest_model_model_project_proj_cross_section_idea_stati_ca_plugin: IdeaStatiCaPluginApiConnectionRestModelModelProjectProjCrossSectionIdeaStatiCaPlugin
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._api1_projects_project_id_connections_connection_id_materials_cross_sections_post_serialize(
            project_id=project_id,
            connection_id=connection_id,
            idea_stati_ca_plugin_api_connection_rest_model_model_project_proj_cross_section_idea_stati_ca_plugin=idea_stati_ca_plugin_api_connection_rest_model_model_project_proj_cross_section_idea_stati_ca_plugin,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "IdeaStatiCaPluginApiConnectionRestModelModelProjectProjCrossSectionIdeaStatiCaPlugin",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _api1_projects_project_id_connections_connection_id_materials_cross_sections_post_serialize(
        self,
        project_id,
        connection_id,
        idea_stati_ca_plugin_api_connection_rest_model_model_project_proj_cross_section_idea_stati_ca_plugin,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, Union[str, bytes]] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if project_id is not None:
            _path_params['projectId'] = project_id
        if connection_id is not None:
            _path_params['connectionId'] = connection_id
        # process the query parameters
        # process the header parameters
        # process the form parameters
        # process the body parameter
        if idea_stati_ca_plugin_api_connection_rest_model_model_project_proj_cross_section_idea_stati_ca_plugin is not None:
            _body_params = idea_stati_ca_plugin_api_connection_rest_model_model_project_proj_cross_section_idea_stati_ca_plugin


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/xml', 
                        'text/xml', 
                        'application/*+xml', 
                        'application/json-patch+json', 
                        'application/json', 
                        'text/json', 
                        'application/*+json'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
        ]

        return self.api_client.param_serialize(
            method='POST',
            resource_path='/api/1/projects/{projectId}/connections/{connectionId}/materials/cross-sections',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def api1_projects_project_id_connections_connection_id_materials_get(
        self,
        project_id: StrictStr,
        connection_id: StrictInt,
        type: Optional[IdeaRSWsLibCssServiceMaterialTypeCIBasicTypes] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> List[IdeaStatiCaPluginApiConnectionRestModelModelProjectProjMaterialIdeaStatiCaPlugin]:
        """api1_projects_project_id_connections_connection_id_materials_get


        :param project_id: (required)
        :type project_id: str
        :param connection_id: (required)
        :type connection_id: int
        :param type:
        :type type: IdeaRSWsLibCssServiceMaterialTypeCIBasicTypes
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._api1_projects_project_id_connections_connection_id_materials_get_serialize(
            project_id=project_id,
            connection_id=connection_id,
            type=type,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "List[IdeaStatiCaPluginApiConnectionRestModelModelProjectProjMaterialIdeaStatiCaPlugin]",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def api1_projects_project_id_connections_connection_id_materials_get_with_http_info(
        self,
        project_id: StrictStr,
        connection_id: StrictInt,
        type: Optional[IdeaRSWsLibCssServiceMaterialTypeCIBasicTypes] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[List[IdeaStatiCaPluginApiConnectionRestModelModelProjectProjMaterialIdeaStatiCaPlugin]]:
        """api1_projects_project_id_connections_connection_id_materials_get


        :param project_id: (required)
        :type project_id: str
        :param connection_id: (required)
        :type connection_id: int
        :param type:
        :type type: IdeaRSWsLibCssServiceMaterialTypeCIBasicTypes
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._api1_projects_project_id_connections_connection_id_materials_get_serialize(
            project_id=project_id,
            connection_id=connection_id,
            type=type,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "List[IdeaStatiCaPluginApiConnectionRestModelModelProjectProjMaterialIdeaStatiCaPlugin]",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def api1_projects_project_id_connections_connection_id_materials_get_without_preload_content(
        self,
        project_id: StrictStr,
        connection_id: StrictInt,
        type: Optional[IdeaRSWsLibCssServiceMaterialTypeCIBasicTypes] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """api1_projects_project_id_connections_connection_id_materials_get


        :param project_id: (required)
        :type project_id: str
        :param connection_id: (required)
        :type connection_id: int
        :param type:
        :type type: IdeaRSWsLibCssServiceMaterialTypeCIBasicTypes
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._api1_projects_project_id_connections_connection_id_materials_get_serialize(
            project_id=project_id,
            connection_id=connection_id,
            type=type,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "List[IdeaStatiCaPluginApiConnectionRestModelModelProjectProjMaterialIdeaStatiCaPlugin]",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _api1_projects_project_id_connections_connection_id_materials_get_serialize(
        self,
        project_id,
        connection_id,
        type,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, Union[str, bytes]] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if project_id is not None:
            _path_params['projectId'] = project_id
        if connection_id is not None:
            _path_params['connectionId'] = connection_id
        # process the query parameters
        if type is not None:
            
            _query_params.append(('type', type.value))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/api/1/projects/{projectId}/connections/{connectionId}/materials',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def api1_projects_project_id_connections_connection_id_materials_pins_get(
        self,
        project_id: StrictStr,
        connection_id: StrictInt,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> List[IdeaStatiCaPluginApiConnectionRestModelModelProjectProjPinIdeaStatiCaPlugin]:
        """api1_projects_project_id_connections_connection_id_materials_pins_get


        :param project_id: (required)
        :type project_id: str
        :param connection_id: (required)
        :type connection_id: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._api1_projects_project_id_connections_connection_id_materials_pins_get_serialize(
            project_id=project_id,
            connection_id=connection_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "List[IdeaStatiCaPluginApiConnectionRestModelModelProjectProjPinIdeaStatiCaPlugin]",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def api1_projects_project_id_connections_connection_id_materials_pins_get_with_http_info(
        self,
        project_id: StrictStr,
        connection_id: StrictInt,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[List[IdeaStatiCaPluginApiConnectionRestModelModelProjectProjPinIdeaStatiCaPlugin]]:
        """api1_projects_project_id_connections_connection_id_materials_pins_get


        :param project_id: (required)
        :type project_id: str
        :param connection_id: (required)
        :type connection_id: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._api1_projects_project_id_connections_connection_id_materials_pins_get_serialize(
            project_id=project_id,
            connection_id=connection_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "List[IdeaStatiCaPluginApiConnectionRestModelModelProjectProjPinIdeaStatiCaPlugin]",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def api1_projects_project_id_connections_connection_id_materials_pins_get_without_preload_content(
        self,
        project_id: StrictStr,
        connection_id: StrictInt,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """api1_projects_project_id_connections_connection_id_materials_pins_get


        :param project_id: (required)
        :type project_id: str
        :param connection_id: (required)
        :type connection_id: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._api1_projects_project_id_connections_connection_id_materials_pins_get_serialize(
            project_id=project_id,
            connection_id=connection_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "List[IdeaStatiCaPluginApiConnectionRestModelModelProjectProjPinIdeaStatiCaPlugin]",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _api1_projects_project_id_connections_connection_id_materials_pins_get_serialize(
        self,
        project_id,
        connection_id,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, Union[str, bytes]] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if project_id is not None:
            _path_params['projectId'] = project_id
        if connection_id is not None:
            _path_params['connectionId'] = connection_id
        # process the query parameters
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/api/1/projects/{projectId}/connections/{connectionId}/materials/pins',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def api1_projects_project_id_connections_connection_id_materials_pins_post(
        self,
        project_id: StrictStr,
        connection_id: StrictInt,
        idea_stati_ca_plugin_api_connection_rest_model_model_project_proj_material_idea_stati_ca_plugin: Optional[IdeaStatiCaPluginApiConnectionRestModelModelProjectProjMaterialIdeaStatiCaPlugin] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> IdeaStatiCaPluginApiConnectionRestModelModelProjectProjPinIdeaStatiCaPlugin:
        """api1_projects_project_id_connections_connection_id_materials_pins_post


        :param project_id: (required)
        :type project_id: str
        :param connection_id: (required)
        :type connection_id: int
        :param idea_stati_ca_plugin_api_connection_rest_model_model_project_proj_material_idea_stati_ca_plugin:
        :type idea_stati_ca_plugin_api_connection_rest_model_model_project_proj_material_idea_stati_ca_plugin: IdeaStatiCaPluginApiConnectionRestModelModelProjectProjMaterialIdeaStatiCaPlugin
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._api1_projects_project_id_connections_connection_id_materials_pins_post_serialize(
            project_id=project_id,
            connection_id=connection_id,
            idea_stati_ca_plugin_api_connection_rest_model_model_project_proj_material_idea_stati_ca_plugin=idea_stati_ca_plugin_api_connection_rest_model_model_project_proj_material_idea_stati_ca_plugin,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "IdeaStatiCaPluginApiConnectionRestModelModelProjectProjPinIdeaStatiCaPlugin",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def api1_projects_project_id_connections_connection_id_materials_pins_post_with_http_info(
        self,
        project_id: StrictStr,
        connection_id: StrictInt,
        idea_stati_ca_plugin_api_connection_rest_model_model_project_proj_material_idea_stati_ca_plugin: Optional[IdeaStatiCaPluginApiConnectionRestModelModelProjectProjMaterialIdeaStatiCaPlugin] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[IdeaStatiCaPluginApiConnectionRestModelModelProjectProjPinIdeaStatiCaPlugin]:
        """api1_projects_project_id_connections_connection_id_materials_pins_post


        :param project_id: (required)
        :type project_id: str
        :param connection_id: (required)
        :type connection_id: int
        :param idea_stati_ca_plugin_api_connection_rest_model_model_project_proj_material_idea_stati_ca_plugin:
        :type idea_stati_ca_plugin_api_connection_rest_model_model_project_proj_material_idea_stati_ca_plugin: IdeaStatiCaPluginApiConnectionRestModelModelProjectProjMaterialIdeaStatiCaPlugin
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._api1_projects_project_id_connections_connection_id_materials_pins_post_serialize(
            project_id=project_id,
            connection_id=connection_id,
            idea_stati_ca_plugin_api_connection_rest_model_model_project_proj_material_idea_stati_ca_plugin=idea_stati_ca_plugin_api_connection_rest_model_model_project_proj_material_idea_stati_ca_plugin,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "IdeaStatiCaPluginApiConnectionRestModelModelProjectProjPinIdeaStatiCaPlugin",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def api1_projects_project_id_connections_connection_id_materials_pins_post_without_preload_content(
        self,
        project_id: StrictStr,
        connection_id: StrictInt,
        idea_stati_ca_plugin_api_connection_rest_model_model_project_proj_material_idea_stati_ca_plugin: Optional[IdeaStatiCaPluginApiConnectionRestModelModelProjectProjMaterialIdeaStatiCaPlugin] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """api1_projects_project_id_connections_connection_id_materials_pins_post


        :param project_id: (required)
        :type project_id: str
        :param connection_id: (required)
        :type connection_id: int
        :param idea_stati_ca_plugin_api_connection_rest_model_model_project_proj_material_idea_stati_ca_plugin:
        :type idea_stati_ca_plugin_api_connection_rest_model_model_project_proj_material_idea_stati_ca_plugin: IdeaStatiCaPluginApiConnectionRestModelModelProjectProjMaterialIdeaStatiCaPlugin
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._api1_projects_project_id_connections_connection_id_materials_pins_post_serialize(
            project_id=project_id,
            connection_id=connection_id,
            idea_stati_ca_plugin_api_connection_rest_model_model_project_proj_material_idea_stati_ca_plugin=idea_stati_ca_plugin_api_connection_rest_model_model_project_proj_material_idea_stati_ca_plugin,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "IdeaStatiCaPluginApiConnectionRestModelModelProjectProjPinIdeaStatiCaPlugin",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _api1_projects_project_id_connections_connection_id_materials_pins_post_serialize(
        self,
        project_id,
        connection_id,
        idea_stati_ca_plugin_api_connection_rest_model_model_project_proj_material_idea_stati_ca_plugin,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, Union[str, bytes]] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if project_id is not None:
            _path_params['projectId'] = project_id
        if connection_id is not None:
            _path_params['connectionId'] = connection_id
        # process the query parameters
        # process the header parameters
        # process the form parameters
        # process the body parameter
        if idea_stati_ca_plugin_api_connection_rest_model_model_project_proj_material_idea_stati_ca_plugin is not None:
            _body_params = idea_stati_ca_plugin_api_connection_rest_model_model_project_proj_material_idea_stati_ca_plugin


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/xml', 
                        'text/xml', 
                        'application/*+xml', 
                        'application/json-patch+json', 
                        'application/json', 
                        'text/json', 
                        'application/*+json'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
        ]

        return self.api_client.param_serialize(
            method='POST',
            resource_path='/api/1/projects/{projectId}/connections/{connectionId}/materials/pins',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def api1_projects_project_id_connections_connection_id_materials_post(
        self,
        project_id: StrictStr,
        connection_id: StrictInt,
        idea_stati_ca_plugin_api_connection_rest_model_model_project_proj_material_idea_stati_ca_plugin: Optional[IdeaStatiCaPluginApiConnectionRestModelModelProjectProjMaterialIdeaStatiCaPlugin] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> IdeaStatiCaPluginApiConnectionRestModelModelProjectProjMaterialIdeaStatiCaPlugin:
        """api1_projects_project_id_connections_connection_id_materials_post


        :param project_id: (required)
        :type project_id: str
        :param connection_id: (required)
        :type connection_id: int
        :param idea_stati_ca_plugin_api_connection_rest_model_model_project_proj_material_idea_stati_ca_plugin:
        :type idea_stati_ca_plugin_api_connection_rest_model_model_project_proj_material_idea_stati_ca_plugin: IdeaStatiCaPluginApiConnectionRestModelModelProjectProjMaterialIdeaStatiCaPlugin
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._api1_projects_project_id_connections_connection_id_materials_post_serialize(
            project_id=project_id,
            connection_id=connection_id,
            idea_stati_ca_plugin_api_connection_rest_model_model_project_proj_material_idea_stati_ca_plugin=idea_stati_ca_plugin_api_connection_rest_model_model_project_proj_material_idea_stati_ca_plugin,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "IdeaStatiCaPluginApiConnectionRestModelModelProjectProjMaterialIdeaStatiCaPlugin",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def api1_projects_project_id_connections_connection_id_materials_post_with_http_info(
        self,
        project_id: StrictStr,
        connection_id: StrictInt,
        idea_stati_ca_plugin_api_connection_rest_model_model_project_proj_material_idea_stati_ca_plugin: Optional[IdeaStatiCaPluginApiConnectionRestModelModelProjectProjMaterialIdeaStatiCaPlugin] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[IdeaStatiCaPluginApiConnectionRestModelModelProjectProjMaterialIdeaStatiCaPlugin]:
        """api1_projects_project_id_connections_connection_id_materials_post


        :param project_id: (required)
        :type project_id: str
        :param connection_id: (required)
        :type connection_id: int
        :param idea_stati_ca_plugin_api_connection_rest_model_model_project_proj_material_idea_stati_ca_plugin:
        :type idea_stati_ca_plugin_api_connection_rest_model_model_project_proj_material_idea_stati_ca_plugin: IdeaStatiCaPluginApiConnectionRestModelModelProjectProjMaterialIdeaStatiCaPlugin
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._api1_projects_project_id_connections_connection_id_materials_post_serialize(
            project_id=project_id,
            connection_id=connection_id,
            idea_stati_ca_plugin_api_connection_rest_model_model_project_proj_material_idea_stati_ca_plugin=idea_stati_ca_plugin_api_connection_rest_model_model_project_proj_material_idea_stati_ca_plugin,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "IdeaStatiCaPluginApiConnectionRestModelModelProjectProjMaterialIdeaStatiCaPlugin",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def api1_projects_project_id_connections_connection_id_materials_post_without_preload_content(
        self,
        project_id: StrictStr,
        connection_id: StrictInt,
        idea_stati_ca_plugin_api_connection_rest_model_model_project_proj_material_idea_stati_ca_plugin: Optional[IdeaStatiCaPluginApiConnectionRestModelModelProjectProjMaterialIdeaStatiCaPlugin] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """api1_projects_project_id_connections_connection_id_materials_post


        :param project_id: (required)
        :type project_id: str
        :param connection_id: (required)
        :type connection_id: int
        :param idea_stati_ca_plugin_api_connection_rest_model_model_project_proj_material_idea_stati_ca_plugin:
        :type idea_stati_ca_plugin_api_connection_rest_model_model_project_proj_material_idea_stati_ca_plugin: IdeaStatiCaPluginApiConnectionRestModelModelProjectProjMaterialIdeaStatiCaPlugin
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._api1_projects_project_id_connections_connection_id_materials_post_serialize(
            project_id=project_id,
            connection_id=connection_id,
            idea_stati_ca_plugin_api_connection_rest_model_model_project_proj_material_idea_stati_ca_plugin=idea_stati_ca_plugin_api_connection_rest_model_model_project_proj_material_idea_stati_ca_plugin,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "IdeaStatiCaPluginApiConnectionRestModelModelProjectProjMaterialIdeaStatiCaPlugin",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _api1_projects_project_id_connections_connection_id_materials_post_serialize(
        self,
        project_id,
        connection_id,
        idea_stati_ca_plugin_api_connection_rest_model_model_project_proj_material_idea_stati_ca_plugin,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, Union[str, bytes]] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if project_id is not None:
            _path_params['projectId'] = project_id
        if connection_id is not None:
            _path_params['connectionId'] = connection_id
        # process the query parameters
        # process the header parameters
        # process the form parameters
        # process the body parameter
        if idea_stati_ca_plugin_api_connection_rest_model_model_project_proj_material_idea_stati_ca_plugin is not None:
            _body_params = idea_stati_ca_plugin_api_connection_rest_model_model_project_proj_material_idea_stati_ca_plugin


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/xml', 
                        'text/xml', 
                        'application/*+xml', 
                        'application/json-patch+json', 
                        'application/json', 
                        'text/json', 
                        'application/*+json'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
        ]

        return self.api_client.param_serialize(
            method='POST',
            resource_path='/api/1/projects/{projectId}/connections/{connectionId}/materials',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )


