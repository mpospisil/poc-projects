/*
 * Connection Rest API 1.0
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = connection_restapi_client_poc.Client.OpenAPIDateConverter;

namespace connection_restapi_client_poc.Model
{
    /// <summary>
    /// ConMissingWeld
    /// </summary>
    [DataContract(Name = "ConMissingWeld")]
    public partial class ConMissingWeld : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ConMissingWeld" /> class.
        /// </summary>
        /// <param name="edgePlate">edgePlate.</param>
        /// <param name="surfacePlate">surfacePlate.</param>
        /// <param name="edgeIndex">edgeIndex.</param>
        /// <param name="surfaceIndex">surfaceIndex.</param>
        /// <param name="weldSize">weldSize.</param>
        /// <param name="weldTypeCode">weldTypeCode.</param>
        /// <param name="weldMaterialName">weldMaterialName.</param>
        /// <param name="isHollowOrUncoiledSection">isHollowOrUncoiledSection.</param>
        public ConMissingWeld(string edgePlate = default(string), string surfacePlate = default(string), int edgeIndex = default(int), int surfaceIndex = default(int), double weldSize = default(double), string weldTypeCode = default(string), string weldMaterialName = default(string), bool isHollowOrUncoiledSection = default(bool))
        {
            this.EdgePlate = edgePlate;
            this.SurfacePlate = surfacePlate;
            this.EdgeIndex = edgeIndex;
            this.SurfaceIndex = surfaceIndex;
            this.WeldSize = weldSize;
            this.WeldTypeCode = weldTypeCode;
            this.WeldMaterialName = weldMaterialName;
            this.IsHollowOrUncoiledSection = isHollowOrUncoiledSection;
        }

        /// <summary>
        /// Gets or Sets EdgePlate
        /// </summary>
        [DataMember(Name = "edgePlate", EmitDefaultValue = true)]
        public string EdgePlate { get; set; }

        /// <summary>
        /// Gets or Sets SurfacePlate
        /// </summary>
        [DataMember(Name = "surfacePlate", EmitDefaultValue = true)]
        public string SurfacePlate { get; set; }

        /// <summary>
        /// Gets or Sets EdgeIndex
        /// </summary>
        [DataMember(Name = "edgeIndex", EmitDefaultValue = false)]
        public int EdgeIndex { get; set; }

        /// <summary>
        /// Gets or Sets SurfaceIndex
        /// </summary>
        [DataMember(Name = "surfaceIndex", EmitDefaultValue = false)]
        public int SurfaceIndex { get; set; }

        /// <summary>
        /// Gets or Sets WeldSize
        /// </summary>
        [DataMember(Name = "weldSize", EmitDefaultValue = false)]
        public double WeldSize { get; set; }

        /// <summary>
        /// Gets or Sets WeldTypeCode
        /// </summary>
        [DataMember(Name = "weldTypeCode", EmitDefaultValue = true)]
        public string WeldTypeCode { get; set; }

        /// <summary>
        /// Gets or Sets WeldMaterialName
        /// </summary>
        [DataMember(Name = "weldMaterialName", EmitDefaultValue = true)]
        public string WeldMaterialName { get; set; }

        /// <summary>
        /// Gets or Sets IsHollowOrUncoiledSection
        /// </summary>
        [DataMember(Name = "isHollow_OrUncoiledSection", EmitDefaultValue = true)]
        public bool IsHollowOrUncoiledSection { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ConMissingWeld {\n");
            sb.Append("  EdgePlate: ").Append(EdgePlate).Append("\n");
            sb.Append("  SurfacePlate: ").Append(SurfacePlate).Append("\n");
            sb.Append("  EdgeIndex: ").Append(EdgeIndex).Append("\n");
            sb.Append("  SurfaceIndex: ").Append(SurfaceIndex).Append("\n");
            sb.Append("  WeldSize: ").Append(WeldSize).Append("\n");
            sb.Append("  WeldTypeCode: ").Append(WeldTypeCode).Append("\n");
            sb.Append("  WeldMaterialName: ").Append(WeldMaterialName).Append("\n");
            sb.Append("  IsHollowOrUncoiledSection: ").Append(IsHollowOrUncoiledSection).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
