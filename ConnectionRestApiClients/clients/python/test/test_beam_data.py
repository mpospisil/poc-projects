# coding: utf-8

"""
    Connection Rest API 1.0

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from connection_restapi_client_poc.models.beam_data import BeamData

class TestBeamData(unittest.TestCase):
    """BeamData unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BeamData:
        """Test BeamData
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BeamData`
        """
        model = BeamData()
        if include_optional:
            return BeamData(
                name = '',
                plates = [
                    connection_restapi_client_poc.models.plate_data.PlateData(
                        name = '', 
                        thickness = 1.337, 
                        material = '', 
                        outline_points = [
                            connection_restapi_client_poc.models.point2_d.Point2D(
                                x = 1.337, 
                                y = 1.337, )
                            ], 
                        origin = connection_restapi_client_poc.models.point3_d.Point3D(
                            x = 1.337, 
                            y = 1.337, 
                            z = 1.337, 
                            id = 56, ), 
                        axis_x = connection_restapi_client_poc.models.vector3_d.Vector3D(
                            x = 1.337, 
                            y = 1.337, 
                            z = 1.337, ), 
                        axis_y = connection_restapi_client_poc.models.vector3_d.Vector3D(
                            x = 1.337, 
                            y = 1.337, 
                            z = 1.337, ), 
                        axis_z = , 
                        region = '', 
                        geometry = connection_restapi_client_poc.models.region2_d.Region2D(
                            outline = connection_restapi_client_poc.models.poly_line2_d.PolyLine2D(
                                start_point = connection_restapi_client_poc.models.point2_d.Point2D(
                                    x = 1.337, 
                                    y = 1.337, ), 
                                segments = [
                                    connection_restapi_client_poc.models.segment2_d.Segment2D(
                                        end_point = , )
                                    ], ), 
                            openings = [
                                connection_restapi_client_poc.models.poly_line2_d.PolyLine2D()
                                ], ), 
                        original_model_id = '', 
                        is_negative_object = True, 
                        id = 56, )
                    ],
                cross_section_type = '',
                mprl_name = '',
                original_model_id = '',
                cuts = [
                    connection_restapi_client_poc.models.cut_data.CutData(
                        plane_point = connection_restapi_client_poc.models.point3_d.Point3D(
                            x = 1.337, 
                            y = 1.337, 
                            z = 1.337, 
                            id = 56, ), 
                        normal_vector = connection_restapi_client_poc.models.vector3_d.Vector3D(
                            x = 1.337, 
                            y = 1.337, 
                            z = 1.337, ), 
                        direction = 'default', 
                        offset = 1.337, )
                    ],
                is_added = True,
                added_member_length = 1.337,
                is_negative_object = True,
                added_member = connection_restapi_client_poc.models.reference_element.ReferenceElement(
                    type_name = '', 
                    id = 56, 
                    element = connection_restapi_client_poc.models.open_element_id.OpenElementId(
                        id = 56, ), ),
                mirror_y = True,
                ref_line_in_center_of_gravity = True,
                is_bearing_member = True,
                auto_add_cut_by_workplane = True,
                id = 56
            )
        else:
            return BeamData(
        )
        """

    def testBeamData(self):
        """Test BeamData"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
