# coding: utf-8

"""
    Connection Rest API 1.0

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from connection_restapi_client_poc.models.tendon_bar import TendonBar

class TestTendonBar(unittest.TestCase):
    """TendonBar unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TendonBar:
        """Test TendonBar
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TendonBar`
        """
        model = TendonBar()
        if include_optional:
            return TendonBar(
                id = 56,
                tendon_type = 'posttensioned',
                point = connection_restapi_client_poc.models.point2_d.Point2D(
                    x = 1.337, 
                    y = 1.337, ),
                material = connection_restapi_client_poc.models.reference_element.ReferenceElement(
                    type_name = '', 
                    id = 56, 
                    element = connection_restapi_client_poc.models.open_element_id.OpenElementId(
                        id = 56, ), ),
                prestressing_order = 56,
                num_strands_in_tendon = 56,
                prestress_reinforcement_type = 'postTensioningSingleStrandsInPlasticDucts',
                phase = 56,
                tendon_duct = connection_restapi_client_poc.models.tendon_duct.TendonDuct(
                    id = 56, 
                    point = connection_restapi_client_poc.models.point2_d.Point2D(
                        x = 1.337, 
                        y = 1.337, ), 
                    material_duct = 'metal', 
                    is_debonding_tube = True, 
                    diameter = 1.337, )
            )
        else:
            return TendonBar(
        )
        """

    def testTendonBar(self):
        """Test TendonBar"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
