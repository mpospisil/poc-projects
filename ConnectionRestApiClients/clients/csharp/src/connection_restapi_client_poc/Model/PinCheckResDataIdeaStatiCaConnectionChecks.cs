/*
 * Connection Rest API 1.0
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = connection_restapi_client_poc.Client.OpenAPIDateConverter;

namespace connection_restapi_client_poc.Model
{
    /// <summary>
    /// PinCheckResDataIdeaStatiCaConnectionChecks
    /// </summary>
    [DataContract(Name = "PinCheckResData-IdeaStatiCa_ConnectionChecks")]
    public partial class PinCheckResDataIdeaStatiCaConnectionChecks : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PinCheckResDataIdeaStatiCaConnectionChecks" /> class.
        /// </summary>
        /// <param name="pinAssemblyName">pinAssemblyName.</param>
        /// <param name="pinShearResistance">pinShearResistance.</param>
        /// <param name="pinBearingResistance">pinBearingResistance.</param>
        /// <param name="pinReplaceableBearingResistance">pinReplaceableBearingResistance.</param>
        /// <param name="pinBendingResistance">pinBendingResistance.</param>
        /// <param name="pinReplaceableBendingResistance">pinReplaceableBendingResistance.</param>
        /// <param name="pinCombinedShearAndBendingResistance">pinCombinedShearAndBendingResistance.</param>
        /// <param name="contactBearingStress">contactBearingStress.</param>
        /// <param name="contactBearingResistance">contactBearingResistance.</param>
        /// <param name="unityCheckPinShear">unityCheckPinShear.</param>
        /// <param name="unityCheckPinBearing">unityCheckPinBearing.</param>
        /// <param name="unityCheckPinReplaceableBearing">unityCheckPinReplaceableBearing.</param>
        /// <param name="unityCheckPinBearingDecisive">unityCheckPinBearingDecisive.</param>
        /// <param name="unityCheckPinBending">unityCheckPinBending.</param>
        /// <param name="unityCheckPinReplaceableBending">unityCheckPinReplaceableBending.</param>
        /// <param name="unityCheckPinBendingDecisive">unityCheckPinBendingDecisive.</param>
        /// <param name="unityCheckPinCombinedShearAndBending">unityCheckPinCombinedShearAndBending.</param>
        /// <param name="unityCheckPinReplaceableContactBearing">unityCheckPinReplaceableContactBearing.</param>
        /// <param name="maxUnityCheckShear">maxUnityCheckShear.</param>
        /// <param name="isPinReplaceable">isPinReplaceable.</param>
        /// <param name="pinAllElementsAllSectionsForcesForDiagram">pinAllElementsAllSectionsForcesForDiagram.</param>
        /// <param name="pinShearForces">pinShearForces.</param>
        /// <param name="pinBearingForces">pinBearingForces.</param>
        /// <param name="pinBearingForcesByPlateID">pinBearingForcesByPlateID.</param>
        /// <param name="pinBendingForces">pinBendingForces.</param>
        /// <param name="pinShearForce">pinShearForce.</param>
        /// <param name="pinBearingForceForBearing">pinBearingForceForBearing.</param>
        /// <param name="pinBendingForce">pinBendingForce.</param>
        /// <param name="pinCrossSectionalArea">pinCrossSectionalArea.</param>
        /// <param name="pinSectionModulus">pinSectionModulus.</param>
        /// <param name="pinDiameter">pinDiameter.</param>
        /// <param name="pinHoleDiameter">pinHoleDiameter.</param>
        /// <param name="pinUltimateTensileStrength">pinUltimateTensileStrength.</param>
        /// <param name="pinYieldStrength">pinYieldStrength.</param>
        /// <param name="connectedPartYieldStrength">connectedPartYieldStrength.</param>
        /// <param name="connectedPartThicknessForBearing">connectedPartThicknessForBearing.</param>
        /// <param name="decisiveYieldStrengthForBearing">decisiveYieldStrengthForBearing.</param>
        /// <param name="modulusOfElasticityForContactBearing">modulusOfElasticityForContactBearing.</param>
        /// <param name="yieldStrengthForContactBearing">yieldStrengthForContactBearing.</param>
        /// <param name="connectedPartThicknessForContactBearing">connectedPartThicknessForContactBearing.</param>
        /// <param name="pinBearingForceForContactBearing">pinBearingForceForContactBearing.</param>
        /// <param name="gammaM0">gammaM0.</param>
        /// <param name="gammaM2">gammaM2.</param>
        /// <param name="gammaM6ser">gammaM6ser.</param>
        /// <param name="gammaMfi">gammaMfi.</param>
        /// <param name="isFireDesign">isFireDesign.</param>
        /// <param name="fireTemperature">fireTemperature.</param>
        /// <param name="factorKbTheta">factorKbTheta.</param>
        /// <param name="detailingChecksPin">detailingChecksPin.</param>
        /// <param name="isDetailingStatusOK">isDetailingStatusOK.</param>
        /// <param name="isDetailingStatusForReportOK">isDetailingStatusForReportOK.</param>
        /// <param name="forcesAllLoadCases">forcesAllLoadCases.</param>
        /// <param name="id">id.</param>
        /// <param name="name">name.</param>
        /// <param name="checkStatus">checkStatus.</param>
        /// <param name="limitCheckStatus">limitCheckStatus.</param>
        /// <param name="loadCaseId">loadCaseId.</param>
        /// <param name="loadCase">loadCase.</param>
        /// <param name="maxUnityCheck">maxUnityCheck.</param>
        /// <param name="form">form.</param>
        public PinCheckResDataIdeaStatiCaConnectionChecks(string pinAssemblyName = default(string), double pinShearResistance = default(double), double pinBearingResistance = default(double), double pinReplaceableBearingResistance = default(double), double pinBendingResistance = default(double), double pinReplaceableBendingResistance = default(double), double pinCombinedShearAndBendingResistance = default(double), double contactBearingStress = default(double), double contactBearingResistance = default(double), double unityCheckPinShear = default(double), double unityCheckPinBearing = default(double), double unityCheckPinReplaceableBearing = default(double), double unityCheckPinBearingDecisive = default(double), double unityCheckPinBending = default(double), double unityCheckPinReplaceableBending = default(double), double unityCheckPinBendingDecisive = default(double), double unityCheckPinCombinedShearAndBending = default(double), double unityCheckPinReplaceableContactBearing = default(double), double maxUnityCheckShear = default(double), bool isPinReplaceable = default(bool), Dictionary<string, List<List<float>>> pinAllElementsAllSectionsForcesForDiagram = default(Dictionary<string, List<List<float>>>), List<double> pinShearForces = default(List<double>), List<double> pinBearingForces = default(List<double>), Dictionary<string, double> pinBearingForcesByPlateID = default(Dictionary<string, double>), List<double> pinBendingForces = default(List<double>), double pinShearForce = default(double), double pinBearingForceForBearing = default(double), double pinBendingForce = default(double), double pinCrossSectionalArea = default(double), double pinSectionModulus = default(double), double pinDiameter = default(double), double pinHoleDiameter = default(double), double pinUltimateTensileStrength = default(double), double pinYieldStrength = default(double), double connectedPartYieldStrength = default(double), double connectedPartThicknessForBearing = default(double), double decisiveYieldStrengthForBearing = default(double), double modulusOfElasticityForContactBearing = default(double), double yieldStrengthForContactBearing = default(double), double connectedPartThicknessForContactBearing = default(double), double pinBearingForceForContactBearing = default(double), double gammaM0 = default(double), double gammaM2 = default(double), double gammaM6ser = default(double), double gammaMfi = default(double), bool isFireDesign = default(bool), double fireTemperature = default(double), double factorKbTheta = default(double), DataDetailingDetailingChecksPinCIBasicTypes detailingChecksPin = default(DataDetailingDetailingChecksPinCIBasicTypes), bool isDetailingStatusOK = default(bool), bool isDetailingStatusForReportOK = default(bool), Dictionary<string, List<float>> forcesAllLoadCases = default(Dictionary<string, List<float>>), int id = default(int), string name = default(string), bool checkStatus = default(bool), bool limitCheckStatus = default(bool), int loadCaseId = default(int), string loadCase = default(string), double maxUnityCheck = default(double), string form = default(string))
        {
            this.PinAssemblyName = pinAssemblyName;
            this.PinShearResistance = pinShearResistance;
            this.PinBearingResistance = pinBearingResistance;
            this.PinReplaceableBearingResistance = pinReplaceableBearingResistance;
            this.PinBendingResistance = pinBendingResistance;
            this.PinReplaceableBendingResistance = pinReplaceableBendingResistance;
            this.PinCombinedShearAndBendingResistance = pinCombinedShearAndBendingResistance;
            this.ContactBearingStress = contactBearingStress;
            this.ContactBearingResistance = contactBearingResistance;
            this.UnityCheckPinShear = unityCheckPinShear;
            this.UnityCheckPinBearing = unityCheckPinBearing;
            this.UnityCheckPinReplaceableBearing = unityCheckPinReplaceableBearing;
            this.UnityCheckPinBearingDecisive = unityCheckPinBearingDecisive;
            this.UnityCheckPinBending = unityCheckPinBending;
            this.UnityCheckPinReplaceableBending = unityCheckPinReplaceableBending;
            this.UnityCheckPinBendingDecisive = unityCheckPinBendingDecisive;
            this.UnityCheckPinCombinedShearAndBending = unityCheckPinCombinedShearAndBending;
            this.UnityCheckPinReplaceableContactBearing = unityCheckPinReplaceableContactBearing;
            this.MaxUnityCheckShear = maxUnityCheckShear;
            this.IsPinReplaceable = isPinReplaceable;
            this.PinAllElementsAllSectionsForcesForDiagram = pinAllElementsAllSectionsForcesForDiagram;
            this.PinShearForces = pinShearForces;
            this.PinBearingForces = pinBearingForces;
            this.PinBearingForcesByPlateID = pinBearingForcesByPlateID;
            this.PinBendingForces = pinBendingForces;
            this.PinShearForce = pinShearForce;
            this.PinBearingForceForBearing = pinBearingForceForBearing;
            this.PinBendingForce = pinBendingForce;
            this.PinCrossSectionalArea = pinCrossSectionalArea;
            this.PinSectionModulus = pinSectionModulus;
            this.PinDiameter = pinDiameter;
            this.PinHoleDiameter = pinHoleDiameter;
            this.PinUltimateTensileStrength = pinUltimateTensileStrength;
            this.PinYieldStrength = pinYieldStrength;
            this.ConnectedPartYieldStrength = connectedPartYieldStrength;
            this.ConnectedPartThicknessForBearing = connectedPartThicknessForBearing;
            this.DecisiveYieldStrengthForBearing = decisiveYieldStrengthForBearing;
            this.ModulusOfElasticityForContactBearing = modulusOfElasticityForContactBearing;
            this.YieldStrengthForContactBearing = yieldStrengthForContactBearing;
            this.ConnectedPartThicknessForContactBearing = connectedPartThicknessForContactBearing;
            this.PinBearingForceForContactBearing = pinBearingForceForContactBearing;
            this.GammaM0 = gammaM0;
            this.GammaM2 = gammaM2;
            this.GammaM6ser = gammaM6ser;
            this.GammaMfi = gammaMfi;
            this.IsFireDesign = isFireDesign;
            this.FireTemperature = fireTemperature;
            this.FactorKbTheta = factorKbTheta;
            this.DetailingChecksPin = detailingChecksPin;
            this.IsDetailingStatusOK = isDetailingStatusOK;
            this.IsDetailingStatusForReportOK = isDetailingStatusForReportOK;
            this.ForcesAllLoadCases = forcesAllLoadCases;
            this.Id = id;
            this.Name = name;
            this.CheckStatus = checkStatus;
            this.LimitCheckStatus = limitCheckStatus;
            this.LoadCaseId = loadCaseId;
            this.LoadCase = loadCase;
            this.MaxUnityCheck = maxUnityCheck;
            this.Form = form;
        }

        /// <summary>
        /// Gets or Sets PinAssemblyName
        /// </summary>
        [DataMember(Name = "pinAssemblyName", EmitDefaultValue = true)]
        public string PinAssemblyName { get; set; }

        /// <summary>
        /// Gets or Sets PinShearResistance
        /// </summary>
        [DataMember(Name = "pinShearResistance", EmitDefaultValue = false)]
        public double PinShearResistance { get; set; }

        /// <summary>
        /// Gets or Sets PinBearingResistance
        /// </summary>
        [DataMember(Name = "pinBearingResistance", EmitDefaultValue = false)]
        public double PinBearingResistance { get; set; }

        /// <summary>
        /// Gets or Sets PinReplaceableBearingResistance
        /// </summary>
        [DataMember(Name = "pinReplaceableBearingResistance", EmitDefaultValue = false)]
        public double PinReplaceableBearingResistance { get; set; }

        /// <summary>
        /// Gets or Sets PinBendingResistance
        /// </summary>
        [DataMember(Name = "pinBendingResistance", EmitDefaultValue = false)]
        public double PinBendingResistance { get; set; }

        /// <summary>
        /// Gets or Sets PinReplaceableBendingResistance
        /// </summary>
        [DataMember(Name = "pinReplaceableBendingResistance", EmitDefaultValue = false)]
        public double PinReplaceableBendingResistance { get; set; }

        /// <summary>
        /// Gets or Sets PinCombinedShearAndBendingResistance
        /// </summary>
        [DataMember(Name = "pinCombinedShearAndBendingResistance", EmitDefaultValue = false)]
        public double PinCombinedShearAndBendingResistance { get; set; }

        /// <summary>
        /// Gets or Sets ContactBearingStress
        /// </summary>
        [DataMember(Name = "contactBearingStress", EmitDefaultValue = false)]
        public double ContactBearingStress { get; set; }

        /// <summary>
        /// Gets or Sets ContactBearingResistance
        /// </summary>
        [DataMember(Name = "contactBearingResistance", EmitDefaultValue = false)]
        public double ContactBearingResistance { get; set; }

        /// <summary>
        /// Gets or Sets UnityCheckPinShear
        /// </summary>
        [DataMember(Name = "unityCheckPinShear", EmitDefaultValue = false)]
        public double UnityCheckPinShear { get; set; }

        /// <summary>
        /// Gets or Sets UnityCheckPinBearing
        /// </summary>
        [DataMember(Name = "unityCheckPinBearing", EmitDefaultValue = false)]
        public double UnityCheckPinBearing { get; set; }

        /// <summary>
        /// Gets or Sets UnityCheckPinReplaceableBearing
        /// </summary>
        [DataMember(Name = "unityCheckPinReplaceableBearing", EmitDefaultValue = false)]
        public double UnityCheckPinReplaceableBearing { get; set; }

        /// <summary>
        /// Gets or Sets UnityCheckPinBearingDecisive
        /// </summary>
        [DataMember(Name = "unityCheckPinBearingDecisive", EmitDefaultValue = false)]
        public double UnityCheckPinBearingDecisive { get; set; }

        /// <summary>
        /// Gets or Sets UnityCheckPinBending
        /// </summary>
        [DataMember(Name = "unityCheckPinBending", EmitDefaultValue = false)]
        public double UnityCheckPinBending { get; set; }

        /// <summary>
        /// Gets or Sets UnityCheckPinReplaceableBending
        /// </summary>
        [DataMember(Name = "unityCheckPinReplaceableBending", EmitDefaultValue = false)]
        public double UnityCheckPinReplaceableBending { get; set; }

        /// <summary>
        /// Gets or Sets UnityCheckPinBendingDecisive
        /// </summary>
        [DataMember(Name = "unityCheckPinBendingDecisive", EmitDefaultValue = false)]
        public double UnityCheckPinBendingDecisive { get; set; }

        /// <summary>
        /// Gets or Sets UnityCheckPinCombinedShearAndBending
        /// </summary>
        [DataMember(Name = "unityCheckPinCombinedShearAndBending", EmitDefaultValue = false)]
        public double UnityCheckPinCombinedShearAndBending { get; set; }

        /// <summary>
        /// Gets or Sets UnityCheckPinReplaceableContactBearing
        /// </summary>
        [DataMember(Name = "unityCheckPinReplaceableContactBearing", EmitDefaultValue = false)]
        public double UnityCheckPinReplaceableContactBearing { get; set; }

        /// <summary>
        /// Gets or Sets MaxUnityCheckShear
        /// </summary>
        [DataMember(Name = "maxUnityCheckShear", EmitDefaultValue = false)]
        public double MaxUnityCheckShear { get; set; }

        /// <summary>
        /// Gets or Sets IsPinReplaceable
        /// </summary>
        [DataMember(Name = "isPinReplaceable", EmitDefaultValue = true)]
        public bool IsPinReplaceable { get; set; }

        /// <summary>
        /// Gets or Sets PinAllElementsAllSectionsForcesForDiagram
        /// </summary>
        [DataMember(Name = "pinAllElementsAllSectionsForcesForDiagram", EmitDefaultValue = true)]
        public Dictionary<string, List<List<float>>> PinAllElementsAllSectionsForcesForDiagram { get; set; }

        /// <summary>
        /// Gets or Sets PinShearForces
        /// </summary>
        [DataMember(Name = "pinShearForces", EmitDefaultValue = true)]
        public List<double> PinShearForces { get; set; }

        /// <summary>
        /// Gets or Sets PinBearingForces
        /// </summary>
        [DataMember(Name = "pinBearingForces", EmitDefaultValue = true)]
        public List<double> PinBearingForces { get; set; }

        /// <summary>
        /// Gets or Sets PinBearingForcesByPlateID
        /// </summary>
        [DataMember(Name = "pinBearingForcesByPlateID", EmitDefaultValue = true)]
        public Dictionary<string, double> PinBearingForcesByPlateID { get; set; }

        /// <summary>
        /// Gets or Sets PinBendingForces
        /// </summary>
        [DataMember(Name = "pinBendingForces", EmitDefaultValue = true)]
        public List<double> PinBendingForces { get; set; }

        /// <summary>
        /// Gets or Sets PinShearForce
        /// </summary>
        [DataMember(Name = "pinShearForce", EmitDefaultValue = false)]
        public double PinShearForce { get; set; }

        /// <summary>
        /// Gets or Sets PinBearingForceForBearing
        /// </summary>
        [DataMember(Name = "pinBearingForceForBearing", EmitDefaultValue = false)]
        public double PinBearingForceForBearing { get; set; }

        /// <summary>
        /// Gets or Sets PinBendingForce
        /// </summary>
        [DataMember(Name = "pinBendingForce", EmitDefaultValue = false)]
        public double PinBendingForce { get; set; }

        /// <summary>
        /// Gets or Sets PinCrossSectionalArea
        /// </summary>
        [DataMember(Name = "pinCrossSectionalArea", EmitDefaultValue = false)]
        public double PinCrossSectionalArea { get; set; }

        /// <summary>
        /// Gets or Sets PinSectionModulus
        /// </summary>
        [DataMember(Name = "pinSectionModulus", EmitDefaultValue = false)]
        public double PinSectionModulus { get; set; }

        /// <summary>
        /// Gets or Sets PinDiameter
        /// </summary>
        [DataMember(Name = "pinDiameter", EmitDefaultValue = false)]
        public double PinDiameter { get; set; }

        /// <summary>
        /// Gets or Sets PinHoleDiameter
        /// </summary>
        [DataMember(Name = "pinHoleDiameter", EmitDefaultValue = false)]
        public double PinHoleDiameter { get; set; }

        /// <summary>
        /// Gets or Sets PinUltimateTensileStrength
        /// </summary>
        [DataMember(Name = "pinUltimateTensileStrength", EmitDefaultValue = false)]
        public double PinUltimateTensileStrength { get; set; }

        /// <summary>
        /// Gets or Sets PinYieldStrength
        /// </summary>
        [DataMember(Name = "pinYieldStrength", EmitDefaultValue = false)]
        public double PinYieldStrength { get; set; }

        /// <summary>
        /// Gets or Sets ConnectedPartYieldStrength
        /// </summary>
        [DataMember(Name = "connectedPartYieldStrength", EmitDefaultValue = false)]
        public double ConnectedPartYieldStrength { get; set; }

        /// <summary>
        /// Gets or Sets ConnectedPartThicknessForBearing
        /// </summary>
        [DataMember(Name = "connectedPartThicknessForBearing", EmitDefaultValue = false)]
        public double ConnectedPartThicknessForBearing { get; set; }

        /// <summary>
        /// Gets or Sets DecisiveYieldStrengthForBearing
        /// </summary>
        [DataMember(Name = "decisiveYieldStrengthForBearing", EmitDefaultValue = false)]
        public double DecisiveYieldStrengthForBearing { get; set; }

        /// <summary>
        /// Gets or Sets ModulusOfElasticityForContactBearing
        /// </summary>
        [DataMember(Name = "modulusOfElasticityForContactBearing", EmitDefaultValue = false)]
        public double ModulusOfElasticityForContactBearing { get; set; }

        /// <summary>
        /// Gets or Sets YieldStrengthForContactBearing
        /// </summary>
        [DataMember(Name = "yieldStrengthForContactBearing", EmitDefaultValue = false)]
        public double YieldStrengthForContactBearing { get; set; }

        /// <summary>
        /// Gets or Sets ConnectedPartThicknessForContactBearing
        /// </summary>
        [DataMember(Name = "connectedPartThicknessForContactBearing", EmitDefaultValue = false)]
        public double ConnectedPartThicknessForContactBearing { get; set; }

        /// <summary>
        /// Gets or Sets PinBearingForceForContactBearing
        /// </summary>
        [DataMember(Name = "pinBearingForceForContactBearing", EmitDefaultValue = false)]
        public double PinBearingForceForContactBearing { get; set; }

        /// <summary>
        /// Gets or Sets GammaM0
        /// </summary>
        [DataMember(Name = "gammaM0", EmitDefaultValue = false)]
        public double GammaM0 { get; set; }

        /// <summary>
        /// Gets or Sets GammaM2
        /// </summary>
        [DataMember(Name = "gammaM2", EmitDefaultValue = false)]
        public double GammaM2 { get; set; }

        /// <summary>
        /// Gets or Sets GammaM6ser
        /// </summary>
        [DataMember(Name = "gammaM6ser", EmitDefaultValue = false)]
        public double GammaM6ser { get; set; }

        /// <summary>
        /// Gets or Sets GammaMfi
        /// </summary>
        [DataMember(Name = "gammaMfi", EmitDefaultValue = false)]
        public double GammaMfi { get; set; }

        /// <summary>
        /// Gets or Sets IsFireDesign
        /// </summary>
        [DataMember(Name = "isFireDesign", EmitDefaultValue = true)]
        public bool IsFireDesign { get; set; }

        /// <summary>
        /// Gets or Sets FireTemperature
        /// </summary>
        [DataMember(Name = "fireTemperature", EmitDefaultValue = false)]
        public double FireTemperature { get; set; }

        /// <summary>
        /// Gets or Sets FactorKbTheta
        /// </summary>
        [DataMember(Name = "factorKbTheta", EmitDefaultValue = false)]
        public double FactorKbTheta { get; set; }

        /// <summary>
        /// Gets or Sets DetailingChecksPin
        /// </summary>
        [DataMember(Name = "detailingChecksPin", EmitDefaultValue = false)]
        public DataDetailingDetailingChecksPinCIBasicTypes DetailingChecksPin { get; set; }

        /// <summary>
        /// Gets or Sets IsDetailingStatusOK
        /// </summary>
        [DataMember(Name = "isDetailingStatusOK", EmitDefaultValue = true)]
        public bool IsDetailingStatusOK { get; set; }

        /// <summary>
        /// Gets or Sets IsDetailingStatusForReportOK
        /// </summary>
        [DataMember(Name = "isDetailingStatusForReportOK", EmitDefaultValue = true)]
        public bool IsDetailingStatusForReportOK { get; set; }

        /// <summary>
        /// Gets or Sets ForcesAllLoadCases
        /// </summary>
        [DataMember(Name = "forcesAllLoadCases", EmitDefaultValue = true)]
        public Dictionary<string, List<float>> ForcesAllLoadCases { get; set; }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public int Id { get; set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name = "name", EmitDefaultValue = true)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets CheckStatus
        /// </summary>
        [DataMember(Name = "checkStatus", EmitDefaultValue = true)]
        public bool CheckStatus { get; set; }

        /// <summary>
        /// Gets or Sets LimitCheckStatus
        /// </summary>
        [DataMember(Name = "limitCheckStatus", EmitDefaultValue = true)]
        public bool LimitCheckStatus { get; set; }

        /// <summary>
        /// Gets or Sets LoadCaseId
        /// </summary>
        [DataMember(Name = "loadCaseId", EmitDefaultValue = false)]
        public int LoadCaseId { get; set; }

        /// <summary>
        /// Gets or Sets LoadCase
        /// </summary>
        [DataMember(Name = "loadCase", EmitDefaultValue = true)]
        public string LoadCase { get; set; }

        /// <summary>
        /// Gets or Sets MaxUnityCheck
        /// </summary>
        [DataMember(Name = "maxUnityCheck", EmitDefaultValue = false)]
        public double MaxUnityCheck { get; set; }

        /// <summary>
        /// Gets or Sets Form
        /// </summary>
        [DataMember(Name = "form", EmitDefaultValue = true)]
        public string Form { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class PinCheckResDataIdeaStatiCaConnectionChecks {\n");
            sb.Append("  PinAssemblyName: ").Append(PinAssemblyName).Append("\n");
            sb.Append("  PinShearResistance: ").Append(PinShearResistance).Append("\n");
            sb.Append("  PinBearingResistance: ").Append(PinBearingResistance).Append("\n");
            sb.Append("  PinReplaceableBearingResistance: ").Append(PinReplaceableBearingResistance).Append("\n");
            sb.Append("  PinBendingResistance: ").Append(PinBendingResistance).Append("\n");
            sb.Append("  PinReplaceableBendingResistance: ").Append(PinReplaceableBendingResistance).Append("\n");
            sb.Append("  PinCombinedShearAndBendingResistance: ").Append(PinCombinedShearAndBendingResistance).Append("\n");
            sb.Append("  ContactBearingStress: ").Append(ContactBearingStress).Append("\n");
            sb.Append("  ContactBearingResistance: ").Append(ContactBearingResistance).Append("\n");
            sb.Append("  UnityCheckPinShear: ").Append(UnityCheckPinShear).Append("\n");
            sb.Append("  UnityCheckPinBearing: ").Append(UnityCheckPinBearing).Append("\n");
            sb.Append("  UnityCheckPinReplaceableBearing: ").Append(UnityCheckPinReplaceableBearing).Append("\n");
            sb.Append("  UnityCheckPinBearingDecisive: ").Append(UnityCheckPinBearingDecisive).Append("\n");
            sb.Append("  UnityCheckPinBending: ").Append(UnityCheckPinBending).Append("\n");
            sb.Append("  UnityCheckPinReplaceableBending: ").Append(UnityCheckPinReplaceableBending).Append("\n");
            sb.Append("  UnityCheckPinBendingDecisive: ").Append(UnityCheckPinBendingDecisive).Append("\n");
            sb.Append("  UnityCheckPinCombinedShearAndBending: ").Append(UnityCheckPinCombinedShearAndBending).Append("\n");
            sb.Append("  UnityCheckPinReplaceableContactBearing: ").Append(UnityCheckPinReplaceableContactBearing).Append("\n");
            sb.Append("  MaxUnityCheckShear: ").Append(MaxUnityCheckShear).Append("\n");
            sb.Append("  IsPinReplaceable: ").Append(IsPinReplaceable).Append("\n");
            sb.Append("  PinAllElementsAllSectionsForcesForDiagram: ").Append(PinAllElementsAllSectionsForcesForDiagram).Append("\n");
            sb.Append("  PinShearForces: ").Append(PinShearForces).Append("\n");
            sb.Append("  PinBearingForces: ").Append(PinBearingForces).Append("\n");
            sb.Append("  PinBearingForcesByPlateID: ").Append(PinBearingForcesByPlateID).Append("\n");
            sb.Append("  PinBendingForces: ").Append(PinBendingForces).Append("\n");
            sb.Append("  PinShearForce: ").Append(PinShearForce).Append("\n");
            sb.Append("  PinBearingForceForBearing: ").Append(PinBearingForceForBearing).Append("\n");
            sb.Append("  PinBendingForce: ").Append(PinBendingForce).Append("\n");
            sb.Append("  PinCrossSectionalArea: ").Append(PinCrossSectionalArea).Append("\n");
            sb.Append("  PinSectionModulus: ").Append(PinSectionModulus).Append("\n");
            sb.Append("  PinDiameter: ").Append(PinDiameter).Append("\n");
            sb.Append("  PinHoleDiameter: ").Append(PinHoleDiameter).Append("\n");
            sb.Append("  PinUltimateTensileStrength: ").Append(PinUltimateTensileStrength).Append("\n");
            sb.Append("  PinYieldStrength: ").Append(PinYieldStrength).Append("\n");
            sb.Append("  ConnectedPartYieldStrength: ").Append(ConnectedPartYieldStrength).Append("\n");
            sb.Append("  ConnectedPartThicknessForBearing: ").Append(ConnectedPartThicknessForBearing).Append("\n");
            sb.Append("  DecisiveYieldStrengthForBearing: ").Append(DecisiveYieldStrengthForBearing).Append("\n");
            sb.Append("  ModulusOfElasticityForContactBearing: ").Append(ModulusOfElasticityForContactBearing).Append("\n");
            sb.Append("  YieldStrengthForContactBearing: ").Append(YieldStrengthForContactBearing).Append("\n");
            sb.Append("  ConnectedPartThicknessForContactBearing: ").Append(ConnectedPartThicknessForContactBearing).Append("\n");
            sb.Append("  PinBearingForceForContactBearing: ").Append(PinBearingForceForContactBearing).Append("\n");
            sb.Append("  GammaM0: ").Append(GammaM0).Append("\n");
            sb.Append("  GammaM2: ").Append(GammaM2).Append("\n");
            sb.Append("  GammaM6ser: ").Append(GammaM6ser).Append("\n");
            sb.Append("  GammaMfi: ").Append(GammaMfi).Append("\n");
            sb.Append("  IsFireDesign: ").Append(IsFireDesign).Append("\n");
            sb.Append("  FireTemperature: ").Append(FireTemperature).Append("\n");
            sb.Append("  FactorKbTheta: ").Append(FactorKbTheta).Append("\n");
            sb.Append("  DetailingChecksPin: ").Append(DetailingChecksPin).Append("\n");
            sb.Append("  IsDetailingStatusOK: ").Append(IsDetailingStatusOK).Append("\n");
            sb.Append("  IsDetailingStatusForReportOK: ").Append(IsDetailingStatusForReportOK).Append("\n");
            sb.Append("  ForcesAllLoadCases: ").Append(ForcesAllLoadCases).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  CheckStatus: ").Append(CheckStatus).Append("\n");
            sb.Append("  LimitCheckStatus: ").Append(LimitCheckStatus).Append("\n");
            sb.Append("  LoadCaseId: ").Append(LoadCaseId).Append("\n");
            sb.Append("  LoadCase: ").Append(LoadCase).Append("\n");
            sb.Append("  MaxUnityCheck: ").Append(MaxUnityCheck).Append("\n");
            sb.Append("  Form: ").Append(Form).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
