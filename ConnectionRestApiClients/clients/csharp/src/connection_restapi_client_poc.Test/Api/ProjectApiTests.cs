/*
 * Connection Rest API 1.0
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using connection_restapi_client_poc.Client;
using connection_restapi_client_poc.Api;
// uncomment below to import models
//using connection_restapi_client_poc.Model;

namespace connection_restapi_client_poc.Test.Api
{
    /// <summary>
    ///  Class for testing ProjectApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class ProjectApiTests : IDisposable
    {
        private ProjectApi instance;

        public ProjectApiTests()
        {
            instance = new ProjectApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ProjectApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' ProjectApi
            //Assert.IsType<ProjectApi>(instance);
        }

        /// <summary>
        /// Test CloseProject
        /// </summary>
        [Fact]
        public void CloseProjectTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string projectId = null;
            //var response = instance.CloseProject(projectId);
            //Assert.IsType<string>(response);
        }

        /// <summary>
        /// Test ConnectClient
        /// </summary>
        [Fact]
        public void ConnectClientTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.ConnectClient();
            //Assert.IsType<string>(response);
        }

        /// <summary>
        /// Test DownloadProject
        /// </summary>
        [Fact]
        public void DownloadProjectTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid projectId = null;
            //var response = instance.DownloadProject(projectId);
            //Assert.IsType<SystemIOMemoryStreamSystemPrivateCoreLib>(response);
        }

        /// <summary>
        /// Test GetActiveProjects
        /// </summary>
        [Fact]
        public void GetActiveProjectsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetActiveProjects();
            //Assert.IsType<List<IdeaStatiCaApiConnectionModelConProjectIdeaStatiCaApi>>(response);
        }

        /// <summary>
        /// Test GetProjectData
        /// </summary>
        [Fact]
        public void GetProjectDataTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid projectId = null;
            //var response = instance.GetProjectData(projectId);
            //Assert.IsType<IdeaStatiCaApiConnectionModelConProjectDataIdeaStatiCaApi>(response);
        }

        /// <summary>
        /// Test GetSetup
        /// </summary>
        [Fact]
        public void GetSetupTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid projectId = null;
            //var response = instance.GetSetup(projectId);
            //Assert.IsType<ConnectionSetupIdeaRSOpenModel>(response);
        }

        /// <summary>
        /// Test ImportIOM
        /// </summary>
        [Fact]
        public void ImportIOMTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<int>? connectionsToCreate = null;
            //var response = instance.ImportIOM(connectionsToCreate);
            //Assert.IsType<IdeaStatiCaApiConnectionModelConProjectIdeaStatiCaApi>(response);
        }

        /// <summary>
        /// Test ImportIOMContainer
        /// </summary>
        [Fact]
        public void ImportIOMContainerTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<int>? connectionsToCreate = null;
            //OpenModelContainerIdeaRSOpenModel? openModelContainerIdeaRSOpenModel = null;
            //var response = instance.ImportIOMContainer(connectionsToCreate, openModelContainerIdeaRSOpenModel);
            //Assert.IsType<IdeaStatiCaApiConnectionModelConProjectIdeaStatiCaApi>(response);
        }

        /// <summary>
        /// Test OpenProject
        /// </summary>
        [Fact]
        public void OpenProjectTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.OpenProject();
            //Assert.IsType<IdeaStatiCaApiConnectionModelConProjectIdeaStatiCaApi>(response);
        }

        /// <summary>
        /// Test UpdateFromIOM
        /// </summary>
        [Fact]
        public void UpdateFromIOMTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid projectId = null;
            //var response = instance.UpdateFromIOM(projectId);
            //Assert.IsType<bool>(response);
        }

        /// <summary>
        /// Test UpdateFromIOMContainer
        /// </summary>
        [Fact]
        public void UpdateFromIOMContainerTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid projectId = null;
            //OpenModelContainerIdeaRSOpenModel? openModelContainerIdeaRSOpenModel = null;
            //var response = instance.UpdateFromIOMContainer(projectId, openModelContainerIdeaRSOpenModel);
            //Assert.IsType<bool>(response);
        }

        /// <summary>
        /// Test UpdateSetup
        /// </summary>
        [Fact]
        public void UpdateSetupTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid projectId = null;
            //ConnectionSetupIdeaRSOpenModel? connectionSetupIdeaRSOpenModel = null;
            //var response = instance.UpdateSetup(projectId, connectionSetupIdeaRSOpenModel);
            //Assert.IsType<ConnectionSetupIdeaRSOpenModel>(response);
        }

        /// <summary>
        /// Test UploadIdeaCon
        /// </summary>
        [Fact]
        public void UploadIdeaConTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream? ideaConFile = null;
            //var response = instance.UploadIdeaCon(ideaConFile);
            //Assert.IsType<IdeaStatiCaApiConnectionModelConProjectIdeaStatiCaApi>(response);
        }
    }
}
