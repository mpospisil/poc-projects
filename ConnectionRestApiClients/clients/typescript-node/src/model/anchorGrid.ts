/**
 * Connection Rest API 1.0
 * IDEA StatiCa Connection API, used for the automated design and calculation of steel connections.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: info@ideastatica.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { AnchorType } from './anchorType';
import { ConcreteBlock } from './concreteBlock';
import { Point3D } from './point3D';
import { ReferenceElement } from './referenceElement';
import { Vector3D } from './vector3D';

/**
* Data of the anchor grid
*/
export class AnchorGrid {
    /**
    * Indicates, whether a shear plane is in the thread of a bolt.
    */
    'shearInThread'?: boolean;
    'concreteBlock'?: ConcreteBlock;
    'anchorType'?: AnchorType;
    /**
    * Washer Size used if AnchorType is washer
    */
    'washerSize'?: number;
    /**
    * Anchoring Length
    */
    'anchoringLength'?: number;
    /**
    * Length of anchor hook<br />  (distance from the inner surface of the anchor shaft to the outer tip of the hook specified as an anchor diameter multiplier)
    */
    'hookLength'?: number;
    'boltAssembly'?: ReferenceElement;
    'origin'?: Point3D;
    'axisX'?: Vector3D;
    'axisY'?: Vector3D;
    'axisZ'?: Vector3D;
    /**
    * Positions of holes in the local coordinate system of the grid
    */
    'positions'?: Array<Point3D> | null;
    /**
    * List of the connected parts
    */
    'connectedParts'?: Array<ReferenceElement> | null;
    /**
    * Name
    */
    'name'?: string | null;
    /**
    * Length
    */
    'length'?: number;
    /**
    * Element Id
    */
    'id'?: number;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "shearInThread",
            "baseName": "shearInThread",
            "type": "boolean"
        },
        {
            "name": "concreteBlock",
            "baseName": "concreteBlock",
            "type": "ConcreteBlock"
        },
        {
            "name": "anchorType",
            "baseName": "anchorType",
            "type": "AnchorType"
        },
        {
            "name": "washerSize",
            "baseName": "washerSize",
            "type": "number"
        },
        {
            "name": "anchoringLength",
            "baseName": "anchoringLength",
            "type": "number"
        },
        {
            "name": "hookLength",
            "baseName": "hookLength",
            "type": "number"
        },
        {
            "name": "boltAssembly",
            "baseName": "boltAssembly",
            "type": "ReferenceElement"
        },
        {
            "name": "origin",
            "baseName": "origin",
            "type": "Point3D"
        },
        {
            "name": "axisX",
            "baseName": "axisX",
            "type": "Vector3D"
        },
        {
            "name": "axisY",
            "baseName": "axisY",
            "type": "Vector3D"
        },
        {
            "name": "axisZ",
            "baseName": "axisZ",
            "type": "Vector3D"
        },
        {
            "name": "positions",
            "baseName": "positions",
            "type": "Array<Point3D>"
        },
        {
            "name": "connectedParts",
            "baseName": "connectedParts",
            "type": "Array<ReferenceElement>"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string"
        },
        {
            "name": "length",
            "baseName": "length",
            "type": "number"
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "number"
        }    ];

    static getAttributeTypeMap() {
        return AnchorGrid.attributeTypeMap;
    }
}

export namespace AnchorGrid {
}
