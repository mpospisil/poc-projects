/**
 * Connection Rest API 1.0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import http from 'http';
import { IdeaParameter } from '../model/ideaParameter';
import { IdeaParameterUpdate } from '../model/ideaParameterUpdate';
import { ParameterData } from '../model/parameterData';
import { Authentication, Interceptor } from '../model/models';
export declare enum ParameterApiApiKeys {
}
export declare class ParameterApi {
    protected _basePath: string;
    protected _defaultHeaders: any;
    protected _useQuerystring: boolean;
    protected authentications: {
        default: Authentication;
    };
    protected interceptors: Interceptor[];
    constructor(basePath?: string);
    set useQuerystring(value: boolean);
    set basePath(basePath: string);
    set defaultHeaders(defaultHeaders: any);
    get defaultHeaders(): any;
    get basePath(): string;
    setDefaultAuthentication(auth: Authentication): void;
    setApiKey(key: ParameterApiApiKeys, value: string): void;
    addInterceptor(interceptor: Interceptor): void;
    /**
     *
     * @summary Evaluate the expression and return the result
     * @param projectId The unique identifier of the opened project in the ConnectionRestApi service
     * @param connectionId Id of the connection to use for evaluation expression
     * @param body Expression to evaluate
     */
    evaluateExpression(projectId: string, connectionId: number, body?: string, options?: {
        headers: {
            [name: string]: string;
        };
    }): Promise<{
        response: http.IncomingMessage;
        body: string;
    }>;
    /**
     *
     * @summary Get all parameters which are defined for projectId and connectionId
     * @param projectId The unique identifier of the opened project in the ConnectionRestApi service
     * @param connectionId Id of the connection to get its parameters
     * @param includeHidden Include also hidden parameters
     */
    getParameters(projectId: string, connectionId: number, includeHidden?: boolean, options?: {
        headers: {
            [name: string]: string;
        };
    }): Promise<{
        response: http.IncomingMessage;
        body: Array<IdeaParameter>;
    }>;
    /**
     *
     * @summary Update parameters for the connection connectionId in the project projectId by values passed in parameters
     * @param projectId The unique identifier of the opened project in the ConnectionRestApi service
     * @param connectionId Id of the connection to apply template
     * @param ideaParameterUpdate New values of parameters
     */
    updateParameters(projectId: string, connectionId: number, ideaParameterUpdate?: Array<IdeaParameterUpdate>, options?: {
        headers: {
            [name: string]: string;
        };
    }): Promise<{
        response: http.IncomingMessage;
        body: Array<ParameterData>;
    }>;
}
