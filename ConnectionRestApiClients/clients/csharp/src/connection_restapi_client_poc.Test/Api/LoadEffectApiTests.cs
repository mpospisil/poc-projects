/*
 * Connection Rest API 1.0
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using connection_restapi_client_poc.Client;
using connection_restapi_client_poc.Api;
// uncomment below to import models
//using connection_restapi_client_poc.Model;

namespace connection_restapi_client_poc.Test.Api
{
    /// <summary>
    ///  Class for testing LoadEffectApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class LoadEffectApiTests : IDisposable
    {
        private LoadEffectApi instance;

        public LoadEffectApiTests()
        {
            instance = new LoadEffectApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of LoadEffectApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' LoadEffectApi
            //Assert.IsType<LoadEffectApi>(instance);
        }

        /// <summary>
        /// Test Api1ProjectsProjectIdConnectionsConnectionIdLoadEffectsGet
        /// </summary>
        [Fact]
        public void Api1ProjectsProjectIdConnectionsConnectionIdLoadEffectsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid projectId = null;
            //int connectionId = null;
            //bool? isPercentage = null;
            //var response = instance.Api1ProjectsProjectIdConnectionsConnectionIdLoadEffectsGet(projectId, connectionId, isPercentage);
            //Assert.IsType<List<IdeaStatiCaApiConnectionModelConLoadEffectIdeaStatiCaApi>>(response);
        }

        /// <summary>
        /// Test Api1ProjectsProjectIdConnectionsConnectionIdLoadEffectsLoadEffectIdDelete
        /// </summary>
        [Fact]
        public void Api1ProjectsProjectIdConnectionsConnectionIdLoadEffectsLoadEffectIdDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid projectId = null;
            //int connectionId = null;
            //int loadEffectId = null;
            //var response = instance.Api1ProjectsProjectIdConnectionsConnectionIdLoadEffectsLoadEffectIdDelete(projectId, connectionId, loadEffectId);
            //Assert.IsType<int>(response);
        }

        /// <summary>
        /// Test Api1ProjectsProjectIdConnectionsConnectionIdLoadEffectsLoadEffectIdGet
        /// </summary>
        [Fact]
        public void Api1ProjectsProjectIdConnectionsConnectionIdLoadEffectsLoadEffectIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid projectId = null;
            //int connectionId = null;
            //int loadEffectId = null;
            //bool? isPercentage = null;
            //var response = instance.Api1ProjectsProjectIdConnectionsConnectionIdLoadEffectsLoadEffectIdGet(projectId, connectionId, loadEffectId, isPercentage);
            //Assert.IsType<IdeaStatiCaApiConnectionModelConLoadEffectIdeaStatiCaApi>(response);
        }

        /// <summary>
        /// Test Api1ProjectsProjectIdConnectionsConnectionIdLoadEffectsLoadEffectIdPut
        /// </summary>
        [Fact]
        public void Api1ProjectsProjectIdConnectionsConnectionIdLoadEffectsLoadEffectIdPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid projectId = null;
            //int connectionId = null;
            //int loadEffectId = null;
            //IdeaStatiCaApiConnectionModelConLoadEffectIdeaStatiCaApi? ideaStatiCaApiConnectionModelConLoadEffectIdeaStatiCaApi = null;
            //var response = instance.Api1ProjectsProjectIdConnectionsConnectionIdLoadEffectsLoadEffectIdPut(projectId, connectionId, loadEffectId, ideaStatiCaApiConnectionModelConLoadEffectIdeaStatiCaApi);
            //Assert.IsType<IdeaStatiCaApiConnectionModelConLoadEffectIdeaStatiCaApi>(response);
        }

        /// <summary>
        /// Test Api1ProjectsProjectIdConnectionsConnectionIdLoadEffectsPost
        /// </summary>
        [Fact]
        public void Api1ProjectsProjectIdConnectionsConnectionIdLoadEffectsPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid projectId = null;
            //int connectionId = null;
            //IdeaStatiCaApiConnectionModelConLoadEffectIdeaStatiCaApi? ideaStatiCaApiConnectionModelConLoadEffectIdeaStatiCaApi = null;
            //var response = instance.Api1ProjectsProjectIdConnectionsConnectionIdLoadEffectsPost(projectId, connectionId, ideaStatiCaApiConnectionModelConLoadEffectIdeaStatiCaApi);
            //Assert.IsType<LoadEffectDataIdeaStatiCaConnectionChecks>(response);
        }

        /// <summary>
        /// Test Api1ProjectsProjectIdConnectionsConnectionIdLoadEffectsSetEquilibriumPost
        /// </summary>
        [Fact]
        public void Api1ProjectsProjectIdConnectionsConnectionIdLoadEffectsSetEquilibriumPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid projectId = null;
            //int connectionId = null;
            //bool? loadsInEquilibrium = null;
            //var response = instance.Api1ProjectsProjectIdConnectionsConnectionIdLoadEffectsSetEquilibriumPost(projectId, connectionId, loadsInEquilibrium);
            //Assert.IsType<bool>(response);
        }
    }
}
