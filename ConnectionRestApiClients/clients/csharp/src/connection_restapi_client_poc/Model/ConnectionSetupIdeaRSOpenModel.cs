/*
 * Connection Rest API 1.0
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = connection_restapi_client_poc.Client.OpenAPIDateConverter;

namespace connection_restapi_client_poc.Model
{
    /// <summary>
    /// ConnectionSetupIdeaRSOpenModel
    /// </summary>
    [DataContract(Name = "ConnectionSetup-IdeaRS_OpenModel")]
    public partial class ConnectionSetupIdeaRSOpenModel : IValidatableObject
    {

        /// <summary>
        /// Gets or Sets WeldEvaluationData
        /// </summary>
        [DataMember(Name = "weldEvaluationData", EmitDefaultValue = false)]
        public WeldEvaluationIdeaRSOpenModel? WeldEvaluationData { get; set; }

        /// <summary>
        /// Gets or Sets ApplyConeBreakoutCheck
        /// </summary>
        [DataMember(Name = "applyConeBreakoutCheck", EmitDefaultValue = false)]
        public ConeBreakoutCheckTypeIdeaRSOpenModel? ApplyConeBreakoutCheck { get; set; }

        /// <summary>
        /// Gets or Sets CrtCompCheckIS
        /// </summary>
        [DataMember(Name = "crtCompCheckIS", EmitDefaultValue = false)]
        public CrtCompCheckISIdeaRSOpenModel? CrtCompCheckIS { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="ConnectionSetupIdeaRSOpenModel" /> class.
        /// </summary>
        /// <param name="steelSetup">steelSetup.</param>
        /// <param name="concreteSetup">concreteSetup.</param>
        /// <param name="stopAtLimitStrain">stopAtLimitStrain.</param>
        /// <param name="weldEvaluationData">weldEvaluationData.</param>
        /// <param name="checkDetailing">checkDetailing.</param>
        /// <param name="applyConeBreakoutCheck">applyConeBreakoutCheck.</param>
        /// <param name="pretensionForceFpc">pretensionForceFpc.</param>
        /// <param name="gammaInst">gammaInst.</param>
        /// <param name="gammaC">gammaC.</param>
        /// <param name="gammaM3">gammaM3.</param>
        /// <param name="anchorLengthForStiffness">anchorLengthForStiffness.</param>
        /// <param name="jointBetaFactor">jointBetaFactor.</param>
        /// <param name="effectiveAreaStressCoeff">effectiveAreaStressCoeff.</param>
        /// <param name="effectiveAreaStressCoeffAISC">effectiveAreaStressCoeffAISC.</param>
        /// <param name="frictionCoefficient">frictionCoefficient.</param>
        /// <param name="limitPlasticStrain">limitPlasticStrain.</param>
        /// <param name="limitDeformation">limitDeformation.</param>
        /// <param name="limitDeformationCheck">limitDeformationCheck.</param>
        /// <param name="analysisGNL">analysisGNL.</param>
        /// <param name="analysisAllGNL">analysisAllGNL.</param>
        /// <param name="warnPlasticStrain">warnPlasticStrain.</param>
        /// <param name="warnCheckLevel">warnCheckLevel.</param>
        /// <param name="optimalCheckLevel">optimalCheckLevel.</param>
        /// <param name="distanceBetweenBolts">distanceBetweenBolts.</param>
        /// <param name="distanceDiameterBetweenBP">distanceDiameterBetweenBP.</param>
        /// <param name="distanceBetweenBoltsEdge">distanceBetweenBoltsEdge.</param>
        /// <param name="bearingAngle">bearingAngle.</param>
        /// <param name="decreasingFtrd">decreasingFtrd.</param>
        /// <param name="bracedSystem">bracedSystem.</param>
        /// <param name="bearingCheck">bearingCheck.</param>
        /// <param name="applyBetapInfluence">applyBetapInfluence.</param>
        /// <param name="memberLengthRatio">memberLengthRatio.</param>
        /// <param name="divisionOfSurfaceOfCHS">divisionOfSurfaceOfCHS.</param>
        /// <param name="divisionOfArcsOfRHS">divisionOfArcsOfRHS.</param>
        /// <param name="numElement">numElement.</param>
        /// <param name="numberIterations">numberIterations.</param>
        /// <param name="mdiv">mdiv.</param>
        /// <param name="minSize">minSize.</param>
        /// <param name="maxSize">maxSize.</param>
        /// <param name="numElementRhs">numElementRhs.</param>
        /// <param name="numElementPlate">numElementPlate.</param>
        /// <param name="rigidBP">rigidBP.</param>
        /// <param name="alphaCC">alphaCC.</param>
        /// <param name="crackedConcrete">crackedConcrete.</param>
        /// <param name="developedFillers">developedFillers.</param>
        /// <param name="deformationBoltHole">deformationBoltHole.</param>
        /// <param name="extensionLengthRationOpenSections">extensionLengthRationOpenSections.</param>
        /// <param name="extensionLengthRationCloseSections">extensionLengthRationCloseSections.</param>
        /// <param name="factorPreloadBolt">factorPreloadBolt.</param>
        /// <param name="baseMetalCapacity">baseMetalCapacity.</param>
        /// <param name="applyBearingCheck">applyBearingCheck.</param>
        /// <param name="frictionCoefficientPbolt">frictionCoefficientPbolt.</param>
        /// <param name="crtCompCheckIS">crtCompCheckIS.</param>
        /// <param name="boltMaxGripLengthCoeff">boltMaxGripLengthCoeff.</param>
        /// <param name="fatigueSectionOffset">fatigueSectionOffset.</param>
        /// <param name="condensedElementLengthFactor">condensedElementLengthFactor.</param>
        /// <param name="gammaMu">gammaMu.</param>
        /// <param name="hssLimitPlasticStrain">hssLimitPlasticStrain.</param>
        public ConnectionSetupIdeaRSOpenModel(Object steelSetup = default(Object), ConcreteConcreteSetupIdeaRSOpenModel concreteSetup = default(ConcreteConcreteSetupIdeaRSOpenModel), bool stopAtLimitStrain = default(bool), WeldEvaluationIdeaRSOpenModel? weldEvaluationData = default(WeldEvaluationIdeaRSOpenModel?), bool checkDetailing = default(bool), ConeBreakoutCheckTypeIdeaRSOpenModel? applyConeBreakoutCheck = default(ConeBreakoutCheckTypeIdeaRSOpenModel?), double pretensionForceFpc = default(double), double gammaInst = default(double), double gammaC = default(double), double gammaM3 = default(double), int anchorLengthForStiffness = default(int), double jointBetaFactor = default(double), double effectiveAreaStressCoeff = default(double), double effectiveAreaStressCoeffAISC = default(double), double frictionCoefficient = default(double), double limitPlasticStrain = default(double), double limitDeformation = default(double), bool limitDeformationCheck = default(bool), bool analysisGNL = default(bool), bool analysisAllGNL = default(bool), double warnPlasticStrain = default(double), double warnCheckLevel = default(double), double optimalCheckLevel = default(double), double distanceBetweenBolts = default(double), double distanceDiameterBetweenBP = default(double), double distanceBetweenBoltsEdge = default(double), double bearingAngle = default(double), double decreasingFtrd = default(double), bool bracedSystem = default(bool), bool bearingCheck = default(bool), bool applyBetapInfluence = default(bool), double memberLengthRatio = default(double), int divisionOfSurfaceOfCHS = default(int), int divisionOfArcsOfRHS = default(int), int numElement = default(int), int numberIterations = default(int), int mdiv = default(int), double minSize = default(double), double maxSize = default(double), int numElementRhs = default(int), int numElementPlate = default(int), bool rigidBP = default(bool), double alphaCC = default(double), bool crackedConcrete = default(bool), bool developedFillers = default(bool), bool deformationBoltHole = default(bool), double extensionLengthRationOpenSections = default(double), double extensionLengthRationCloseSections = default(double), double factorPreloadBolt = default(double), bool baseMetalCapacity = default(bool), bool applyBearingCheck = default(bool), double frictionCoefficientPbolt = default(double), CrtCompCheckISIdeaRSOpenModel? crtCompCheckIS = default(CrtCompCheckISIdeaRSOpenModel?), double boltMaxGripLengthCoeff = default(double), double fatigueSectionOffset = default(double), double condensedElementLengthFactor = default(double), double gammaMu = default(double), double hssLimitPlasticStrain = default(double))
        {
            this.SteelSetup = steelSetup;
            this.ConcreteSetup = concreteSetup;
            this.StopAtLimitStrain = stopAtLimitStrain;
            this.WeldEvaluationData = weldEvaluationData;
            this.CheckDetailing = checkDetailing;
            this.ApplyConeBreakoutCheck = applyConeBreakoutCheck;
            this.PretensionForceFpc = pretensionForceFpc;
            this.GammaInst = gammaInst;
            this.GammaC = gammaC;
            this.GammaM3 = gammaM3;
            this.AnchorLengthForStiffness = anchorLengthForStiffness;
            this.JointBetaFactor = jointBetaFactor;
            this.EffectiveAreaStressCoeff = effectiveAreaStressCoeff;
            this.EffectiveAreaStressCoeffAISC = effectiveAreaStressCoeffAISC;
            this.FrictionCoefficient = frictionCoefficient;
            this.LimitPlasticStrain = limitPlasticStrain;
            this.LimitDeformation = limitDeformation;
            this.LimitDeformationCheck = limitDeformationCheck;
            this.AnalysisGNL = analysisGNL;
            this.AnalysisAllGNL = analysisAllGNL;
            this.WarnPlasticStrain = warnPlasticStrain;
            this.WarnCheckLevel = warnCheckLevel;
            this.OptimalCheckLevel = optimalCheckLevel;
            this.DistanceBetweenBolts = distanceBetweenBolts;
            this.DistanceDiameterBetweenBP = distanceDiameterBetweenBP;
            this.DistanceBetweenBoltsEdge = distanceBetweenBoltsEdge;
            this.BearingAngle = bearingAngle;
            this.DecreasingFtrd = decreasingFtrd;
            this.BracedSystem = bracedSystem;
            this.BearingCheck = bearingCheck;
            this.ApplyBetapInfluence = applyBetapInfluence;
            this.MemberLengthRatio = memberLengthRatio;
            this.DivisionOfSurfaceOfCHS = divisionOfSurfaceOfCHS;
            this.DivisionOfArcsOfRHS = divisionOfArcsOfRHS;
            this.NumElement = numElement;
            this.NumberIterations = numberIterations;
            this.Mdiv = mdiv;
            this.MinSize = minSize;
            this.MaxSize = maxSize;
            this.NumElementRhs = numElementRhs;
            this.NumElementPlate = numElementPlate;
            this.RigidBP = rigidBP;
            this.AlphaCC = alphaCC;
            this.CrackedConcrete = crackedConcrete;
            this.DevelopedFillers = developedFillers;
            this.DeformationBoltHole = deformationBoltHole;
            this.ExtensionLengthRationOpenSections = extensionLengthRationOpenSections;
            this.ExtensionLengthRationCloseSections = extensionLengthRationCloseSections;
            this.FactorPreloadBolt = factorPreloadBolt;
            this.BaseMetalCapacity = baseMetalCapacity;
            this.ApplyBearingCheck = applyBearingCheck;
            this.FrictionCoefficientPbolt = frictionCoefficientPbolt;
            this.CrtCompCheckIS = crtCompCheckIS;
            this.BoltMaxGripLengthCoeff = boltMaxGripLengthCoeff;
            this.FatigueSectionOffset = fatigueSectionOffset;
            this.CondensedElementLengthFactor = condensedElementLengthFactor;
            this.GammaMu = gammaMu;
            this.HssLimitPlasticStrain = hssLimitPlasticStrain;
        }

        /// <summary>
        /// Gets or Sets SteelSetup
        /// </summary>
        [DataMember(Name = "steelSetup", EmitDefaultValue = false)]
        public Object SteelSetup { get; set; }

        /// <summary>
        /// Gets or Sets ConcreteSetup
        /// </summary>
        [DataMember(Name = "concreteSetup", EmitDefaultValue = false)]
        public ConcreteConcreteSetupIdeaRSOpenModel ConcreteSetup { get; set; }

        /// <summary>
        /// Gets or Sets StopAtLimitStrain
        /// </summary>
        [DataMember(Name = "stopAtLimitStrain", EmitDefaultValue = true)]
        public bool StopAtLimitStrain { get; set; }

        /// <summary>
        /// Gets or Sets CheckDetailing
        /// </summary>
        [DataMember(Name = "checkDetailing", EmitDefaultValue = true)]
        public bool CheckDetailing { get; set; }

        /// <summary>
        /// Gets or Sets PretensionForceFpc
        /// </summary>
        [DataMember(Name = "pretensionForceFpc", EmitDefaultValue = false)]
        public double PretensionForceFpc { get; set; }

        /// <summary>
        /// Gets or Sets GammaInst
        /// </summary>
        [DataMember(Name = "gammaInst", EmitDefaultValue = false)]
        public double GammaInst { get; set; }

        /// <summary>
        /// Gets or Sets GammaC
        /// </summary>
        [DataMember(Name = "gammaC", EmitDefaultValue = false)]
        public double GammaC { get; set; }

        /// <summary>
        /// Gets or Sets GammaM3
        /// </summary>
        [DataMember(Name = "gammaM3", EmitDefaultValue = false)]
        public double GammaM3 { get; set; }

        /// <summary>
        /// Gets or Sets AnchorLengthForStiffness
        /// </summary>
        [DataMember(Name = "anchorLengthForStiffness", EmitDefaultValue = false)]
        public int AnchorLengthForStiffness { get; set; }

        /// <summary>
        /// Gets or Sets JointBetaFactor
        /// </summary>
        [DataMember(Name = "jointBetaFactor", EmitDefaultValue = false)]
        public double JointBetaFactor { get; set; }

        /// <summary>
        /// Gets or Sets EffectiveAreaStressCoeff
        /// </summary>
        [DataMember(Name = "effectiveAreaStressCoeff", EmitDefaultValue = false)]
        public double EffectiveAreaStressCoeff { get; set; }

        /// <summary>
        /// Gets or Sets EffectiveAreaStressCoeffAISC
        /// </summary>
        [DataMember(Name = "effectiveAreaStressCoeffAISC", EmitDefaultValue = false)]
        public double EffectiveAreaStressCoeffAISC { get; set; }

        /// <summary>
        /// Gets or Sets FrictionCoefficient
        /// </summary>
        [DataMember(Name = "frictionCoefficient", EmitDefaultValue = false)]
        public double FrictionCoefficient { get; set; }

        /// <summary>
        /// Gets or Sets LimitPlasticStrain
        /// </summary>
        [DataMember(Name = "limitPlasticStrain", EmitDefaultValue = false)]
        public double LimitPlasticStrain { get; set; }

        /// <summary>
        /// Gets or Sets LimitDeformation
        /// </summary>
        [DataMember(Name = "limitDeformation", EmitDefaultValue = false)]
        public double LimitDeformation { get; set; }

        /// <summary>
        /// Gets or Sets LimitDeformationCheck
        /// </summary>
        [DataMember(Name = "limitDeformationCheck", EmitDefaultValue = true)]
        public bool LimitDeformationCheck { get; set; }

        /// <summary>
        /// Gets or Sets AnalysisGNL
        /// </summary>
        [DataMember(Name = "analysisGNL", EmitDefaultValue = true)]
        public bool AnalysisGNL { get; set; }

        /// <summary>
        /// Gets or Sets AnalysisAllGNL
        /// </summary>
        [DataMember(Name = "analysisAllGNL", EmitDefaultValue = true)]
        public bool AnalysisAllGNL { get; set; }

        /// <summary>
        /// Gets or Sets WarnPlasticStrain
        /// </summary>
        [DataMember(Name = "warnPlasticStrain", EmitDefaultValue = false)]
        public double WarnPlasticStrain { get; set; }

        /// <summary>
        /// Gets or Sets WarnCheckLevel
        /// </summary>
        [DataMember(Name = "warnCheckLevel", EmitDefaultValue = false)]
        public double WarnCheckLevel { get; set; }

        /// <summary>
        /// Gets or Sets OptimalCheckLevel
        /// </summary>
        [DataMember(Name = "optimalCheckLevel", EmitDefaultValue = false)]
        public double OptimalCheckLevel { get; set; }

        /// <summary>
        /// Gets or Sets DistanceBetweenBolts
        /// </summary>
        [DataMember(Name = "distanceBetweenBolts", EmitDefaultValue = false)]
        public double DistanceBetweenBolts { get; set; }

        /// <summary>
        /// Gets or Sets DistanceDiameterBetweenBP
        /// </summary>
        [DataMember(Name = "distanceDiameterBetweenBP", EmitDefaultValue = false)]
        public double DistanceDiameterBetweenBP { get; set; }

        /// <summary>
        /// Gets or Sets DistanceBetweenBoltsEdge
        /// </summary>
        [DataMember(Name = "distanceBetweenBoltsEdge", EmitDefaultValue = false)]
        public double DistanceBetweenBoltsEdge { get; set; }

        /// <summary>
        /// Gets or Sets BearingAngle
        /// </summary>
        [DataMember(Name = "bearingAngle", EmitDefaultValue = false)]
        public double BearingAngle { get; set; }

        /// <summary>
        /// Gets or Sets DecreasingFtrd
        /// </summary>
        [DataMember(Name = "decreasingFtrd", EmitDefaultValue = false)]
        public double DecreasingFtrd { get; set; }

        /// <summary>
        /// Gets or Sets BracedSystem
        /// </summary>
        [DataMember(Name = "bracedSystem", EmitDefaultValue = true)]
        public bool BracedSystem { get; set; }

        /// <summary>
        /// Gets or Sets BearingCheck
        /// </summary>
        [DataMember(Name = "bearingCheck", EmitDefaultValue = true)]
        public bool BearingCheck { get; set; }

        /// <summary>
        /// Gets or Sets ApplyBetapInfluence
        /// </summary>
        [DataMember(Name = "applyBetapInfluence", EmitDefaultValue = true)]
        public bool ApplyBetapInfluence { get; set; }

        /// <summary>
        /// Gets or Sets MemberLengthRatio
        /// </summary>
        [DataMember(Name = "memberLengthRatio", EmitDefaultValue = false)]
        public double MemberLengthRatio { get; set; }

        /// <summary>
        /// Gets or Sets DivisionOfSurfaceOfCHS
        /// </summary>
        [DataMember(Name = "divisionOfSurfaceOfCHS", EmitDefaultValue = false)]
        public int DivisionOfSurfaceOfCHS { get; set; }

        /// <summary>
        /// Gets or Sets DivisionOfArcsOfRHS
        /// </summary>
        [DataMember(Name = "divisionOfArcsOfRHS", EmitDefaultValue = false)]
        public int DivisionOfArcsOfRHS { get; set; }

        /// <summary>
        /// Gets or Sets NumElement
        /// </summary>
        [DataMember(Name = "numElement", EmitDefaultValue = false)]
        public int NumElement { get; set; }

        /// <summary>
        /// Gets or Sets NumberIterations
        /// </summary>
        [DataMember(Name = "numberIterations", EmitDefaultValue = false)]
        public int NumberIterations { get; set; }

        /// <summary>
        /// Gets or Sets Mdiv
        /// </summary>
        [DataMember(Name = "mdiv", EmitDefaultValue = false)]
        public int Mdiv { get; set; }

        /// <summary>
        /// Gets or Sets MinSize
        /// </summary>
        [DataMember(Name = "minSize", EmitDefaultValue = false)]
        public double MinSize { get; set; }

        /// <summary>
        /// Gets or Sets MaxSize
        /// </summary>
        [DataMember(Name = "maxSize", EmitDefaultValue = false)]
        public double MaxSize { get; set; }

        /// <summary>
        /// Gets or Sets NumElementRhs
        /// </summary>
        [DataMember(Name = "numElementRhs", EmitDefaultValue = false)]
        public int NumElementRhs { get; set; }

        /// <summary>
        /// Gets or Sets NumElementPlate
        /// </summary>
        [DataMember(Name = "numElementPlate", EmitDefaultValue = false)]
        public int NumElementPlate { get; set; }

        /// <summary>
        /// Gets or Sets RigidBP
        /// </summary>
        [DataMember(Name = "rigidBP", EmitDefaultValue = true)]
        public bool RigidBP { get; set; }

        /// <summary>
        /// Gets or Sets AlphaCC
        /// </summary>
        [DataMember(Name = "alphaCC", EmitDefaultValue = false)]
        public double AlphaCC { get; set; }

        /// <summary>
        /// Gets or Sets CrackedConcrete
        /// </summary>
        [DataMember(Name = "crackedConcrete", EmitDefaultValue = true)]
        public bool CrackedConcrete { get; set; }

        /// <summary>
        /// Gets or Sets DevelopedFillers
        /// </summary>
        [DataMember(Name = "developedFillers", EmitDefaultValue = true)]
        public bool DevelopedFillers { get; set; }

        /// <summary>
        /// Gets or Sets DeformationBoltHole
        /// </summary>
        [DataMember(Name = "deformationBoltHole", EmitDefaultValue = true)]
        public bool DeformationBoltHole { get; set; }

        /// <summary>
        /// Gets or Sets ExtensionLengthRationOpenSections
        /// </summary>
        [DataMember(Name = "extensionLengthRationOpenSections", EmitDefaultValue = false)]
        public double ExtensionLengthRationOpenSections { get; set; }

        /// <summary>
        /// Gets or Sets ExtensionLengthRationCloseSections
        /// </summary>
        [DataMember(Name = "extensionLengthRationCloseSections", EmitDefaultValue = false)]
        public double ExtensionLengthRationCloseSections { get; set; }

        /// <summary>
        /// Gets or Sets FactorPreloadBolt
        /// </summary>
        [DataMember(Name = "factorPreloadBolt", EmitDefaultValue = false)]
        public double FactorPreloadBolt { get; set; }

        /// <summary>
        /// Gets or Sets BaseMetalCapacity
        /// </summary>
        [DataMember(Name = "baseMetalCapacity", EmitDefaultValue = true)]
        public bool BaseMetalCapacity { get; set; }

        /// <summary>
        /// Gets or Sets ApplyBearingCheck
        /// </summary>
        [DataMember(Name = "applyBearingCheck", EmitDefaultValue = true)]
        public bool ApplyBearingCheck { get; set; }

        /// <summary>
        /// Gets or Sets FrictionCoefficientPbolt
        /// </summary>
        [DataMember(Name = "frictionCoefficientPbolt", EmitDefaultValue = false)]
        public double FrictionCoefficientPbolt { get; set; }

        /// <summary>
        /// Gets or Sets BoltMaxGripLengthCoeff
        /// </summary>
        [DataMember(Name = "boltMaxGripLengthCoeff", EmitDefaultValue = false)]
        public double BoltMaxGripLengthCoeff { get; set; }

        /// <summary>
        /// Gets or Sets FatigueSectionOffset
        /// </summary>
        [DataMember(Name = "fatigueSectionOffset", EmitDefaultValue = false)]
        public double FatigueSectionOffset { get; set; }

        /// <summary>
        /// Gets or Sets CondensedElementLengthFactor
        /// </summary>
        [DataMember(Name = "condensedElementLengthFactor", EmitDefaultValue = false)]
        public double CondensedElementLengthFactor { get; set; }

        /// <summary>
        /// Gets or Sets GammaMu
        /// </summary>
        [DataMember(Name = "gammaMu", EmitDefaultValue = false)]
        public double GammaMu { get; set; }

        /// <summary>
        /// Gets or Sets HssLimitPlasticStrain
        /// </summary>
        [DataMember(Name = "hssLimitPlasticStrain", EmitDefaultValue = false)]
        public double HssLimitPlasticStrain { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ConnectionSetupIdeaRSOpenModel {\n");
            sb.Append("  SteelSetup: ").Append(SteelSetup).Append("\n");
            sb.Append("  ConcreteSetup: ").Append(ConcreteSetup).Append("\n");
            sb.Append("  StopAtLimitStrain: ").Append(StopAtLimitStrain).Append("\n");
            sb.Append("  WeldEvaluationData: ").Append(WeldEvaluationData).Append("\n");
            sb.Append("  CheckDetailing: ").Append(CheckDetailing).Append("\n");
            sb.Append("  ApplyConeBreakoutCheck: ").Append(ApplyConeBreakoutCheck).Append("\n");
            sb.Append("  PretensionForceFpc: ").Append(PretensionForceFpc).Append("\n");
            sb.Append("  GammaInst: ").Append(GammaInst).Append("\n");
            sb.Append("  GammaC: ").Append(GammaC).Append("\n");
            sb.Append("  GammaM3: ").Append(GammaM3).Append("\n");
            sb.Append("  AnchorLengthForStiffness: ").Append(AnchorLengthForStiffness).Append("\n");
            sb.Append("  JointBetaFactor: ").Append(JointBetaFactor).Append("\n");
            sb.Append("  EffectiveAreaStressCoeff: ").Append(EffectiveAreaStressCoeff).Append("\n");
            sb.Append("  EffectiveAreaStressCoeffAISC: ").Append(EffectiveAreaStressCoeffAISC).Append("\n");
            sb.Append("  FrictionCoefficient: ").Append(FrictionCoefficient).Append("\n");
            sb.Append("  LimitPlasticStrain: ").Append(LimitPlasticStrain).Append("\n");
            sb.Append("  LimitDeformation: ").Append(LimitDeformation).Append("\n");
            sb.Append("  LimitDeformationCheck: ").Append(LimitDeformationCheck).Append("\n");
            sb.Append("  AnalysisGNL: ").Append(AnalysisGNL).Append("\n");
            sb.Append("  AnalysisAllGNL: ").Append(AnalysisAllGNL).Append("\n");
            sb.Append("  WarnPlasticStrain: ").Append(WarnPlasticStrain).Append("\n");
            sb.Append("  WarnCheckLevel: ").Append(WarnCheckLevel).Append("\n");
            sb.Append("  OptimalCheckLevel: ").Append(OptimalCheckLevel).Append("\n");
            sb.Append("  DistanceBetweenBolts: ").Append(DistanceBetweenBolts).Append("\n");
            sb.Append("  DistanceDiameterBetweenBP: ").Append(DistanceDiameterBetweenBP).Append("\n");
            sb.Append("  DistanceBetweenBoltsEdge: ").Append(DistanceBetweenBoltsEdge).Append("\n");
            sb.Append("  BearingAngle: ").Append(BearingAngle).Append("\n");
            sb.Append("  DecreasingFtrd: ").Append(DecreasingFtrd).Append("\n");
            sb.Append("  BracedSystem: ").Append(BracedSystem).Append("\n");
            sb.Append("  BearingCheck: ").Append(BearingCheck).Append("\n");
            sb.Append("  ApplyBetapInfluence: ").Append(ApplyBetapInfluence).Append("\n");
            sb.Append("  MemberLengthRatio: ").Append(MemberLengthRatio).Append("\n");
            sb.Append("  DivisionOfSurfaceOfCHS: ").Append(DivisionOfSurfaceOfCHS).Append("\n");
            sb.Append("  DivisionOfArcsOfRHS: ").Append(DivisionOfArcsOfRHS).Append("\n");
            sb.Append("  NumElement: ").Append(NumElement).Append("\n");
            sb.Append("  NumberIterations: ").Append(NumberIterations).Append("\n");
            sb.Append("  Mdiv: ").Append(Mdiv).Append("\n");
            sb.Append("  MinSize: ").Append(MinSize).Append("\n");
            sb.Append("  MaxSize: ").Append(MaxSize).Append("\n");
            sb.Append("  NumElementRhs: ").Append(NumElementRhs).Append("\n");
            sb.Append("  NumElementPlate: ").Append(NumElementPlate).Append("\n");
            sb.Append("  RigidBP: ").Append(RigidBP).Append("\n");
            sb.Append("  AlphaCC: ").Append(AlphaCC).Append("\n");
            sb.Append("  CrackedConcrete: ").Append(CrackedConcrete).Append("\n");
            sb.Append("  DevelopedFillers: ").Append(DevelopedFillers).Append("\n");
            sb.Append("  DeformationBoltHole: ").Append(DeformationBoltHole).Append("\n");
            sb.Append("  ExtensionLengthRationOpenSections: ").Append(ExtensionLengthRationOpenSections).Append("\n");
            sb.Append("  ExtensionLengthRationCloseSections: ").Append(ExtensionLengthRationCloseSections).Append("\n");
            sb.Append("  FactorPreloadBolt: ").Append(FactorPreloadBolt).Append("\n");
            sb.Append("  BaseMetalCapacity: ").Append(BaseMetalCapacity).Append("\n");
            sb.Append("  ApplyBearingCheck: ").Append(ApplyBearingCheck).Append("\n");
            sb.Append("  FrictionCoefficientPbolt: ").Append(FrictionCoefficientPbolt).Append("\n");
            sb.Append("  CrtCompCheckIS: ").Append(CrtCompCheckIS).Append("\n");
            sb.Append("  BoltMaxGripLengthCoeff: ").Append(BoltMaxGripLengthCoeff).Append("\n");
            sb.Append("  FatigueSectionOffset: ").Append(FatigueSectionOffset).Append("\n");
            sb.Append("  CondensedElementLengthFactor: ").Append(CondensedElementLengthFactor).Append("\n");
            sb.Append("  GammaMu: ").Append(GammaMu).Append("\n");
            sb.Append("  HssLimitPlasticStrain: ").Append(HssLimitPlasticStrain).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
