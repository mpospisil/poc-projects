/**
 * Connection Rest API 1.0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import http from 'http';
import { ConTemplateApplyParam } from '../model/conTemplateApplyParam';
import { ConTemplateMappingGetParam } from '../model/conTemplateMappingGetParam';
import { TemplateConversions } from '../model/templateConversions';
import { Authentication, Interceptor } from '../model/models';
export declare enum TemplateApiApiKeys {
}
export declare class TemplateApi {
    protected _basePath: string;
    protected _defaultHeaders: any;
    protected _useQuerystring: boolean;
    protected authentications: {
        default: Authentication;
    };
    protected interceptors: Interceptor[];
    constructor(basePath?: string);
    set useQuerystring(value: boolean);
    set basePath(basePath: string);
    set defaultHeaders(defaultHeaders: any);
    get defaultHeaders(): any;
    get basePath(): string;
    setDefaultAuthentication(auth: Authentication): void;
    setApiKey(key: TemplateApiApiKeys, value: string): void;
    addInterceptor(interceptor: Interceptor): void;
    /**
     *
     * @summary Apply the connection template applyTemplateParam on the connection connectionId in the project projectId
     * @param projectId The unique identifier of the opened project in the ConnectionRestApi service
     * @param connectionId Id of the connection where to apply the template
     * @param conTemplateApplyParam Template to apply
     */
    applyTemplate(projectId: string, connectionId: number, conTemplateApplyParam?: ConTemplateApplyParam, options?: {
        headers: {
            [name: string]: string;
        };
    }): Promise<{
        response: http.IncomingMessage;
        body: object;
    }>;
    /**
     *
     * @summary Create a template for the connection connectionId in the project projectId
     * @param projectId The unique identifier of the opened project in the ConnectionRestApi service
     * @param connectionId Id of the connection to be converted to a template
     */
    createConTemplate(projectId: string, connectionId: number, options?: {
        headers: {
            [name: string]: string;
        };
    }): Promise<{
        response: http.IncomingMessage;
        body: string;
    }>;
    /**
     * The result IdeaStatiCa.Api.Connection.Model.TemplateConversionsDefault mapping to apply the passed template.  It can be modified by a user and used for the application of a template M:IdeaStatiCa.ConnectionRestApi.Controllers.TemplateController.ApplyConnectionTemplateAsync(System.Guid,System.Int32,IdeaStatiCa.Api.Connection.Model.ConTemplateApplyParam) method.
     * @summary Get the default mappings for the application of the connection template passed in templateToApply  on connectionId in the project projectId
     * @param projectId The unique identifier of the opened project in the ConnectionRestApi service
     * @param connectionId Id of the connection to get default mapping
     * @param conTemplateMappingGetParam Data of the template to get default mapping
     */
    getDefaultTemplateMapping(projectId: string, connectionId: number, conTemplateMappingGetParam?: ConTemplateMappingGetParam, options?: {
        headers: {
            [name: string]: string;
        };
    }): Promise<{
        response: http.IncomingMessage;
        body: TemplateConversions;
    }>;
}
