# coding: utf-8

"""
    Connection Rest API 1.0

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from connection_restapi_client_poc.models.reinforced_cross_section import ReinforcedCrossSection

class TestReinforcedCrossSection(unittest.TestCase):
    """ReinforcedCrossSection unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ReinforcedCrossSection:
        """Test ReinforcedCrossSection
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ReinforcedCrossSection`
        """
        model = ReinforcedCrossSection()
        if include_optional:
            return ReinforcedCrossSection(
                name = '',
                cross_section = connection_restapi_client_poc.models.reference_element.ReferenceElement(
                    type_name = '', 
                    id = 56, 
                    element = connection_restapi_client_poc.models.open_element_id.OpenElementId(
                        id = 56, ), ),
                bars = [
                    connection_restapi_client_poc.models.reinforced_bar.ReinforcedBar(
                        point = connection_restapi_client_poc.models.point2_d.Point2D(
                            x = 1.337, 
                            y = 1.337, ), 
                        diameter = 1.337, 
                        material = connection_restapi_client_poc.models.reference_element.ReferenceElement(
                            type_name = '', 
                            id = 56, 
                            element = connection_restapi_client_poc.models.open_element_id.OpenElementId(
                                id = 56, ), ), )
                    ],
                stirrups = [
                    connection_restapi_client_poc.models.stirrup.Stirrup(
                        geometry = connection_restapi_client_poc.models.poly_line2_d.PolyLine2D(
                            start_point = connection_restapi_client_poc.models.point2_d.Point2D(
                                x = 1.337, 
                                y = 1.337, ), 
                            segments = [
                                connection_restapi_client_poc.models.segment2_d.Segment2D(
                                    end_point = connection_restapi_client_poc.models.point2_d.Point2D(
                                        x = 1.337, 
                                        y = 1.337, ), )
                                ], ), 
                        diameter = 1.337, 
                        material = connection_restapi_client_poc.models.reference_element.ReferenceElement(
                            type_name = '', 
                            id = 56, 
                            element = connection_restapi_client_poc.models.open_element_id.OpenElementId(
                                id = 56, ), ), 
                        anchorage_lenght = 1.337, 
                        diameter_of_mandrel = 1.337, 
                        is_closed = True, 
                        distance = 1.337, 
                        shear_check = True, 
                        torsion_check = True, )
                    ],
                tendon_bars = [
                    connection_restapi_client_poc.models.tendon_bar.TendonBar(
                        id = 56, 
                        tendon_type = 'posttensioned', 
                        point = connection_restapi_client_poc.models.point2_d.Point2D(
                            x = 1.337, 
                            y = 1.337, ), 
                        material = connection_restapi_client_poc.models.reference_element.ReferenceElement(
                            type_name = '', 
                            id = 56, 
                            element = connection_restapi_client_poc.models.open_element_id.OpenElementId(
                                id = 56, ), ), 
                        prestressing_order = 56, 
                        num_strands_in_tendon = 56, 
                        prestress_reinforcement_type = 'postTensioningSingleStrandsInPlasticDucts', 
                        phase = 56, 
                        tendon_duct = connection_restapi_client_poc.models.tendon_duct.TendonDuct(
                            id = 56, 
                            material_duct = 'metal', 
                            is_debonding_tube = True, 
                            diameter = 1.337, ), )
                    ],
                tendon_ducts = [
                    connection_restapi_client_poc.models.tendon_duct.TendonDuct(
                        id = 56, 
                        point = connection_restapi_client_poc.models.point2_d.Point2D(
                            x = 1.337, 
                            y = 1.337, ), 
                        material_duct = 'metal', 
                        is_debonding_tube = True, 
                        diameter = 1.337, )
                    ],
                id = 56
            )
        else:
            return ReinforcedCrossSection(
        )
        """

    def testReinforcedCrossSection(self):
        """Test ReinforcedCrossSection"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
