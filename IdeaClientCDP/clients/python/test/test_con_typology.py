# coding: utf-8

"""
    ConDesignProposer API 1.0

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from idea_cdp_client_poc.models.con_typology import ConTypology

class TestConTypology(unittest.TestCase):
    """ConTypology unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ConTypology:
        """Test ConTypology
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ConTypology`
        """
        model = ConTypology()
        if include_optional:
            return ConTypology(
                bearing_member = idea_cdp_client_poc.models.bearing_member_data.BearingMemberData(
                    operation_id = 56, 
                    order = 56, 
                    inclination = 1.337, 
                    continuity_type = 0, 
                    css_meta_data = idea_cdp_client_poc.models.css_data.CssData(
                        arc_segment_count = 56, 
                        css_class = 0, 
                        css_size = idea_cdp_client_poc.models.css_size.CssSize(
                            width = 1.337, 
                            height = 1.337, ), 
                        integrality_type = 0, 
                        label = '', 
                        main_segment_count = 56, 
                        shape = 0, 
                        type = '', 
                        form_code = 0, ), 
                    rigidity = 0, 
                    static_behaviour = 56, ),
                connected_members = [
                    idea_cdp_client_poc.models.connected_member_data.ConnectedMemberData(
                        operation_id = 56, 
                        typological_sector_code = 56, 
                        order = 56, 
                        lcs_rotatiton = 1.337, 
                        continuity_type = 0, 
                        css_meta_data = idea_cdp_client_poc.models.css_data.CssData(
                            arc_segment_count = 56, 
                            css_class = 0, 
                            css_size = idea_cdp_client_poc.models.css_size.CssSize(
                                width = 1.337, 
                                height = 1.337, ), 
                            integrality_type = 0, 
                            label = '', 
                            main_segment_count = 56, 
                            shape = 0, 
                            type = '', 
                            form_code = 0, ), 
                        rigidity = 0, 
                        dir_related_to_bearing = 0, 
                        static_behaviour = 56, )
                    ],
                typology_code = ''
            )
        else:
            return ConTypology(
        )
        """

    def testConTypology(self):
        """Test ConTypology"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
