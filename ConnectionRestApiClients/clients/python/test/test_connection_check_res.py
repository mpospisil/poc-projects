# coding: utf-8

"""
    Connection Rest API 1.0

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from connection_restapi_client_poc.models.connection_check_res import ConnectionCheckRes

class TestConnectionCheckRes(unittest.TestCase):
    """ConnectionCheckRes unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ConnectionCheckRes:
        """Test ConnectionCheckRes
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ConnectionCheckRes`
        """
        model = ConnectionCheckRes()
        if include_optional:
            return ConnectionCheckRes(
                check_res_summary = [
                    connection_restapi_client_poc.models.check_res_summary.CheckResSummary(
                        check_value = 1.337, 
                        check_status = True, 
                        load_case_id = 56, 
                        name = '', 
                        unity_check_message = '', 
                        skipped = True, )
                    ],
                check_res_plate = [
                    connection_restapi_client_poc.models.check_res_plate.CheckResPlate(
                        name = '', 
                        check_status = True, 
                        load_case_id = 56, 
                        max_strain = 1.337, 
                        max_stress = 1.337, 
                        items = [
                            56
                            ], )
                    ],
                check_res_weld = [
                    connection_restapi_client_poc.models.check_res_weld.CheckResWeld(
                        name = '', 
                        id = 56, 
                        unity_check = 1.337, 
                        check_status = True, 
                        load_case_id = 56, 
                        items = [
                            56
                            ], )
                    ],
                check_res_bolt = [
                    connection_restapi_client_poc.models.check_res_bolt.CheckResBolt(
                        name = '', 
                        unity_check = 1.337, 
                        check_status = True, )
                    ],
                check_res_anchor = [
                    connection_restapi_client_poc.models.check_res_anchor.CheckResAnchor(
                        name = '', 
                        unity_check = 1.337, 
                        check_status = True, )
                    ],
                check_res_concrete_block = [
                    connection_restapi_client_poc.models.check_res_concrete_block.CheckResConcreteBlock(
                        name = '', 
                        unity_check = 1.337, 
                        check_status = True, 
                        load_case_id = 56, )
                    ],
                buckling_results = [
                    connection_restapi_client_poc.models.buckling_res.BucklingRes(
                        load_case_id = 56, 
                        shape = 56, 
                        factor = 1.337, )
                    ],
                name = '',
                connection_id = '',
                id = 56,
                messages = connection_restapi_client_poc.models.open_messages.OpenMessages(
                    messages = [
                        connection_restapi_client_poc.models.open_message.OpenMessage(
                            number = 'unspecified', 
                            description = '', )
                        ], )
            )
        else:
            return ConnectionCheckRes(
        )
        """

    def testConnectionCheckRes(self):
        """Test ConnectionCheckRes"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
