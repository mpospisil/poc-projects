# coding: utf-8

"""
    ConDesignProposer API 1.0

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from idea_cdp_client_poc.models.con_manufacture import ConManufacture

class TestConManufacture(unittest.TestCase):
    """ConManufacture unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ConManufacture:
        """Test ConManufacture
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ConManufacture`
        """
        model = ConManufacture()
        if include_optional:
            return ConManufacture(
                manufacturing_type = 0,
                connection_template = '',
                con_parts = [
                    idea_cdp_client_poc.models.con_part.ConPart(
                        stiffness = 0, 
                        category = 0, )
                    ],
                operations_info = idea_cdp_client_poc.models.operations_info.OperationsInfo(
                    end_plate = idea_cdp_client_poc.models.end_plate.EndPlate(
                        count = 56, ), 
                    shifted_end_plate = idea_cdp_client_poc.models.shifted_end_plate.ShiftedEndPlate(
                        count = 56, ), 
                    stub = idea_cdp_client_poc.models.stub.Stub(
                        count = 56, ), 
                    plate_to_plate = idea_cdp_client_poc.models.plate_to_plate.PlateToPlate(
                        count = 56, ), 
                    splice_plate = idea_cdp_client_poc.models.splice_plate.SplicePlate(
                        count = 56, ), 
                    gusset_plate = idea_cdp_client_poc.models.gusset_plate.GussetPlate(
                        count = 56, 
                        gusset_plate_type = 0, ), 
                    connecting_plate = idea_cdp_client_poc.models.connecting_plate.ConnectingPlate(
                        count = 56, 
                        connecting_plate_type = 0, ), 
                    fin_plate = idea_cdp_client_poc.models.fin_plate.FinPlate(
                        count = 56, ), 
                    cleat = idea_cdp_client_poc.models.cleat.Cleat(
                        count = 56, ), 
                    anchoring = idea_cdp_client_poc.models.anchoring.Anchoring(
                        count = 56, 
                        anchoring_type = 0, ), 
                    opening = idea_cdp_client_poc.models.opening.Opening(
                        count = 56, ), 
                    general_plate = idea_cdp_client_poc.models.general_plate.GeneralPlate(
                        count = 56, 
                        general_plate_type = 0, ), 
                    stiffener = idea_cdp_client_poc.models.stiffener.Stiffener(
                        count = 56, ), 
                    bolt_grid = idea_cdp_client_poc.models.bolt_grid.BoltGrid(
                        count = 56, ), 
                    pin_grid = idea_cdp_client_poc.models.pin_grid.PinGrid(
                        count = 56, ), ),
                typology_code = ''
            )
        else:
            return ConManufacture(
        )
        """

    def testConManufacture(self):
        """Test ConManufacture"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
