/**
 * Connection Rest API 1.0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import http from 'http';
import { ConMprlCrossSection } from '../model/conMprlCrossSection';
import { ConMprlElement } from '../model/conMprlElement';
import { Authentication, Interceptor } from '../model/models';
export declare enum MaterialApiApiKeys {
}
export declare class MaterialApi {
    protected _basePath: string;
    protected _defaultHeaders: any;
    protected _useQuerystring: boolean;
    protected authentications: {
        default: Authentication;
    };
    protected interceptors: Interceptor[];
    constructor(basePath?: string);
    set useQuerystring(value: boolean);
    set basePath(basePath: string);
    set defaultHeaders(defaultHeaders: any);
    get defaultHeaders(): any;
    get basePath(): string;
    setDefaultAuthentication(auth: Authentication): void;
    setApiKey(key: MaterialApiApiKeys, value: string): void;
    addInterceptor(interceptor: Interceptor): void;
    /**
     *
     * @summary Add bolt assembly to the project
     * @param projectId The unique identifier of the opened project in the ConnectionRestApi service
     * @param conMprlElement Definition of a new bolt assemby to be added to the project
     */
    addBoltAssembly(projectId: string, conMprlElement?: ConMprlElement, options?: {
        headers: {
            [name: string]: string;
        };
    }): Promise<{
        response: http.IncomingMessage;
        body: ConMprlElement;
    }>;
    /**
     *
     * @summary Add cross section to the project
     * @param projectId The unique identifier of the opened project in the ConnectionRestApi service
     * @param conMprlCrossSection Definition of a new cross-section to be added to the project
     */
    addCrossSection(projectId: string, conMprlCrossSection?: ConMprlCrossSection, options?: {
        headers: {
            [name: string]: string;
        };
    }): Promise<{
        response: http.IncomingMessage;
        body: ConMprlCrossSection;
    }>;
    /**
     *
     * @summary Add material to the project
     * @param projectId The unique identifier of the opened project in the ConnectionRestApi service
     * @param conMprlElement Definition of a new material to be added to the project
     */
    addMaterialBoltGrade(projectId: string, conMprlElement?: ConMprlElement, options?: {
        headers: {
            [name: string]: string;
        };
    }): Promise<{
        response: http.IncomingMessage;
        body: ConMprlElement;
    }>;
    /**
     *
     * @summary Add material to the project
     * @param projectId The unique identifier of the opened project in the ConnectionRestApi service
     * @param conMprlElement Definition of a new material to be added to the project
     */
    addMaterialConcrete(projectId: string, conMprlElement?: ConMprlElement, options?: {
        headers: {
            [name: string]: string;
        };
    }): Promise<{
        response: http.IncomingMessage;
        body: ConMprlElement;
    }>;
    /**
     *
     * @summary Add material to the project
     * @param projectId The unique identifier of the opened project in the ConnectionRestApi service
     * @param conMprlElement Definition of a new material to be added to the project
     */
    addMaterialSteel(projectId: string, conMprlElement?: ConMprlElement, options?: {
        headers: {
            [name: string]: string;
        };
    }): Promise<{
        response: http.IncomingMessage;
        body: ConMprlElement;
    }>;
    /**
     *
     * @summary Add material to the project
     * @param projectId The unique identifier of the opened project in the ConnectionRestApi service
     * @param conMprlElement Definition of a new material to be added to the project
     */
    addMaterialWeld(projectId: string, conMprlElement?: ConMprlElement, options?: {
        headers: {
            [name: string]: string;
        };
    }): Promise<{
        response: http.IncomingMessage;
        body: ConMprlElement;
    }>;
    /**
     *
     * @summary Get materials which are used in the project projectId
     * @param projectId The unique identifier of the opened project in the ConnectionRestApi service
     */
    getAllMaterials(projectId: string, options?: {
        headers: {
            [name: string]: string;
        };
    }): Promise<{
        response: http.IncomingMessage;
        body: Array<any>;
    }>;
    /**
     *
     * @summary Get materials which are used in the project projectId
     * @param projectId The unique identifier of the opened project in the ConnectionRestApi service
     */
    getBlotGradeMaterials(projectId: string, options?: {
        headers: {
            [name: string]: string;
        };
    }): Promise<{
        response: http.IncomingMessage;
        body: Array<any>;
    }>;
    /**
     *
     * @summary Get bolt assemblies which are used in the project projectId
     * @param projectId The unique identifier of the opened project in the ConnectionRestApi service
     */
    getBoltAssemblies(projectId: string, options?: {
        headers: {
            [name: string]: string;
        };
    }): Promise<{
        response: http.IncomingMessage;
        body: Array<any>;
    }>;
    /**
     *
     * @summary Get materials which are used in the project projectId
     * @param projectId The unique identifier of the opened project in the ConnectionRestApi service
     */
    getConcreteMaterials(projectId: string, options?: {
        headers: {
            [name: string]: string;
        };
    }): Promise<{
        response: http.IncomingMessage;
        body: Array<any>;
    }>;
    /**
     *
     * @summary Get cross sections which are used in the project projectId
     * @param projectId The unique identifier of the opened project in the ConnectionRestApi service
     */
    getCrossSections(projectId: string, options?: {
        headers: {
            [name: string]: string;
        };
    }): Promise<{
        response: http.IncomingMessage;
        body: Array<any>;
    }>;
    /**
     *
     * @summary Get materials which are used in the project projectId
     * @param projectId The unique identifier of the opened project in the ConnectionRestApi service
     */
    getSteelMaterials(projectId: string, options?: {
        headers: {
            [name: string]: string;
        };
    }): Promise<{
        response: http.IncomingMessage;
        body: Array<any>;
    }>;
    /**
     *
     * @summary Get materials which are used in the project projectId
     * @param projectId The unique identifier of the opened project in the ConnectionRestApi service
     */
    getWeldingMaterials(projectId: string, options?: {
        headers: {
            [name: string]: string;
        };
    }): Promise<{
        response: http.IncomingMessage;
        body: Array<any>;
    }>;
}
