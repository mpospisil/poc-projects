/*
 * Connection Rest API 1.0
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using connection_restapi_client_poc.Client;
using connection_restapi_client_poc.Api;
// uncomment below to import models
//using connection_restapi_client_poc.Model;

namespace connection_restapi_client_poc.Test.Api
{
    /// <summary>
    ///  Class for testing MaterialApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class MaterialApiTests : IDisposable
    {
        private MaterialApi instance;

        public MaterialApiTests()
        {
            instance = new MaterialApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of MaterialApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' MaterialApi
            //Assert.IsType<MaterialApi>(instance);
        }

        /// <summary>
        /// Test AddBoltAssembly
        /// </summary>
        [Fact]
        public void AddBoltAssemblyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid projectId = null;
            //ConMprlElement? conMprlElement = null;
            //var response = instance.AddBoltAssembly(projectId, conMprlElement);
            //Assert.IsType<ConMprlElement>(response);
        }

        /// <summary>
        /// Test AddCrossSection
        /// </summary>
        [Fact]
        public void AddCrossSectionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid projectId = null;
            //ConMprlCrossSection? conMprlCrossSection = null;
            //var response = instance.AddCrossSection(projectId, conMprlCrossSection);
            //Assert.IsType<ConMprlCrossSection>(response);
        }

        /// <summary>
        /// Test AddMaterialBoltGrade
        /// </summary>
        [Fact]
        public void AddMaterialBoltGradeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid projectId = null;
            //ConMprlElement? conMprlElement = null;
            //var response = instance.AddMaterialBoltGrade(projectId, conMprlElement);
            //Assert.IsType<ConMprlElement>(response);
        }

        /// <summary>
        /// Test AddMaterialConcrete
        /// </summary>
        [Fact]
        public void AddMaterialConcreteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid projectId = null;
            //ConMprlElement? conMprlElement = null;
            //var response = instance.AddMaterialConcrete(projectId, conMprlElement);
            //Assert.IsType<ConMprlElement>(response);
        }

        /// <summary>
        /// Test AddMaterialSteel
        /// </summary>
        [Fact]
        public void AddMaterialSteelTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid projectId = null;
            //ConMprlElement? conMprlElement = null;
            //var response = instance.AddMaterialSteel(projectId, conMprlElement);
            //Assert.IsType<ConMprlElement>(response);
        }

        /// <summary>
        /// Test AddMaterialWeld
        /// </summary>
        [Fact]
        public void AddMaterialWeldTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid projectId = null;
            //ConMprlElement? conMprlElement = null;
            //var response = instance.AddMaterialWeld(projectId, conMprlElement);
            //Assert.IsType<ConMprlElement>(response);
        }

        /// <summary>
        /// Test GetAllMaterials
        /// </summary>
        [Fact]
        public void GetAllMaterialsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid projectId = null;
            //var response = instance.GetAllMaterials(projectId);
            //Assert.IsType<List<Object>>(response);
        }

        /// <summary>
        /// Test GetBlotGradeMaterials
        /// </summary>
        [Fact]
        public void GetBlotGradeMaterialsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid projectId = null;
            //var response = instance.GetBlotGradeMaterials(projectId);
            //Assert.IsType<List<Object>>(response);
        }

        /// <summary>
        /// Test GetBoltAssemblies
        /// </summary>
        [Fact]
        public void GetBoltAssembliesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid projectId = null;
            //var response = instance.GetBoltAssemblies(projectId);
            //Assert.IsType<List<Object>>(response);
        }

        /// <summary>
        /// Test GetConcreteMaterials
        /// </summary>
        [Fact]
        public void GetConcreteMaterialsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid projectId = null;
            //var response = instance.GetConcreteMaterials(projectId);
            //Assert.IsType<List<Object>>(response);
        }

        /// <summary>
        /// Test GetCrossSections
        /// </summary>
        [Fact]
        public void GetCrossSectionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid projectId = null;
            //var response = instance.GetCrossSections(projectId);
            //Assert.IsType<List<Object>>(response);
        }

        /// <summary>
        /// Test GetSteelMaterials
        /// </summary>
        [Fact]
        public void GetSteelMaterialsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid projectId = null;
            //var response = instance.GetSteelMaterials(projectId);
            //Assert.IsType<List<Object>>(response);
        }

        /// <summary>
        /// Test GetWeldingMaterials
        /// </summary>
        [Fact]
        public void GetWeldingMaterialsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid projectId = null;
            //var response = instance.GetWeldingMaterials(projectId);
            //Assert.IsType<List<Object>>(response);
        }
    }
}
