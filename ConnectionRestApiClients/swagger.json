{
  "openapi": "3.0.1",
  "info": {
    "title": "Connection Rest API 1.0",
    "version": "1.0"
  },
  "paths": {
    "/api/1/projects/{projectId}/calculate": {
      "post": {
        "tags": [
          "Calculation"
        ],
        "summary": "Run CBFEM caluclation and return the summary of the results",
        "operationId": "Calculate",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The unique identifier of the opened project in the ConnectionRestApi service",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "List of connections to calculate and a type of CBFEM analysis",
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_ConCalculationParameter-IdeaStatiCa_Api"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_ConCalculationParameter-IdeaStatiCa_Api"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_ConCalculationParameter-IdeaStatiCa_Api"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_ConCalculationParameter-IdeaStatiCa_Api"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_ConCalculationParameter-IdeaStatiCa_Api"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_ConCalculationParameter-IdeaStatiCa_Api"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_ConCalculationParameter-IdeaStatiCa_Api"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_ConResultSummary-IdeaStatiCa_Api"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/1/projects/{projectId}/results": {
      "post": {
        "tags": [
          "Calculation"
        ],
        "summary": "Get detailed results of the CBFEM analysis",
        "operationId": "GetResults",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The unique identifier of the opened project in the ConnectionRestApi service",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "List of connections to calculate and a type of CBFEM analysis",
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_ConCalculationParameter-IdeaStatiCa_Api"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_ConCalculationParameter-IdeaStatiCa_Api"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_ConCalculationParameter-IdeaStatiCa_Api"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_ConCalculationParameter-IdeaStatiCa_Api"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_ConCalculationParameter-IdeaStatiCa_Api"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_ConCalculationParameter-IdeaStatiCa_Api"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_ConCalculationParameter-IdeaStatiCa_Api"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Connection_ConnectionCheckRes-IdeaRS_OpenModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/1/projects/{projectId}/rawresults-text": {
      "post": {
        "tags": [
          "Calculation"
        ],
        "summary": "Get json string which represents raw CBFEM results (an instance of CheckResultsData)",
        "operationId": "GetRawJsonResults",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The unique identifier of the opened connection in the ConnectionRestApi service",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Type of requested analysis and connection to calculate",
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_ConCalculationParameter-IdeaStatiCa_Api"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_ConCalculationParameter-IdeaStatiCa_Api"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_ConCalculationParameter-IdeaStatiCa_Api"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_ConCalculationParameter-IdeaStatiCa_Api"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_ConCalculationParameter-IdeaStatiCa_Api"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_ConCalculationParameter-IdeaStatiCa_Api"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_ConCalculationParameter-IdeaStatiCa_Api"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/1/projects/{projectId}/connections": {
      "get": {
        "tags": [
          "Connection"
        ],
        "summary": "Get data about all connections in the project",
        "operationId": "GetAllConnectionsData",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The unique identifier of the opened project in the ConnectionRestApi service",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_ConConnection-IdeaStatiCa_Api"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/1/projects/{projectId}/connections/{connectionId}": {
      "get": {
        "tags": [
          "Connection"
        ],
        "summary": "Get data about a specific connection in the project",
        "operationId": "GetConnectionData",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The unique identifier of the opened project in the ConnectionRestApi service",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "connectionId",
            "in": "path",
            "description": "The id of the requested connection",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_ConConnection-IdeaStatiCa_Api"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Connection"
        ],
        "summary": "Update data of a specific connection in the project",
        "operationId": "UpdateConnectionData",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The unique identifier of the opened project in the ConnectionRestApi service",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "connectionId",
            "in": "path",
            "description": "Id of the connection to be update",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "New connection data to be set",
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_ConConnection-IdeaStatiCa_Api"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_ConConnection-IdeaStatiCa_Api"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_ConConnection-IdeaStatiCa_Api"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_ConConnection-IdeaStatiCa_Api"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_ConConnection-IdeaStatiCa_Api"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_ConConnection-IdeaStatiCa_Api"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_ConConnection-IdeaStatiCa_Api"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_ConConnection-IdeaStatiCa_Api"
                }
              }
            }
          }
        }
      }
    },
    "/api/1/projects/{projectId}/connections/{connectionId}/operations": {
      "get": {
        "tags": [
          "Connection"
        ],
        "summary": "Get the list of operations for the connection",
        "operationId": "GetOperations",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The unique identifier of the opened project in the ConnectionRestApi service",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "connectionId",
            "in": "path",
            "description": "Id of the requested connection",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_ConOperation-IdeaStatiCa_Api"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Connection"
        ],
        "summary": "Delete all operations for the connection",
        "operationId": "DeleteOperations",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The unique identifier of the opened project in the ConnectionRestApi service",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "connectionId",
            "in": "path",
            "description": "Id of the connection to be modified",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_OkObjectResult-Microsoft_AspNetCore_Mvc_Core"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_OkObjectResult-Microsoft_AspNetCore_Mvc_Core"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_OkObjectResult-Microsoft_AspNetCore_Mvc_Core"
                }
              }
            }
          }
        }
      }
    },
    "/api/1/projects/{projectId}/connections/{connectionId}/missing-welds": {
      "get": {
        "tags": [
          "Connection"
        ],
        "summary": "Get missing welds in the connection",
        "operationId": "GetMissingWelds",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The unique identifier of the opened project in the ConnectionRestApi service",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "connectionId",
            "in": "path",
            "description": "Id of the requested connection in the project",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_ConMissingWeld-IdeaStatiCa_Api"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/1/projects/{projectId}/connections/{connectionId}/production-cost": {
      "get": {
        "tags": [
          "Connection"
        ],
        "summary": "Get production cost of the connection",
        "operationId": "GetProductionCost",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The unique identifier of the opened project in the ConnectionRestApi service",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "connectionId",
            "in": "path",
            "description": "Id of the requested connection",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_ConProductionCost-IdeaStatiCa_Api"
                }
              }
            }
          }
        }
      }
    },
    "/api/1/projects/{projectId}/connections/{connectionId}/export-iom": {
      "get": {
        "tags": [
          "Export"
        ],
        "summary": "Export connection to XML which includes https://github.com/idea-statica/ideastatica-public/blob/main/src/IdeaRS.OpenModel/OpenModelContainer.cs",
        "operationId": "ExportIomXml",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "connectionId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/1/projects/{projectId}/connections/{connectionId}/export-iom-connection-data": {
      "get": {
        "tags": [
          "Export"
        ],
        "summary": "Get https://github.com/idea-statica/ideastatica-public/blob/main/src/IdeaRS.OpenModel/Connection/ConnectionData.cs for required connection",
        "operationId": "ExportConnectionData",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "connectionId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Connection_ConnectionData-IdeaRS_OpenModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/1/projects/{projectId}/connections/{connectionId}/export-ifc": {
      "get": {
        "tags": [
          "Export"
        ],
        "summary": "Export connection to IFC format",
        "operationId": "ExportConnectionIFC",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "connectionId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/System_IO_MemoryStream-System_Private_CoreLib"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/System_IO_MemoryStream-System_Private_CoreLib"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/System_IO_MemoryStream-System_Private_CoreLib"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/System_IO_MemoryStream-System_Private_CoreLib"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/System_IO_MemoryStream-System_Private_CoreLib"
                }
              }
            }
          }
        }
      }
    },
    "/api/1/projects/{projectId}/connections/{connectionId}/load-effects": {
      "get": {
        "tags": [
          "LoadEffect"
        ],
        "summary": "Get all load effects which are defined in connectionId",
        "operationId": "GetLoadEffects",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "connectionId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "isPercentage",
            "in": "query",
            "description": "",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_ConLoadEffect-IdeaStatiCa_Api"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "LoadEffect"
        ],
        "summary": "Add new load effect to the connection",
        "operationId": "AddLoadEffect",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "connectionId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_ConLoadEffect-IdeaStatiCa_Api"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_ConLoadEffect-IdeaStatiCa_Api"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_ConLoadEffect-IdeaStatiCa_Api"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_ConLoadEffect-IdeaStatiCa_Api"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoadEffectData-IdeaStatiCa_ConnectionChecks"
                }
              }
            }
          }
        }
      }
    },
    "/api/1/projects/{projectId}/connections/{connectionId}/load-effects/{loadEffectId}": {
      "get": {
        "tags": [
          "LoadEffect"
        ],
        "summary": "Get load impulses from loadEffectId",
        "operationId": "GetLoadEffect",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "connectionId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "loadEffectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "isPercentage",
            "in": "query",
            "description": "",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_ConLoadEffect-IdeaStatiCa_Api"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "LoadEffect"
        ],
        "summary": "Update load impulses in loadEffectId",
        "operationId": "UpdateLoadEffect",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "connectionId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "loadEffectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_ConLoadEffect-IdeaStatiCa_Api"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_ConLoadEffect-IdeaStatiCa_Api"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_ConLoadEffect-IdeaStatiCa_Api"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_ConLoadEffect-IdeaStatiCa_Api"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_ConLoadEffect-IdeaStatiCa_Api"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "LoadEffect"
        ],
        "summary": "Delete load effect loadEffectId",
        "operationId": "DeleteLoadEffect",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "connectionId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "loadEffectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/1/projects/{projectId}/connections/{connectionId}/load-effects/set-equilibrium": {
      "post": {
        "tags": [
          "LoadEffect"
        ],
        "summary": "Update the option 'LoadsInEquilibrium' for connectionId",
        "operationId": "SetLoadsInEquilibrium",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "connectionId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "loadsInEquilibrium",
            "in": "query",
            "description": "Value to be set",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/1/projects/{projectId}/connections/{connectionId}/materials": {
      "get": {
        "tags": [
          "Material"
        ],
        "summary": "Get materials which are used in the connectionId",
        "operationId": "GetAllMaterials",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The unique identifier of the opened project in the ConnectionRestApi service",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "connectionId",
            "in": "path",
            "description": "Id of the connection to get its materials",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { }
                }
              }
            }
          }
        }
      }
    },
    "/api/1/projects/{projectId}/connections/{connectionId}/materials/steel": {
      "get": {
        "tags": [
          "Material"
        ],
        "summary": "Get materials which are used in the connectionId",
        "operationId": "GetSteelMaterials",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The unique identifier of the opened project in the ConnectionRestApi service",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "connectionId",
            "in": "path",
            "description": "Id of the connection to get its materials",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Material"
        ],
        "summary": "Add material to the project",
        "operationId": "AddMaterialSteel",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The unique identifier of the opened project in the ConnectionRestApi service",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "connectionId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Definition of a new material to be added to the project",
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_Material_ConMprlElement-IdeaStatiCa_Api"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_Material_ConMprlElement-IdeaStatiCa_Api"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_Material_ConMprlElement-IdeaStatiCa_Api"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_Material_ConMprlElement-IdeaStatiCa_Api"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_Material_ConMprlElement-IdeaStatiCa_Api"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_Material_ConMprlElement-IdeaStatiCa_Api"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_Material_ConMprlElement-IdeaStatiCa_Api"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_Material_ConMprlElement-IdeaStatiCa_Api"
                }
              }
            }
          }
        }
      }
    },
    "/api/1/projects/{projectId}/connections/{connectionId}/materials/concrete": {
      "get": {
        "tags": [
          "Material"
        ],
        "summary": "Get materials which are used in the connectionId",
        "operationId": "GetConcreteMaterials",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The unique identifier of the opened project in the ConnectionRestApi service",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "connectionId",
            "in": "path",
            "description": "Id of the connection to get its materials",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Material"
        ],
        "summary": "Add material to the project",
        "operationId": "AddMaterialConcrete",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The unique identifier of the opened project in the ConnectionRestApi service",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "connectionId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Definition of a new material to be added to the project",
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_Material_ConMprlElement-IdeaStatiCa_Api"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_Material_ConMprlElement-IdeaStatiCa_Api"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_Material_ConMprlElement-IdeaStatiCa_Api"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_Material_ConMprlElement-IdeaStatiCa_Api"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_Material_ConMprlElement-IdeaStatiCa_Api"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_Material_ConMprlElement-IdeaStatiCa_Api"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_Material_ConMprlElement-IdeaStatiCa_Api"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_Material_ConMprlElement-IdeaStatiCa_Api"
                }
              }
            }
          }
        }
      }
    },
    "/api/1/projects/{projectId}/connections/{connectionId}/materials/bolt-grade": {
      "get": {
        "tags": [
          "Material"
        ],
        "summary": "Get materials which are used in the connectionId",
        "operationId": "GetBlotGradeMaterials",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The unique identifier of the opened project in the ConnectionRestApi service",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "connectionId",
            "in": "path",
            "description": "Id of the connection to get its materials",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Material"
        ],
        "summary": "Add material to the project",
        "operationId": "AddMaterialBoltGrade",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The unique identifier of the opened project in the ConnectionRestApi service",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "connectionId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Definition of a new material to be added to the project",
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_Material_ConMprlElement-IdeaStatiCa_Api"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_Material_ConMprlElement-IdeaStatiCa_Api"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_Material_ConMprlElement-IdeaStatiCa_Api"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_Material_ConMprlElement-IdeaStatiCa_Api"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_Material_ConMprlElement-IdeaStatiCa_Api"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_Material_ConMprlElement-IdeaStatiCa_Api"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_Material_ConMprlElement-IdeaStatiCa_Api"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_Material_ConMprlElement-IdeaStatiCa_Api"
                }
              }
            }
          }
        }
      }
    },
    "/api/1/projects/{projectId}/connections/{connectionId}/materials/welding": {
      "get": {
        "tags": [
          "Material"
        ],
        "summary": "Get materials which are used in the connectionId",
        "operationId": "GetWeldingMaterials",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The unique identifier of the opened project in the ConnectionRestApi service",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "connectionId",
            "in": "path",
            "description": "Id of the connection to get its materials",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Material"
        ],
        "summary": "Add material to the project",
        "operationId": "AddMaterialWeld",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The unique identifier of the opened project in the ConnectionRestApi service",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "connectionId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Definition of a new material to be added to the project",
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_Material_ConMprlElement-IdeaStatiCa_Api"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_Material_ConMprlElement-IdeaStatiCa_Api"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_Material_ConMprlElement-IdeaStatiCa_Api"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_Material_ConMprlElement-IdeaStatiCa_Api"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_Material_ConMprlElement-IdeaStatiCa_Api"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_Material_ConMprlElement-IdeaStatiCa_Api"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_Material_ConMprlElement-IdeaStatiCa_Api"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_Material_ConMprlElement-IdeaStatiCa_Api"
                }
              }
            }
          }
        }
      }
    },
    "/api/1/projects/{projectId}/connections/{connectionId}/cross-sections": {
      "get": {
        "tags": [
          "Material"
        ],
        "summary": "Get cross sections which are used in the connectionId",
        "operationId": "GetCrossSections",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The unique identifier of the opened project in the ConnectionRestApi service",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "connectionId",
            "in": "path",
            "description": "Id of the connection to get its cross-sections",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { }
                }
              }
            }
          }
        }
      }
    },
    "/api/1/projects/{projectId}/connections/{connectionId}/bolt-assemblies": {
      "get": {
        "tags": [
          "Material"
        ],
        "summary": "Get bolt assemblies which are used in the connectionId",
        "operationId": "GetBoltAssemblies",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The unique identifier of the opened project in the ConnectionRestApi service",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "connectionId",
            "in": "path",
            "description": "Id of the connection to get its bolt assemblies",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { }
                }
              }
            }
          }
        }
      }
    },
    "/api/1/projects/{projectId}/connections/{connectionId}/materials/cross-sections": {
      "post": {
        "tags": [
          "Material"
        ],
        "summary": "Add cross section to the project",
        "operationId": "AddCrossSection",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The unique identifier of the opened project in the ConnectionRestApi service",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "connectionId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Definition of a new cross-section to be added to the project",
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_Material_ConMprlCrossSection-IdeaStatiCa_Api"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_Material_ConMprlCrossSection-IdeaStatiCa_Api"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_Material_ConMprlCrossSection-IdeaStatiCa_Api"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_Material_ConMprlCrossSection-IdeaStatiCa_Api"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_Material_ConMprlCrossSection-IdeaStatiCa_Api"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_Material_ConMprlCrossSection-IdeaStatiCa_Api"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_Material_ConMprlCrossSection-IdeaStatiCa_Api"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_Material_ConMprlCrossSection-IdeaStatiCa_Api"
                }
              }
            }
          }
        }
      }
    },
    "/api/1/projects/{projectId}/connections/{connectionId}/materials/bolt-assemblies": {
      "post": {
        "tags": [
          "Material"
        ],
        "summary": "Add bolt assembly to the project",
        "operationId": "AddBoltAssembly",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The unique identifier of the opened project in the ConnectionRestApi service",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "connectionId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Definition of a new bolt assemby to be added to the project",
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_Material_ConMprlElement-IdeaStatiCa_Api"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_Material_ConMprlElement-IdeaStatiCa_Api"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_Material_ConMprlElement-IdeaStatiCa_Api"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_Material_ConMprlElement-IdeaStatiCa_Api"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_Material_ConMprlElement-IdeaStatiCa_Api"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_Material_ConMprlElement-IdeaStatiCa_Api"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_Material_ConMprlElement-IdeaStatiCa_Api"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_Material_ConMprlElement-IdeaStatiCa_Api"
                }
              }
            }
          }
        }
      }
    },
    "/api/1/projects/{projectId}/connections/{connectionId}/members": {
      "get": {
        "tags": [
          "Member"
        ],
        "summary": "Get information about all members in the connection",
        "operationId": "GetAllMemberData",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The unique identifier of the opened project in the ConnectionRestApi service",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "connectionId",
            "in": "path",
            "description": "Id of the connection to get its members",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_ConMember-IdeaStatiCa_Api"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/1/projects/{projectId}/connections/{connectionId}/members/{memberId}": {
      "get": {
        "tags": [
          "Member"
        ],
        "summary": "Get information about the requires member in the connection",
        "operationId": "GetMemberData",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The unique identifier of the opened project in the ConnectionRestApi service",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "connectionId",
            "in": "path",
            "description": "Id of the connection to get its member",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "memberId",
            "in": "path",
            "description": "Id of the requested member in the connection",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_ConMember-IdeaStatiCa_Api"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Member"
        ],
        "summary": "Update the member in the connection by newMemberData",
        "operationId": "UpdateMember",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The unique identifier of the opened project in the ConnectionRestApi service",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "connectionId",
            "in": "path",
            "description": "Id of the connection to to update is membar memberId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "memberId",
            "in": "path",
            "description": "Id of the member to be ubdated in the connection",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "New mwmbwr data",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_ConMember-IdeaStatiCa_Api"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_ConMember-IdeaStatiCa_Api"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_ConMember-IdeaStatiCa_Api"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_ConMember-IdeaStatiCa_Api"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_ConMember-IdeaStatiCa_Api"
                }
              }
            }
          }
        }
      }
    },
    "/api/1/projects/{projectId}/connections/{connectionId}/parameters": {
      "get": {
        "tags": [
          "Parameter"
        ],
        "summary": "Get all parameters which are defined for projectId and connectionId",
        "operationId": "GetParameters",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The unique identifier of the opened project in the ConnectionRestApi service",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "connectionId",
            "in": "path",
            "description": "Id of the connection to get its parameters",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "includeHidden",
            "in": "query",
            "description": "Iclude also hdden parameters",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_IdeaParameter-IdeaStatiCa_Api"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Parameter"
        ],
        "summary": "Update parameters for the connection connectionId in the project projectId by values passed in parameters",
        "operationId": "UpdateParameters",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The unique identifier of the opened project in the ConnectionRestApi service",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "connectionId",
            "in": "path",
            "description": "Id of the connection to apply template",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "New values of parameters",
          "content": {
            "application/xml": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_IdeaParameterUpdate-IdeaStatiCa_Api"
                }
              }
            },
            "text/xml": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_IdeaParameterUpdate-IdeaStatiCa_Api"
                }
              }
            },
            "application/*+xml": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_IdeaParameterUpdate-IdeaStatiCa_Api"
                }
              }
            },
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_IdeaParameterUpdate-IdeaStatiCa_Api"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_IdeaParameterUpdate-IdeaStatiCa_Api"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_IdeaParameterUpdate-IdeaStatiCa_Api"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_IdeaParameterUpdate-IdeaStatiCa_Api"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IdeaRS_Common_Parameters_ParameterData-CI_BasicTypes"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/1/projects/{projectId}/connections/{connectionId}/evaluate-expression": {
      "post": {
        "tags": [
          "Parameter"
        ],
        "summary": "Evaluate the expression and return the result",
        "operationId": "EvaluateExpression",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The unique identifier of the opened project in the ConnectionRestApi service",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "connectionId",
            "in": "path",
            "description": "Id of the connection to use for evaluation expression",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Expreession to evaluate",
          "content": {
            "application/xml": {
              "schema": {
                "type": "string"
              }
            },
            "text/xml": {
              "schema": {
                "type": "string"
              }
            },
            "application/*+xml": {
              "schema": {
                "type": "string"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "type": "string"
              }
            },
            "application/json": {
              "schema": {
                "type": "string"
              }
            },
            "text/json": {
              "schema": {
                "type": "string"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/1/connect-client": {
      "get": {
        "tags": [
          "Project"
        ],
        "summary": "Connect a client to the ConnectionRestApi service. Methond returns a unique identifier of the client.",
        "operationId": "ConnectClient",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/1/projects/open": {
      "post": {
        "tags": [
          "Project"
        ],
        "summary": "Open ideacon project which is passed in the body of the request\r\nTODO - should be the parameter of the method",
        "operationId": "OpenProject",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_ConProject-IdeaStatiCa_Api"
                }
              }
            }
          }
        }
      }
    },
    "/api/1/projects/{projectId}/close": {
      "get": {
        "tags": [
          "Project"
        ],
        "summary": "Close the project. Needed for releasing resources in the service.",
        "operationId": "CloseProject",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The unique identifier of the project to be closed",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/1/projects": {
      "get": {
        "tags": [
          "Project"
        ],
        "summary": "Get the list of projects in the service which were opened by the client which was connected by M:IdeaStatiCa.ConnectionRestApi.Controllers.ProjectController.ConnectClient",
        "operationId": "GetActiveProjects",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_ConProject-IdeaStatiCa_Api"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/1/projects/{projectId}/download": {
      "get": {
        "tags": [
          "Project"
        ],
        "summary": "Download the actual ideacon project from the service. It includes alle changes which were made by previous API calls.",
        "operationId": "DownloadProject",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The unique identifier of the opened project in the ConnectionRestApi service",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/System_IO_MemoryStream-System_Private_CoreLib"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/System_IO_MemoryStream-System_Private_CoreLib"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/System_IO_MemoryStream-System_Private_CoreLib"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/System_IO_MemoryStream-System_Private_CoreLib"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/System_IO_MemoryStream-System_Private_CoreLib"
                }
              }
            }
          }
        }
      }
    },
    "/api/1/projects/{projectId}/project-data": {
      "get": {
        "tags": [
          "Project"
        ],
        "summary": "Get data of the project.",
        "operationId": "GetProjectData",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The unique identifier of the requested project",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_ConProjectData-IdeaStatiCa_Api"
                }
              }
            }
          }
        }
      }
    },
    "/api/1/projects/import-iom-file": {
      "post": {
        "tags": [
          "Project"
        ],
        "summary": "Creates an IDEA Connection project. IOM is passed in the body of the request.",
        "operationId": "ImportIOM",
        "parameters": [
          {
            "name": "ConnectionsToCreate",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_ConProject-IdeaStatiCa_Api"
                }
              }
            }
          }
        }
      }
    },
    "/api/1/projects/import-iom": {
      "post": {
        "tags": [
          "Project"
        ],
        "summary": "Creates an IDEA Connection project from model (model and results)",
        "operationId": "ImportIOMContainer",
        "parameters": [
          {
            "name": "ConnectionsToCreate",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/OpenModelContainer-IdeaRS_OpenModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/OpenModelContainer-IdeaRS_OpenModel"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/OpenModelContainer-IdeaRS_OpenModel"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/OpenModelContainer-IdeaRS_OpenModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OpenModelContainer-IdeaRS_OpenModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OpenModelContainer-IdeaRS_OpenModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OpenModelContainer-IdeaRS_OpenModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_ConProject-IdeaStatiCa_Api"
                }
              }
            }
          }
        }
      }
    },
    "/api/1/projects/{projectId}/update-iom-file": {
      "post": {
        "tags": [
          "Project"
        ],
        "summary": "Update an IDEA Connection project based on OpenModelContainer (model and results). IOM is passed in the body of the request.",
        "operationId": "UpdateFromIOM",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The unique identifier of the opened project in the ConnectionRestApi service to be updated",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/1/projects/{projectId}/update-iom": {
      "post": {
        "tags": [
          "Project"
        ],
        "summary": "Update an IDEA Connection project by model (model and results)",
        "operationId": "UpdateFromIOMContainer",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The unique identifier of the opened project in the ConnectionRestApi service to be updated",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/OpenModelContainer-IdeaRS_OpenModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/OpenModelContainer-IdeaRS_OpenModel"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/OpenModelContainer-IdeaRS_OpenModel"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/OpenModelContainer-IdeaRS_OpenModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OpenModelContainer-IdeaRS_OpenModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OpenModelContainer-IdeaRS_OpenModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OpenModelContainer-IdeaRS_OpenModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/1/projects/{projectId}/connection-setup": {
      "get": {
        "tags": [
          "Project"
        ],
        "summary": "Get setup from project",
        "operationId": "GetSetup",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The unique identifier of the opened project in the ConnectionRestApi service to get setup",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectionSetup-IdeaRS_OpenModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Project"
        ],
        "summary": "Update setup of the project",
        "operationId": "UpdateSetup",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The unique identifier of the opened project in the ConnectionRestApi service to update project setup",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ConnectionSetup-IdeaRS_OpenModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/ConnectionSetup-IdeaRS_OpenModel"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/ConnectionSetup-IdeaRS_OpenModel"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ConnectionSetup-IdeaRS_OpenModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConnectionSetup-IdeaRS_OpenModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ConnectionSetup-IdeaRS_OpenModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ConnectionSetup-IdeaRS_OpenModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectionSetup-IdeaRS_OpenModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/1/projects/{projectId}/connections/{connectionId}/apply-mapping": {
      "post": {
        "tags": [
          "Template"
        ],
        "summary": "Get the default mappings for the application of the connection template passed in templateToApply\r\non connectionId in the project projectId",
        "description": "The result IdeaStatiCa.Api.Connection.Model.TemplateConversionsDefault mapping to apply the passed template.\r\nIt can be modified by a user and used for the application of a template M:IdeaStatiCa.ConnectionRestApi.Controllers.TemplateController.ApplyConnectionTemplateAsync(System.Guid,System.Int32,IdeaStatiCa.Api.Connection.Model.ConTemplateApplyParam) method.",
        "operationId": "GetDefaultTemplateMapping",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The unique identifier of the opened project in the ConnectionRestApi service",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "connectionId",
            "in": "path",
            "description": "Id of the connection to get default mapping",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Data of the template to get default mapping",
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_ConTemplateMappingGetParam-IdeaStatiCa_Api"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_ConTemplateMappingGetParam-IdeaStatiCa_Api"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_ConTemplateMappingGetParam-IdeaStatiCa_Api"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_ConTemplateMappingGetParam-IdeaStatiCa_Api"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_ConTemplateMappingGetParam-IdeaStatiCa_Api"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_ConTemplateMappingGetParam-IdeaStatiCa_Api"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_ConTemplateMappingGetParam-IdeaStatiCa_Api"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_TemplateConversions-IdeaStatiCa_Api"
                }
              }
            }
          }
        }
      }
    },
    "/api/1/projects/{projectId}/connections/{connectionId}/apply-template": {
      "post": {
        "tags": [
          "Template"
        ],
        "summary": "Apply the connection template applyTemplateParam on the connection connectionId in the project projectId",
        "operationId": "ApplyTemplate",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The unique identifier of the opened project in the ConnectionRestApi service",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "connectionId",
            "in": "path",
            "description": "Id of the connection where to apply the template",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Template to apply",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_ConTemplateApplyParam-IdeaStatiCa_Api"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_ConTemplateApplyParam-IdeaStatiCa_Api"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_ConTemplateApplyParam-IdeaStatiCa_Api"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_ConTemplateApplyParam-IdeaStatiCa_Api"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_ConTemplateApplyResult-IdeaStatiCa_Api"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Concrete_CheckSection-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Concrete_ConcreteSetup-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Concrete_ProjectDataConcrete-IdeaRS_OpenModel": {
        "type": "object",
        "additionalProperties": false
      },
      "ConeBreakoutCheckType-IdeaRS_OpenModel": {
        "enum": [
          "both",
          "tension",
          "shear",
          "none"
        ],
        "type": "string"
      },
      "ConnectionSetup-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "steelSetup": {
            "$ref": "#/components/schemas/SteelSetup-IdeaRS_OpenModel"
          },
          "concreteSetup": {
            "$ref": "#/components/schemas/Concrete_ConcreteSetup-IdeaRS_OpenModel"
          },
          "stopAtLimitStrain": {
            "type": "boolean"
          },
          "weldEvaluationData": {
            "$ref": "#/components/schemas/WeldEvaluation-IdeaRS_OpenModel"
          },
          "checkDetailing": {
            "type": "boolean"
          },
          "applyConeBreakoutCheck": {
            "$ref": "#/components/schemas/ConeBreakoutCheckType-IdeaRS_OpenModel"
          },
          "pretensionForceFpc": {
            "type": "number",
            "format": "double"
          },
          "gammaInst": {
            "type": "number",
            "format": "double"
          },
          "gammaC": {
            "type": "number",
            "format": "double"
          },
          "gammaM3": {
            "type": "number",
            "format": "double"
          },
          "anchorLengthForStiffness": {
            "type": "integer",
            "format": "int32"
          },
          "jointBetaFactor": {
            "type": "number",
            "format": "double"
          },
          "effectiveAreaStressCoeff": {
            "type": "number",
            "format": "double"
          },
          "effectiveAreaStressCoeffAISC": {
            "type": "number",
            "format": "double"
          },
          "frictionCoefficient": {
            "type": "number",
            "format": "double"
          },
          "limitPlasticStrain": {
            "type": "number",
            "format": "double"
          },
          "limitDeformation": {
            "type": "number",
            "format": "double"
          },
          "limitDeformationCheck": {
            "type": "boolean"
          },
          "analysisGNL": {
            "type": "boolean"
          },
          "analysisAllGNL": {
            "type": "boolean"
          },
          "warnPlasticStrain": {
            "type": "number",
            "format": "double"
          },
          "warnCheckLevel": {
            "type": "number",
            "format": "double"
          },
          "optimalCheckLevel": {
            "type": "number",
            "format": "double"
          },
          "distanceBetweenBolts": {
            "type": "number",
            "format": "double"
          },
          "distanceDiameterBetweenBP": {
            "type": "number",
            "format": "double"
          },
          "distanceBetweenBoltsEdge": {
            "type": "number",
            "format": "double"
          },
          "bearingAngle": {
            "type": "number",
            "format": "double"
          },
          "decreasingFtrd": {
            "type": "number",
            "format": "double"
          },
          "bracedSystem": {
            "type": "boolean"
          },
          "bearingCheck": {
            "type": "boolean"
          },
          "applyBetapInfluence": {
            "type": "boolean"
          },
          "memberLengthRatio": {
            "type": "number",
            "format": "double"
          },
          "divisionOfSurfaceOfCHS": {
            "type": "integer",
            "format": "int32"
          },
          "divisionOfArcsOfRHS": {
            "type": "integer",
            "format": "int32"
          },
          "numElement": {
            "type": "integer",
            "format": "int32"
          },
          "numberIterations": {
            "type": "integer",
            "format": "int32"
          },
          "mdiv": {
            "type": "integer",
            "format": "int32"
          },
          "minSize": {
            "type": "number",
            "format": "double"
          },
          "maxSize": {
            "type": "number",
            "format": "double"
          },
          "numElementRhs": {
            "type": "integer",
            "format": "int32"
          },
          "numElementPlate": {
            "type": "integer",
            "format": "int32"
          },
          "rigidBP": {
            "type": "boolean"
          },
          "alphaCC": {
            "type": "number",
            "format": "double"
          },
          "crackedConcrete": {
            "type": "boolean"
          },
          "developedFillers": {
            "type": "boolean"
          },
          "deformationBoltHole": {
            "type": "boolean"
          },
          "extensionLengthRationOpenSections": {
            "type": "number",
            "format": "double"
          },
          "extensionLengthRationCloseSections": {
            "type": "number",
            "format": "double"
          },
          "factorPreloadBolt": {
            "type": "number",
            "format": "double"
          },
          "baseMetalCapacity": {
            "type": "boolean"
          },
          "applyBearingCheck": {
            "type": "boolean"
          },
          "frictionCoefficientPbolt": {
            "type": "number",
            "format": "double"
          },
          "crtCompCheckIS": {
            "$ref": "#/components/schemas/CrtCompCheckIS-IdeaRS_OpenModel"
          },
          "boltMaxGripLengthCoeff": {
            "type": "number",
            "format": "double"
          },
          "fatigueSectionOffset": {
            "type": "number",
            "format": "double"
          },
          "condensedElementLengthFactor": {
            "type": "number",
            "format": "double"
          },
          "gammaMu": {
            "type": "number",
            "format": "double"
          },
          "hssLimitPlasticStrain": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Connection_AnchorGrid-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "concreteBlock": {
            "$ref": "#/components/schemas/Connection_ConcreteBlock-IdeaRS_OpenModel"
          },
          "anchorType": {
            "$ref": "#/components/schemas/Parameters_AnchorType-IdeaRS_OpenModel"
          },
          "washerSize": {
            "type": "number",
            "format": "double"
          },
          "boltAssemblyRef": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "isAnchor": {
            "type": "boolean"
          },
          "anchorLen": {
            "type": "number",
            "format": "double"
          },
          "holeDiameter": {
            "type": "number",
            "format": "double"
          },
          "diameter": {
            "type": "number",
            "format": "double"
          },
          "headDiameter": {
            "type": "number",
            "format": "double"
          },
          "diagonalHeadDiameter": {
            "type": "number",
            "format": "double"
          },
          "headHeight": {
            "type": "number",
            "format": "double"
          },
          "boreHole": {
            "type": "number",
            "format": "double"
          },
          "tensileStressArea": {
            "type": "number",
            "format": "double"
          },
          "nutThickness": {
            "type": "number",
            "format": "double"
          },
          "boltAssemblyName": {
            "type": "string",
            "nullable": true
          },
          "standard": {
            "type": "string",
            "nullable": true
          },
          "material": {
            "type": "string",
            "nullable": true
          },
          "origin": {
            "$ref": "#/components/schemas/Geometry3D_Point3D-IdeaRS_OpenModel"
          },
          "axisX": {
            "$ref": "#/components/schemas/Geometry3D_Vector3D-IdeaRS_OpenModel"
          },
          "axisY": {
            "$ref": "#/components/schemas/Geometry3D_Vector3D-IdeaRS_OpenModel"
          },
          "axisZ": {
            "$ref": "#/components/schemas/Geometry3D_Vector3D-IdeaRS_OpenModel"
          },
          "positions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Geometry3D_Point3D-IdeaRS_OpenModel"
            },
            "nullable": true
          },
          "connectedPlates": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "connectedPartIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "shearInThread": {
            "type": "boolean"
          },
          "boltInteraction": {
            "$ref": "#/components/schemas/Parameters_BoltShearType-IdeaRS_OpenModel"
          }
        },
        "additionalProperties": false
      },
      "Connection_BeamData-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "plates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Connection_PlateData-IdeaRS_OpenModel"
            },
            "nullable": true
          },
          "crossSectionType": {
            "type": "string",
            "nullable": true
          },
          "mprlName": {
            "type": "string",
            "nullable": true
          },
          "originalModelId": {
            "type": "string",
            "nullable": true
          },
          "cuts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Connection_CutData-IdeaRS_OpenModel"
            },
            "nullable": true
          },
          "isAdded": {
            "type": "boolean"
          },
          "addedMemberLength": {
            "type": "number",
            "format": "double"
          },
          "isNegativeObject": {
            "type": "boolean"
          },
          "addedMember": {
            "$ref": "#/components/schemas/ReferenceElement-IdeaRS_OpenModel"
          },
          "mirrorY": {
            "type": "boolean"
          },
          "refLineInCenterOfGravity": {
            "type": "boolean"
          },
          "isBearingMember": {
            "type": "boolean"
          },
          "autoAddCutByWorkplane": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Connection_BendData-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "plate1Id": {
            "type": "integer",
            "format": "int32"
          },
          "plate2Id": {
            "type": "integer",
            "format": "int32"
          },
          "radius": {
            "type": "number",
            "format": "double"
          },
          "point1OfSideBoundary1": {
            "$ref": "#/components/schemas/Geometry3D_Point3D-IdeaRS_OpenModel"
          },
          "point2OfSideBoundary1": {
            "$ref": "#/components/schemas/Geometry3D_Point3D-IdeaRS_OpenModel"
          },
          "endFaceNormal1": {
            "$ref": "#/components/schemas/Geometry3D_Vector3D-IdeaRS_OpenModel"
          },
          "point1OfSideBoundary2": {
            "$ref": "#/components/schemas/Geometry3D_Point3D-IdeaRS_OpenModel"
          },
          "point2OfSideBoundary2": {
            "$ref": "#/components/schemas/Geometry3D_Point3D-IdeaRS_OpenModel"
          }
        },
        "additionalProperties": false
      },
      "Connection_BoltGrid-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "boltAssemblyRef": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "isAnchor": {
            "type": "boolean"
          },
          "anchorLen": {
            "type": "number",
            "format": "double"
          },
          "holeDiameter": {
            "type": "number",
            "format": "double"
          },
          "diameter": {
            "type": "number",
            "format": "double"
          },
          "headDiameter": {
            "type": "number",
            "format": "double"
          },
          "diagonalHeadDiameter": {
            "type": "number",
            "format": "double"
          },
          "headHeight": {
            "type": "number",
            "format": "double"
          },
          "boreHole": {
            "type": "number",
            "format": "double"
          },
          "tensileStressArea": {
            "type": "number",
            "format": "double"
          },
          "nutThickness": {
            "type": "number",
            "format": "double"
          },
          "boltAssemblyName": {
            "type": "string",
            "nullable": true
          },
          "standard": {
            "type": "string",
            "nullable": true
          },
          "material": {
            "type": "string",
            "nullable": true
          },
          "origin": {
            "$ref": "#/components/schemas/Geometry3D_Point3D-IdeaRS_OpenModel"
          },
          "axisX": {
            "$ref": "#/components/schemas/Geometry3D_Vector3D-IdeaRS_OpenModel"
          },
          "axisY": {
            "$ref": "#/components/schemas/Geometry3D_Vector3D-IdeaRS_OpenModel"
          },
          "axisZ": {
            "$ref": "#/components/schemas/Geometry3D_Vector3D-IdeaRS_OpenModel"
          },
          "positions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Geometry3D_Point3D-IdeaRS_OpenModel"
            },
            "nullable": true
          },
          "connectedPlates": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "connectedPartIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "shearInThread": {
            "type": "boolean"
          },
          "boltInteraction": {
            "$ref": "#/components/schemas/Parameters_BoltShearType-IdeaRS_OpenModel"
          }
        },
        "additionalProperties": false
      },
      "Connection_BucklingRes-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "loadCaseId": {
            "type": "integer",
            "format": "int32"
          },
          "shape": {
            "type": "integer",
            "format": "int32"
          },
          "factor": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Connection_CheckResAnchor-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "unityCheck": {
            "type": "number",
            "format": "double"
          },
          "checkStatus": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Connection_CheckResBolt-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "unityCheck": {
            "type": "number",
            "format": "double"
          },
          "checkStatus": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Connection_CheckResConcreteBlock-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "unityCheck": {
            "type": "number",
            "format": "double"
          },
          "checkStatus": {
            "type": "boolean"
          },
          "loadCaseId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Connection_CheckResPlate-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "checkStatus": {
            "type": "boolean"
          },
          "loadCaseId": {
            "type": "integer",
            "format": "int32"
          },
          "maxStrain": {
            "type": "number",
            "format": "double"
          },
          "maxStress": {
            "type": "number",
            "format": "double"
          },
          "items": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Connection_CheckResSummary-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "checkValue": {
            "type": "number",
            "format": "double"
          },
          "checkStatus": {
            "type": "boolean"
          },
          "loadCaseId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "unityCheckMessage": {
            "type": "string",
            "nullable": true
          },
          "skipped": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Connection_CheckResWeld-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "unityCheck": {
            "type": "number",
            "format": "double"
          },
          "checkStatus": {
            "type": "boolean"
          },
          "loadCaseId": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Connection_ConcreteBlock-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "lenght": {
            "type": "number",
            "format": "double"
          },
          "width": {
            "type": "number",
            "format": "double"
          },
          "height": {
            "type": "number",
            "format": "double"
          },
          "material": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Connection_ConcreteBlockData-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "depth": {
            "type": "number",
            "format": "double"
          },
          "material": {
            "type": "string",
            "nullable": true
          },
          "center": {
            "$ref": "#/components/schemas/Geometry3D_Point3D-IdeaRS_OpenModel"
          },
          "outlinePoints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Geometry2D_Point2D-IdeaRS_OpenModel"
            },
            "nullable": true
          },
          "origin": {
            "$ref": "#/components/schemas/Geometry3D_Point3D-IdeaRS_OpenModel"
          },
          "axisX": {
            "$ref": "#/components/schemas/Geometry3D_Vector3D-IdeaRS_OpenModel"
          },
          "axisY": {
            "$ref": "#/components/schemas/Geometry3D_Vector3D-IdeaRS_OpenModel"
          },
          "axisZ": {
            "$ref": "#/components/schemas/Geometry3D_Vector3D-IdeaRS_OpenModel"
          },
          "region": {
            "type": "string",
            "nullable": true
          },
          "originalModelId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Connection_ConnectionCheckRes-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "checkResSummary": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Connection_CheckResSummary-IdeaRS_OpenModel"
            },
            "nullable": true
          },
          "checkResPlate": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Connection_CheckResPlate-IdeaRS_OpenModel"
            },
            "nullable": true
          },
          "checkResWeld": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Connection_CheckResWeld-IdeaRS_OpenModel"
            },
            "nullable": true
          },
          "checkResBolt": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Connection_CheckResBolt-IdeaRS_OpenModel"
            },
            "nullable": true
          },
          "checkResAnchor": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Connection_CheckResAnchor-IdeaRS_OpenModel"
            },
            "nullable": true
          },
          "checkResConcreteBlock": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Connection_CheckResConcreteBlock-IdeaRS_OpenModel"
            },
            "nullable": true
          },
          "bucklingResults": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Connection_BucklingRes-IdeaRS_OpenModel"
            },
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "connectionID": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "messages": {
            "$ref": "#/components/schemas/Message_OpenMessages-IdeaRS_OpenModel"
          }
        },
        "additionalProperties": false
      },
      "Connection_ConnectionData-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "conenctionPointId": {
            "type": "integer",
            "format": "int32"
          },
          "beams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Connection_BeamData-IdeaRS_OpenModel"
            },
            "nullable": true
          },
          "plates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Connection_PlateData-IdeaRS_OpenModel"
            },
            "nullable": true
          },
          "foldedPlates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Connection_FoldedPlateData-IdeaRS_OpenModel"
            },
            "nullable": true
          },
          "boltGrids": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Connection_BoltGrid-IdeaRS_OpenModel"
            },
            "nullable": true
          },
          "anchorGrids": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Connection_AnchorGrid-IdeaRS_OpenModel"
            },
            "nullable": true
          },
          "welds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Connection_WeldData-IdeaRS_OpenModel"
            },
            "nullable": true
          },
          "concreteBlocks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Connection_ConcreteBlockData-IdeaRS_OpenModel"
            },
            "nullable": true
          },
          "cutBeamByBeams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Connection_CutBeamByBeamData-IdeaRS_OpenModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Connection_ConnectionPoint-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Connection_CutBeamByBeamData-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "modifiedObject": {
            "$ref": "#/components/schemas/ReferenceElement-IdeaRS_OpenModel"
          },
          "cuttingObject": {
            "$ref": "#/components/schemas/ReferenceElement-IdeaRS_OpenModel"
          },
          "isWeld": {
            "type": "boolean"
          },
          "weldThickness": {
            "type": "number",
            "format": "double"
          },
          "weldType": {
            "$ref": "#/components/schemas/Connection_WeldType-IdeaRS_OpenModel"
          },
          "offset": {
            "type": "number",
            "format": "double"
          },
          "method": {
            "$ref": "#/components/schemas/Connection_CutMethod-IdeaRS_OpenModel"
          },
          "orientation": {
            "$ref": "#/components/schemas/Connection_CutOrientation-IdeaRS_OpenModel"
          },
          "planeOnCuttingObject": {
            "$ref": "#/components/schemas/Connection_DistanceComparison-IdeaRS_OpenModel"
          },
          "cutPart": {
            "$ref": "#/components/schemas/Connection_CutPart-IdeaRS_OpenModel"
          }
        },
        "additionalProperties": false
      },
      "Connection_CutData-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "planePoint": {
            "$ref": "#/components/schemas/Geometry3D_Point3D-IdeaRS_OpenModel"
          },
          "normalVector": {
            "$ref": "#/components/schemas/Geometry3D_Vector3D-IdeaRS_OpenModel"
          },
          "direction": {
            "$ref": "#/components/schemas/Connection_CutOrientation-IdeaRS_OpenModel"
          },
          "offset": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Connection_CutMethod-IdeaRS_OpenModel": {
        "enum": [
          "boundingBox",
          "surface",
          "mitre",
          "surfaceAll"
        ],
        "type": "string"
      },
      "Connection_CutOrientation-IdeaRS_OpenModel": {
        "enum": [
          "default",
          "parallel",
          "perpendicular"
        ],
        "type": "string"
      },
      "Connection_CutPart-IdeaRS_OpenModel": {
        "enum": [
          "begin",
          "end"
        ],
        "type": "string"
      },
      "Connection_DistanceComparison-IdeaRS_OpenModel": {
        "enum": [
          "closer",
          "farther",
          "same"
        ],
        "type": "string"
      },
      "Connection_FoldedPlateData-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "plates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Connection_PlateData-IdeaRS_OpenModel"
            },
            "nullable": true
          },
          "bends": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Connection_BendData-IdeaRS_OpenModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Connection_PlateData-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "thickness": {
            "type": "number",
            "format": "double"
          },
          "material": {
            "type": "string",
            "nullable": true
          },
          "outlinePoints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Geometry2D_Point2D-IdeaRS_OpenModel"
            },
            "nullable": true
          },
          "origin": {
            "$ref": "#/components/schemas/Geometry3D_Point3D-IdeaRS_OpenModel"
          },
          "axisX": {
            "$ref": "#/components/schemas/Geometry3D_Vector3D-IdeaRS_OpenModel"
          },
          "axisY": {
            "$ref": "#/components/schemas/Geometry3D_Vector3D-IdeaRS_OpenModel"
          },
          "axisZ": {
            "$ref": "#/components/schemas/Geometry3D_Vector3D-IdeaRS_OpenModel"
          },
          "region": {
            "type": "string",
            "nullable": true
          },
          "geometry": {
            "$ref": "#/components/schemas/Geometry2D_Region2D-IdeaRS_OpenModel"
          },
          "originalModelId": {
            "type": "string",
            "nullable": true
          },
          "isNegativeObject": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Connection_WeldData-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "thickness": {
            "type": "number",
            "format": "double"
          },
          "material": {
            "type": "string",
            "nullable": true
          },
          "weldMaterial": {
            "$ref": "#/components/schemas/ReferenceElement-IdeaRS_OpenModel"
          },
          "weldType": {
            "$ref": "#/components/schemas/Connection_WeldType-IdeaRS_OpenModel"
          },
          "connectedPartIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "start": {
            "$ref": "#/components/schemas/Geometry3D_Point3D-IdeaRS_OpenModel"
          },
          "end": {
            "$ref": "#/components/schemas/Geometry3D_Point3D-IdeaRS_OpenModel"
          }
        },
        "additionalProperties": false
      },
      "Connection_WeldType-IdeaRS_OpenModel": {
        "enum": [
          "notSpecified",
          "fillet",
          "doubleFillet",
          "bevel",
          "pjp",
          "pjpRear",
          "lengthAtHaunch",
          "filletRear",
          "contact",
          "intermittent"
        ],
        "type": "string"
      },
      "CrossSection_CrossSection-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "crossSectionRotation": {
            "type": "number",
            "format": "double"
          },
          "isInPrincipal": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CrossSection_FatigueTypeOfPrestressingSteel-IdeaRS_OpenModel": {
        "enum": [
          "postTensioningSingleStrandsInPlasticDucts",
          "postTensioningStraightTendonsOrCurvedTendonsInPlasticDucts",
          "postTensioningCurvedTendonsInSteelDucts",
          "postTensioningSplicingDevices",
          "preTensioning",
          "externalTendon"
        ],
        "type": "string"
      },
      "CrossSection_MaterialDuct-IdeaRS_OpenModel": {
        "enum": [
          "metal",
          "plastic"
        ],
        "type": "string"
      },
      "CrossSection_ReinforcedBar-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "point": {
            "$ref": "#/components/schemas/Geometry2D_Point2D-IdeaRS_OpenModel"
          },
          "diameter": {
            "type": "number",
            "format": "double"
          },
          "material": {
            "$ref": "#/components/schemas/ReferenceElement-IdeaRS_OpenModel"
          }
        },
        "additionalProperties": false
      },
      "CrossSection_ReinforcedCrossSection-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "crossSection": {
            "$ref": "#/components/schemas/ReferenceElement-IdeaRS_OpenModel"
          },
          "bars": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CrossSection_ReinforcedBar-IdeaRS_OpenModel"
            },
            "nullable": true
          },
          "stirrups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CrossSection_Stirrup-IdeaRS_OpenModel"
            },
            "nullable": true
          },
          "tendonBars": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CrossSection_TendonBar-IdeaRS_OpenModel"
            },
            "nullable": true
          },
          "tendonDucts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CrossSection_TendonDuct-IdeaRS_OpenModel"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CrossSection_Stirrup-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "geometry": {
            "$ref": "#/components/schemas/Geometry2D_PolyLine2D-IdeaRS_OpenModel"
          },
          "diameter": {
            "type": "number",
            "format": "double"
          },
          "material": {
            "$ref": "#/components/schemas/ReferenceElement-IdeaRS_OpenModel"
          },
          "anchorageLenght": {
            "type": "number",
            "format": "double"
          },
          "diameterOfMandrel": {
            "type": "number",
            "format": "double"
          },
          "isClosed": {
            "type": "boolean"
          },
          "distance": {
            "type": "number",
            "format": "double"
          },
          "shearCheck": {
            "type": "boolean"
          },
          "torsionCheck": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CrossSection_TendonBar-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "tendonType": {
            "$ref": "#/components/schemas/CrossSection_TendonBarType-IdeaRS_OpenModel"
          },
          "point": {
            "$ref": "#/components/schemas/Geometry2D_Point2D-IdeaRS_OpenModel"
          },
          "material": {
            "$ref": "#/components/schemas/ReferenceElement-IdeaRS_OpenModel"
          },
          "prestressingOrder": {
            "type": "integer",
            "format": "int32"
          },
          "numStrandsInTendon": {
            "type": "integer",
            "format": "int32"
          },
          "prestressReinforcementType": {
            "$ref": "#/components/schemas/CrossSection_FatigueTypeOfPrestressingSteel-IdeaRS_OpenModel"
          },
          "phase": {
            "type": "integer",
            "format": "int32"
          },
          "tendonDuct": {
            "$ref": "#/components/schemas/CrossSection_TendonDuct-IdeaRS_OpenModel"
          }
        },
        "additionalProperties": false
      },
      "CrossSection_TendonBarType-IdeaRS_OpenModel": {
        "enum": [
          "posttensioned",
          "pretensioned"
        ],
        "type": "string"
      },
      "CrossSection_TendonDuct-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "point": {
            "$ref": "#/components/schemas/Geometry2D_Point2D-IdeaRS_OpenModel"
          },
          "materialDuct": {
            "$ref": "#/components/schemas/CrossSection_MaterialDuct-IdeaRS_OpenModel"
          },
          "isDebondingTube": {
            "type": "boolean"
          },
          "diameter": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "CrtCompCheckIS-IdeaRS_OpenModel": {
        "enum": [
          "iS800_Cl_7_4",
          "iS456_Cl_34_4"
        ],
        "type": "string"
      },
      "Data_ePurpose-IdeaRS_Connections": {
        "enum": [
          "common",
          "maxCapacityCalculation",
          "maxCapacityCalculationNegative",
          "horizontalTyingCalculation"
        ],
        "type": "string"
      },
      "Detail_Anchor3D-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Detail_BasePlate3D-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Detail_Beam-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Detail_DappedEnd-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Detail_ISDModel-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Detail_Loading_DetailCombination-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Detail_Loading_DetailLoadCase-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Detail_Opening-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Detail_PatchDevice-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Detail_Reinforcement-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Detail_SolidBlock3D-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Detail_SurfaceSupport3D-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Detail_Wall-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Geometry2D_Point2D-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "x": {
            "type": "number",
            "format": "double"
          },
          "y": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Geometry2D_PolyLine2D-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "startPoint": {
            "$ref": "#/components/schemas/Geometry2D_Point2D-IdeaRS_OpenModel"
          },
          "segments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Geometry2D_Segment2D-IdeaRS_OpenModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Geometry2D_Polygon2D-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "points": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Geometry2D_Point2D-IdeaRS_OpenModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Geometry2D_Region2D-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "outline": {
            "$ref": "#/components/schemas/Geometry2D_PolyLine2D-IdeaRS_OpenModel"
          },
          "openings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Geometry2D_PolyLine2D-IdeaRS_OpenModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Geometry2D_Segment2D-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "endPoint": {
            "$ref": "#/components/schemas/Geometry2D_Point2D-IdeaRS_OpenModel"
          }
        },
        "additionalProperties": false
      },
      "Geometry2D_TemperatureCurve2D-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "points": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Geometry2D_Point2D-IdeaRS_OpenModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Geometry3D_ArcSegment3D-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Geometry3D_LineSegment3D-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Geometry3D_Point3D-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "x": {
            "type": "number",
            "format": "double"
          },
          "y": {
            "type": "number",
            "format": "double"
          },
          "z": {
            "type": "number",
            "format": "double"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Geometry3D_PointOnLine3D-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Geometry3D_PolyLine3D-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Geometry3D_Region3D-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Geometry3D_Vector3D-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "x": {
            "type": "number",
            "format": "double"
          },
          "y": {
            "type": "number",
            "format": "double"
          },
          "z": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "IdeaRS_Common_Parameters_ParameterData-CI_BasicTypes": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "identifier": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "parameterType": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "nullable": true
          },
          "defaultValue": {
            "nullable": true
          },
          "evaluatedValue": {
            "nullable": true
          },
          "evaluatedDefaultValue": {
            "nullable": true
          },
          "validationValue": {
            "type": "string",
            "nullable": true
          },
          "evaluatedValidationValue": {
            "type": "string",
            "nullable": true
          },
          "validationType": {
            "$ref": "#/components/schemas/IdeaRS_Common_Parameters_ValidationType-CI_BasicTypes"
          },
          "userUnitId": {
            "type": "integer",
            "format": "int32"
          },
          "isVisibleForSimpleConnection": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "IdeaRS_Common_Parameters_ValidationType-CI_BasicTypes": {
        "enum": [
          "warning",
          "restricted"
        ],
        "type": "string"
      },
      "IdeaStatiCa_Api_Connection_Model_BaseTemplateConversion-IdeaStatiCa_Api": {
        "type": "object",
        "properties": {
          "originalValue": {
            "type": "string",
            "nullable": true
          },
          "originalTemplateId": {
            "type": "string",
            "nullable": true
          },
          "newValue": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "newTemplateId": {
            "type": "string",
            "nullable": true
          },
          "newElement": {
            "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_SelectedElement-IdeaStatiCa_Api"
          }
        },
        "additionalProperties": false
      },
      "IdeaStatiCa_Api_Connection_Model_ConAnalysisTypeEnum-IdeaStatiCa_Api": {
        "enum": [
          "stress_Strain",
          "stiffness",
          "capacity_Design",
          "fatigues",
          "total_Design",
          "horizontalTying",
          "capacityLoadLevels",
          "fireRestance",
          "buckling"
        ],
        "type": "string"
      },
      "IdeaStatiCa_Api_Connection_Model_ConCalculationParameter-IdeaStatiCa_Api": {
        "type": "object",
        "properties": {
          "connectionIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "analysisType": {
            "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_ConAnalysisTypeEnum-IdeaStatiCa_Api"
          }
        },
        "additionalProperties": false
      },
      "IdeaStatiCa_Api_Connection_Model_ConConnection-IdeaStatiCa_Api": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "identifier": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "analysisType": {
            "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_ConAnalysisTypeEnum-IdeaStatiCa_Api"
          },
          "loadOptions": {
            "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_ConLoadingOptions-IdeaStatiCa_Api"
          },
          "bearingMemberId": {
            "type": "integer",
            "format": "int32"
          },
          "isCalculated": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "IdeaStatiCa_Api_Connection_Model_ConLoadEffect-IdeaStatiCa_Api": {
        "type": "object",
        "properties": {
          "isPercentage": {
            "type": "boolean"
          },
          "memberLoadings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_ConLoadEffectMemberLoad-IdeaStatiCa_Api"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "active": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "IdeaStatiCa_Api_Connection_Model_ConLoadEffectMemberLoad-IdeaStatiCa_Api": {
        "type": "object",
        "properties": {
          "memberId": {
            "type": "integer",
            "format": "int32"
          },
          "position": {
            "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_ConLoadEffectPositionEnum-IdeaStatiCa_Api"
          },
          "sectionLoad": {
            "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_ConLoadEffectSectionLoad-IdeaStatiCa_Api"
          }
        },
        "additionalProperties": false
      },
      "IdeaStatiCa_Api_Connection_Model_ConLoadEffectPositionEnum-IdeaStatiCa_Api": {
        "enum": [
          "End",
          "Begin"
        ],
        "type": "string"
      },
      "IdeaStatiCa_Api_Connection_Model_ConLoadEffectSectionLoad-IdeaStatiCa_Api": {
        "type": "object",
        "properties": {
          "n": {
            "type": "number",
            "format": "double"
          },
          "vy": {
            "type": "number",
            "format": "double"
          },
          "vz": {
            "type": "number",
            "format": "double"
          },
          "mx": {
            "type": "number",
            "format": "double"
          },
          "my": {
            "type": "number",
            "format": "double"
          },
          "mz": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "IdeaStatiCa_Api_Connection_Model_ConLoadingOptions-IdeaStatiCa_Api": {
        "type": "object",
        "properties": {
          "loadsInEquilibrium": {
            "type": "boolean"
          },
          "loadsInPercentage": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "IdeaStatiCa_Api_Connection_Model_ConMember-IdeaStatiCa_Api": {
        "type": "object",
        "properties": {
          "isContinuous": {
            "type": "boolean"
          },
          "crossSectionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "mirrorY": {
            "type": "boolean",
            "nullable": true
          },
          "mirrorZ": {
            "type": "boolean",
            "nullable": true
          },
          "isBearing": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "active": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "IdeaStatiCa_Api_Connection_Model_ConMissingWeld-IdeaStatiCa_Api": {
        "type": "object",
        "properties": {
          "edgePlate": {
            "type": "string",
            "nullable": true
          },
          "surfacePlate": {
            "type": "string",
            "nullable": true
          },
          "edgeIndex": {
            "type": "integer",
            "format": "int32"
          },
          "surfaceIndex": {
            "type": "integer",
            "format": "int32"
          },
          "weldSize": {
            "type": "number",
            "format": "double"
          },
          "weldTypeCode": {
            "type": "string",
            "nullable": true
          },
          "weldMaterialName": {
            "type": "string",
            "nullable": true
          },
          "isHollow_OrUncoiledSection": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "IdeaStatiCa_Api_Connection_Model_ConOperation-IdeaStatiCa_Api": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "isImported": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "IdeaStatiCa_Api_Connection_Model_ConProductionCost-IdeaStatiCa_Api": {
        "type": "object",
        "properties": {
          "totalEstimatedCost": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "IdeaStatiCa_Api_Connection_Model_ConProject-IdeaStatiCa_Api": {
        "type": "object",
        "properties": {
          "projectId": {
            "type": "string",
            "format": "uuid"
          },
          "projectInfo": {
            "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_ConProjectData-IdeaStatiCa_Api"
          },
          "connections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_ConConnection-IdeaStatiCa_Api"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IdeaStatiCa_Api_Connection_Model_ConProjectData-IdeaStatiCa_Api": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "projectNumber": {
            "type": "string",
            "nullable": true
          },
          "author": {
            "type": "string",
            "nullable": true
          },
          "designCode": {
            "type": "string",
            "nullable": true
          },
          "date": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "IdeaStatiCa_Api_Connection_Model_ConResultSummary-IdeaStatiCa_Api": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "passed": {
            "type": "boolean"
          },
          "resultSummary": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Connection_CheckResSummary-IdeaRS_OpenModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IdeaStatiCa_Api_Connection_Model_ConTemplateApplyParam-IdeaStatiCa_Api": {
        "type": "object",
        "properties": {
          "connectionTemplate": {
            "type": "string",
            "nullable": true
          },
          "mapping": {
            "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_TemplateConversions-IdeaStatiCa_Api"
          }
        },
        "additionalProperties": false
      },
      "IdeaStatiCa_Api_Connection_Model_ConTemplateApplyResult-IdeaStatiCa_Api": {
        "type": "object",
        "additionalProperties": false
      },
      "IdeaStatiCa_Api_Connection_Model_ConTemplateMappingGetParam-IdeaStatiCa_Api": {
        "type": "object",
        "properties": {
          "template": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IdeaStatiCa_Api_Connection_Model_IdeaParameter-IdeaStatiCa_Api": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          },
          "expression": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "nullable": true
          },
          "unit": {
            "type": "string",
            "nullable": true
          },
          "parameterType": {
            "type": "string",
            "nullable": true
          },
          "validationExpression": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "validationStatus": {
            "type": "string",
            "nullable": true
          },
          "isVisible": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IdeaStatiCa_Api_Connection_Model_IdeaParameterUpdate-IdeaStatiCa_Api": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          },
          "expression": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IdeaStatiCa_Api_Connection_Model_Material_ConMprlCrossSection-IdeaStatiCa_Api": {
        "type": "object",
        "properties": {
          "materialName": {
            "type": "string",
            "nullable": true
          },
          "mprlName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IdeaStatiCa_Api_Connection_Model_Material_ConMprlElement-IdeaStatiCa_Api": {
        "type": "object",
        "properties": {
          "mprlName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IdeaStatiCa_Api_Connection_Model_SelectedElement-IdeaStatiCa_Api": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "tableId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "elementId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "containerType": {
            "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_TableContainerType-IdeaStatiCa_Api"
          }
        },
        "additionalProperties": false
      },
      "IdeaStatiCa_Api_Connection_Model_TableContainerType-IdeaStatiCa_Api": {
        "enum": [
          "notSet",
          "crossSection",
          "material",
          "plateThickness",
          "steelStrands",
          "fastener"
        ],
        "type": "string"
      },
      "IdeaStatiCa_Api_Connection_Model_TemplateConversions-IdeaStatiCa_Api": {
        "type": "object",
        "properties": {
          "conversions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdeaStatiCa_Api_Connection_Model_BaseTemplateConversion-IdeaStatiCa_Api"
            },
            "nullable": true
          },
          "countryCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LoadEffectData-IdeaStatiCa_ConnectionChecks": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "internalForces": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "purpose": {
            "$ref": "#/components/schemas/Data_ePurpose-IdeaRS_Connections"
          }
        },
        "additionalProperties": false
      },
      "Loading_CombiInput-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Loading_LoadCase-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Loading_LoadGroup-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Loading_LoadInPoint-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Loading_LoadOnLine-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Loading_LoadOnSurface-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Loading_PointLoadOnLine-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Loading_ResultClass-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Loading_Settlement-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Loading_StrainLoadOnLine-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Loading_TemperatureLoadOnLine-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Material_MatConcrete-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "loadFromLibrary": {
            "type": "boolean"
          },
          "e": {
            "type": "number",
            "format": "double"
          },
          "g": {
            "type": "number",
            "format": "double"
          },
          "poisson": {
            "type": "number",
            "format": "double"
          },
          "unitMass": {
            "type": "number",
            "format": "double"
          },
          "specificHeat": {
            "type": "number",
            "format": "double"
          },
          "thermalExpansion": {
            "type": "number",
            "format": "double"
          },
          "thermalConductivity": {
            "type": "number",
            "format": "double"
          },
          "isDefaultMaterial": {
            "type": "boolean"
          },
          "orderInCode": {
            "type": "integer",
            "format": "int32"
          },
          "stateOfThermalExpansion": {
            "$ref": "#/components/schemas/Material_ThermalExpansionState-IdeaRS_OpenModel"
          },
          "stateOfThermalConductivity": {
            "$ref": "#/components/schemas/Material_ThermalConductivityState-IdeaRS_OpenModel"
          },
          "stateOfThermalSpecificHeat": {
            "$ref": "#/components/schemas/Material_ThermalSpecificHeatState-IdeaRS_OpenModel"
          },
          "stateOfThermalStressStrain": {
            "$ref": "#/components/schemas/Material_ThermalStressStrainState-IdeaRS_OpenModel"
          },
          "stateOfThermalStrain": {
            "$ref": "#/components/schemas/Material_ThermalStrainState-IdeaRS_OpenModel"
          },
          "userThermalSpecificHeatCurvature": {
            "$ref": "#/components/schemas/Geometry2D_Polygon2D-IdeaRS_OpenModel"
          },
          "userThermalConductivityCurvature": {
            "$ref": "#/components/schemas/Geometry2D_Polygon2D-IdeaRS_OpenModel"
          },
          "userThermalExpansionCurvature": {
            "$ref": "#/components/schemas/Geometry2D_Polygon2D-IdeaRS_OpenModel"
          },
          "userThermalStrainCurvature": {
            "$ref": "#/components/schemas/Geometry2D_Polygon2D-IdeaRS_OpenModel"
          },
          "userThermalStressStrainCurvature": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Geometry2D_TemperatureCurve2D-IdeaRS_OpenModel"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Material_MatPrestressSteel-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "diameter": {
            "type": "number",
            "format": "double"
          },
          "area": {
            "type": "number",
            "format": "double"
          },
          "numberOfWires": {
            "type": "integer",
            "format": "int32"
          },
          "equivalentDiameter": {
            "type": "number",
            "format": "double"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "loadFromLibrary": {
            "type": "boolean"
          },
          "e": {
            "type": "number",
            "format": "double"
          },
          "g": {
            "type": "number",
            "format": "double"
          },
          "poisson": {
            "type": "number",
            "format": "double"
          },
          "unitMass": {
            "type": "number",
            "format": "double"
          },
          "specificHeat": {
            "type": "number",
            "format": "double"
          },
          "thermalExpansion": {
            "type": "number",
            "format": "double"
          },
          "thermalConductivity": {
            "type": "number",
            "format": "double"
          },
          "isDefaultMaterial": {
            "type": "boolean"
          },
          "orderInCode": {
            "type": "integer",
            "format": "int32"
          },
          "stateOfThermalExpansion": {
            "$ref": "#/components/schemas/Material_ThermalExpansionState-IdeaRS_OpenModel"
          },
          "stateOfThermalConductivity": {
            "$ref": "#/components/schemas/Material_ThermalConductivityState-IdeaRS_OpenModel"
          },
          "stateOfThermalSpecificHeat": {
            "$ref": "#/components/schemas/Material_ThermalSpecificHeatState-IdeaRS_OpenModel"
          },
          "stateOfThermalStressStrain": {
            "$ref": "#/components/schemas/Material_ThermalStressStrainState-IdeaRS_OpenModel"
          },
          "stateOfThermalStrain": {
            "$ref": "#/components/schemas/Material_ThermalStrainState-IdeaRS_OpenModel"
          },
          "userThermalSpecificHeatCurvature": {
            "$ref": "#/components/schemas/Geometry2D_Polygon2D-IdeaRS_OpenModel"
          },
          "userThermalConductivityCurvature": {
            "$ref": "#/components/schemas/Geometry2D_Polygon2D-IdeaRS_OpenModel"
          },
          "userThermalExpansionCurvature": {
            "$ref": "#/components/schemas/Geometry2D_Polygon2D-IdeaRS_OpenModel"
          },
          "userThermalStrainCurvature": {
            "$ref": "#/components/schemas/Geometry2D_Polygon2D-IdeaRS_OpenModel"
          },
          "userThermalStressStrainCurvature": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Geometry2D_TemperatureCurve2D-IdeaRS_OpenModel"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Material_MatReinforcement-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "barSurface": {
            "$ref": "#/components/schemas/Material_ReinfBarSurface-IdeaRS_OpenModel"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "loadFromLibrary": {
            "type": "boolean"
          },
          "e": {
            "type": "number",
            "format": "double"
          },
          "g": {
            "type": "number",
            "format": "double"
          },
          "poisson": {
            "type": "number",
            "format": "double"
          },
          "unitMass": {
            "type": "number",
            "format": "double"
          },
          "specificHeat": {
            "type": "number",
            "format": "double"
          },
          "thermalExpansion": {
            "type": "number",
            "format": "double"
          },
          "thermalConductivity": {
            "type": "number",
            "format": "double"
          },
          "isDefaultMaterial": {
            "type": "boolean"
          },
          "orderInCode": {
            "type": "integer",
            "format": "int32"
          },
          "stateOfThermalExpansion": {
            "$ref": "#/components/schemas/Material_ThermalExpansionState-IdeaRS_OpenModel"
          },
          "stateOfThermalConductivity": {
            "$ref": "#/components/schemas/Material_ThermalConductivityState-IdeaRS_OpenModel"
          },
          "stateOfThermalSpecificHeat": {
            "$ref": "#/components/schemas/Material_ThermalSpecificHeatState-IdeaRS_OpenModel"
          },
          "stateOfThermalStressStrain": {
            "$ref": "#/components/schemas/Material_ThermalStressStrainState-IdeaRS_OpenModel"
          },
          "stateOfThermalStrain": {
            "$ref": "#/components/schemas/Material_ThermalStrainState-IdeaRS_OpenModel"
          },
          "userThermalSpecificHeatCurvature": {
            "$ref": "#/components/schemas/Geometry2D_Polygon2D-IdeaRS_OpenModel"
          },
          "userThermalConductivityCurvature": {
            "$ref": "#/components/schemas/Geometry2D_Polygon2D-IdeaRS_OpenModel"
          },
          "userThermalExpansionCurvature": {
            "$ref": "#/components/schemas/Geometry2D_Polygon2D-IdeaRS_OpenModel"
          },
          "userThermalStrainCurvature": {
            "$ref": "#/components/schemas/Geometry2D_Polygon2D-IdeaRS_OpenModel"
          },
          "userThermalStressStrainCurvature": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Geometry2D_TemperatureCurve2D-IdeaRS_OpenModel"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Material_MatSteel-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "loadFromLibrary": {
            "type": "boolean"
          },
          "e": {
            "type": "number",
            "format": "double"
          },
          "g": {
            "type": "number",
            "format": "double"
          },
          "poisson": {
            "type": "number",
            "format": "double"
          },
          "unitMass": {
            "type": "number",
            "format": "double"
          },
          "specificHeat": {
            "type": "number",
            "format": "double"
          },
          "thermalExpansion": {
            "type": "number",
            "format": "double"
          },
          "thermalConductivity": {
            "type": "number",
            "format": "double"
          },
          "isDefaultMaterial": {
            "type": "boolean"
          },
          "orderInCode": {
            "type": "integer",
            "format": "int32"
          },
          "stateOfThermalExpansion": {
            "$ref": "#/components/schemas/Material_ThermalExpansionState-IdeaRS_OpenModel"
          },
          "stateOfThermalConductivity": {
            "$ref": "#/components/schemas/Material_ThermalConductivityState-IdeaRS_OpenModel"
          },
          "stateOfThermalSpecificHeat": {
            "$ref": "#/components/schemas/Material_ThermalSpecificHeatState-IdeaRS_OpenModel"
          },
          "stateOfThermalStressStrain": {
            "$ref": "#/components/schemas/Material_ThermalStressStrainState-IdeaRS_OpenModel"
          },
          "stateOfThermalStrain": {
            "$ref": "#/components/schemas/Material_ThermalStrainState-IdeaRS_OpenModel"
          },
          "userThermalSpecificHeatCurvature": {
            "$ref": "#/components/schemas/Geometry2D_Polygon2D-IdeaRS_OpenModel"
          },
          "userThermalConductivityCurvature": {
            "$ref": "#/components/schemas/Geometry2D_Polygon2D-IdeaRS_OpenModel"
          },
          "userThermalExpansionCurvature": {
            "$ref": "#/components/schemas/Geometry2D_Polygon2D-IdeaRS_OpenModel"
          },
          "userThermalStrainCurvature": {
            "$ref": "#/components/schemas/Geometry2D_Polygon2D-IdeaRS_OpenModel"
          },
          "userThermalStressStrainCurvature": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Geometry2D_TemperatureCurve2D-IdeaRS_OpenModel"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Material_MatWelding-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "loadFromLibrary": {
            "type": "boolean"
          },
          "e": {
            "type": "number",
            "format": "double"
          },
          "g": {
            "type": "number",
            "format": "double"
          },
          "poisson": {
            "type": "number",
            "format": "double"
          },
          "unitMass": {
            "type": "number",
            "format": "double"
          },
          "specificHeat": {
            "type": "number",
            "format": "double"
          },
          "thermalExpansion": {
            "type": "number",
            "format": "double"
          },
          "thermalConductivity": {
            "type": "number",
            "format": "double"
          },
          "isDefaultMaterial": {
            "type": "boolean"
          },
          "orderInCode": {
            "type": "integer",
            "format": "int32"
          },
          "stateOfThermalExpansion": {
            "$ref": "#/components/schemas/Material_ThermalExpansionState-IdeaRS_OpenModel"
          },
          "stateOfThermalConductivity": {
            "$ref": "#/components/schemas/Material_ThermalConductivityState-IdeaRS_OpenModel"
          },
          "stateOfThermalSpecificHeat": {
            "$ref": "#/components/schemas/Material_ThermalSpecificHeatState-IdeaRS_OpenModel"
          },
          "stateOfThermalStressStrain": {
            "$ref": "#/components/schemas/Material_ThermalStressStrainState-IdeaRS_OpenModel"
          },
          "stateOfThermalStrain": {
            "$ref": "#/components/schemas/Material_ThermalStrainState-IdeaRS_OpenModel"
          },
          "userThermalSpecificHeatCurvature": {
            "$ref": "#/components/schemas/Geometry2D_Polygon2D-IdeaRS_OpenModel"
          },
          "userThermalConductivityCurvature": {
            "$ref": "#/components/schemas/Geometry2D_Polygon2D-IdeaRS_OpenModel"
          },
          "userThermalExpansionCurvature": {
            "$ref": "#/components/schemas/Geometry2D_Polygon2D-IdeaRS_OpenModel"
          },
          "userThermalStrainCurvature": {
            "$ref": "#/components/schemas/Geometry2D_Polygon2D-IdeaRS_OpenModel"
          },
          "userThermalStressStrainCurvature": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Geometry2D_TemperatureCurve2D-IdeaRS_OpenModel"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Material_ReinfBarSurface-IdeaRS_OpenModel": {
        "enum": [
          "smooth",
          "ribbed"
        ],
        "type": "string"
      },
      "Material_ThermalConductivityState-IdeaRS_OpenModel": {
        "enum": [
          "none",
          "code",
          "user"
        ],
        "type": "string"
      },
      "Material_ThermalExpansionState-IdeaRS_OpenModel": {
        "enum": [
          "none",
          "code",
          "user"
        ],
        "type": "string"
      },
      "Material_ThermalSpecificHeatState-IdeaRS_OpenModel": {
        "enum": [
          "none",
          "code",
          "user"
        ],
        "type": "string"
      },
      "Material_ThermalStrainState-IdeaRS_OpenModel": {
        "enum": [
          "none",
          "code",
          "user"
        ],
        "type": "string"
      },
      "Material_ThermalStressStrainState-IdeaRS_OpenModel": {
        "enum": [
          "none",
          "code",
          "user"
        ],
        "type": "string"
      },
      "Message_MessageNumber-IdeaRS_OpenModel": {
        "enum": [
          "unspecified",
          "information",
          "warning",
          "warnNoPropertyInData",
          "warnValueOutOfRange",
          "warnCurveCount",
          "warnReinforcementBarsCollision",
          "error",
          "errNoOpenObject",
          "errDataObjectNotCreated",
          "errNoObjectInOpenModel",
          "errNoReferenceObjectInOpenModel",
          "errNoEquivalentObjectInDataModel",
          "errNoCrossSectionParameter",
          "errBoltsTooClose",
          "errBoltsTooCloseEdge",
          "errContactsAngle",
          "errIncorrentMaterialE",
          "errIncorrectMaterialEGP",
          "errPreloadedBoltGrade",
          "errValueOutOfRange",
          "errCurveZeroPoint",
          "errCurveFunction",
          "errCurveDecreaseFunction",
          "errCurveDerivation",
          "errCurveNotSet",
          "errValidPolyline",
          "errWarningLoad",
          "errTimeout",
          "errNoInLibrary",
          "errBadWeldMaterialProperty",
          "errOperation",
          "reserved"
        ],
        "type": "string"
      },
      "Message_OpenMessage-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "number": {
            "$ref": "#/components/schemas/Message_MessageNumber-IdeaRS_OpenModel"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Message_OpenMessages-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "messages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Message_OpenMessage-IdeaRS_OpenModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Microsoft_AspNetCore_Mvc_Formatters_IOutputFormatter-Microsoft_AspNetCore_Mvc_Abstractions": {
        "type": "object",
        "additionalProperties": false
      },
      "Microsoft_AspNetCore_Mvc_OkObjectResult-Microsoft_AspNetCore_Mvc_Core": {
        "type": "object",
        "properties": {
          "value": {
            "nullable": true
          },
          "formatters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Microsoft_AspNetCore_Mvc_Formatters_IOutputFormatter-Microsoft_AspNetCore_Mvc_Abstractions"
            },
            "nullable": true
          },
          "contentTypes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "declaredType": {
            "type": "string",
            "nullable": true
          },
          "statusCode": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Model_CheckMember-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Model_DesignMember-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Model_Element1D-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Model_Element2D-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Model_HingeElement1D-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Model_InitialImperfectionOfPoint-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Model_LineSupportSegment-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Model_Member1D-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Model_Member2D-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Model_PointSupportNode-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Model_RebarGeneral-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Model_RebarShape-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Model_RebarSingle-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Model_RebarStirrups-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Model_RigidLink-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Model_Span-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Model_SubStructure-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Model_Taper-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Model_Tendon-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "OpenAttribute-IdeaRS_OpenModel": {
        "type": "object",
        "additionalProperties": false
      },
      "OpenElementId-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "OpenModel-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "version": {
            "type": "integer",
            "format": "int32"
          },
          "originSettings": {
            "$ref": "#/components/schemas/OriginSettings-IdeaRS_OpenModel"
          },
          "point3D": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Geometry3D_Point3D-IdeaRS_OpenModel"
            },
            "nullable": true
          },
          "lineSegment3D": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Geometry3D_LineSegment3D-IdeaRS_OpenModel"
            },
            "nullable": true
          },
          "arcSegment3D": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Geometry3D_ArcSegment3D-IdeaRS_OpenModel"
            },
            "nullable": true
          },
          "polyLine3D": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Geometry3D_PolyLine3D-IdeaRS_OpenModel"
            },
            "nullable": true
          },
          "region3D": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Geometry3D_Region3D-IdeaRS_OpenModel"
            },
            "nullable": true
          },
          "matConcrete": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Material_MatConcrete-IdeaRS_OpenModel"
            },
            "nullable": true
          },
          "matReinforcement": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Material_MatReinforcement-IdeaRS_OpenModel"
            },
            "nullable": true
          },
          "matSteel": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Material_MatSteel-IdeaRS_OpenModel"
            },
            "nullable": true
          },
          "matPrestressSteel": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Material_MatPrestressSteel-IdeaRS_OpenModel"
            },
            "nullable": true
          },
          "matWelding": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Material_MatWelding-IdeaRS_OpenModel"
            },
            "nullable": true
          },
          "crossSection": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CrossSection_CrossSection-IdeaRS_OpenModel"
            },
            "nullable": true
          },
          "reinforcedCrossSection": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CrossSection_ReinforcedCrossSection-IdeaRS_OpenModel"
            },
            "nullable": true
          },
          "hingeElement1D": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Model_HingeElement1D-IdeaRS_OpenModel"
            },
            "nullable": true
          },
          "opening": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Detail_Opening-IdeaRS_OpenModel"
            },
            "nullable": true
          },
          "dappedEnd": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Detail_DappedEnd-IdeaRS_OpenModel"
            },
            "nullable": true
          },
          "patchDevice": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Detail_PatchDevice-IdeaRS_OpenModel"
            },
            "nullable": true
          },
          "element1D": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Model_Element1D-IdeaRS_OpenModel"
            },
            "nullable": true
          },
          "beam": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Detail_Beam-IdeaRS_OpenModel"
            },
            "nullable": true
          },
          "member1D": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Model_Member1D-IdeaRS_OpenModel"
            },
            "nullable": true
          },
          "element2D": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Model_Element2D-IdeaRS_OpenModel"
            },
            "nullable": true
          },
          "wall": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Detail_Wall-IdeaRS_OpenModel"
            },
            "nullable": true
          },
          "member2D": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Model_Member2D-IdeaRS_OpenModel"
            },
            "nullable": true
          },
          "rigidLink": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Model_RigidLink-IdeaRS_OpenModel"
            },
            "nullable": true
          },
          "pointOnLine3D": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Geometry3D_PointOnLine3D-IdeaRS_OpenModel"
            },
            "nullable": true
          },
          "pointSupportNode": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Model_PointSupportNode-IdeaRS_OpenModel"
            },
            "nullable": true
          },
          "lineSupportSegment": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Model_LineSupportSegment-IdeaRS_OpenModel"
            },
            "nullable": true
          },
          "loadsInPoint": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Loading_LoadInPoint-IdeaRS_OpenModel"
            },
            "nullable": true
          },
          "loadsOnLine": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Loading_LoadOnLine-IdeaRS_OpenModel"
            },
            "nullable": true
          },
          "strainLoadsOnLine": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Loading_StrainLoadOnLine-IdeaRS_OpenModel"
            },
            "nullable": true
          },
          "pointLoadsOnLine": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Loading_PointLoadOnLine-IdeaRS_OpenModel"
            },
            "nullable": true
          },
          "loadsOnSurface": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Loading_LoadOnSurface-IdeaRS_OpenModel"
            },
            "nullable": true
          },
          "settlements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Loading_Settlement-IdeaRS_OpenModel"
            },
            "nullable": true
          },
          "temperatureLoadsOnLine": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Loading_TemperatureLoadOnLine-IdeaRS_OpenModel"
            },
            "nullable": true
          },
          "loadGroup": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Loading_LoadGroup-IdeaRS_OpenModel"
            },
            "nullable": true
          },
          "loadCase": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Loading_LoadCase-IdeaRS_OpenModel"
            },
            "nullable": true
          },
          "combiInput": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Loading_CombiInput-IdeaRS_OpenModel"
            },
            "nullable": true
          },
          "attribute": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OpenAttribute-IdeaRS_OpenModel"
            },
            "nullable": true
          },
          "connectionPoint": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Connection_ConnectionPoint-IdeaRS_OpenModel"
            },
            "nullable": true
          },
          "connections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Connection_ConnectionData-IdeaRS_OpenModel"
            },
            "nullable": true
          },
          "reinforcement": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Detail_Reinforcement-IdeaRS_OpenModel"
            },
            "nullable": true
          },
          "isdModel": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Detail_ISDModel-IdeaRS_OpenModel"
            },
            "nullable": true
          },
          "initialImperfectionOfPoint": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Model_InitialImperfectionOfPoint-IdeaRS_OpenModel"
            },
            "nullable": true
          },
          "tendon": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Model_Tendon-IdeaRS_OpenModel"
            },
            "nullable": true
          },
          "resultClass": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Loading_ResultClass-IdeaRS_OpenModel"
            },
            "nullable": true
          },
          "designMember": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Model_DesignMember-IdeaRS_OpenModel"
            },
            "nullable": true
          },
          "subStructure": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Model_SubStructure-IdeaRS_OpenModel"
            },
            "nullable": true
          },
          "connectionSetup": {
            "$ref": "#/components/schemas/ConnectionSetup-IdeaRS_OpenModel"
          },
          "projectData": {
            "$ref": "#/components/schemas/ProjectData-IdeaRS_OpenModel"
          },
          "checkMember": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Model_CheckMember-IdeaRS_OpenModel"
            },
            "nullable": true
          },
          "concreteCheckSection": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Concrete_CheckSection-IdeaRS_OpenModel"
            },
            "nullable": true
          },
          "concreteSetup": {
            "$ref": "#/components/schemas/Concrete_ConcreteSetup-IdeaRS_OpenModel"
          },
          "projectDataConcrete": {
            "$ref": "#/components/schemas/Concrete_ProjectDataConcrete-IdeaRS_OpenModel"
          },
          "rebarShape": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Model_RebarShape-IdeaRS_OpenModel"
            },
            "nullable": true
          },
          "rebarGeneral": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Model_RebarGeneral-IdeaRS_OpenModel"
            },
            "nullable": true
          },
          "rebarSingle": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Model_RebarSingle-IdeaRS_OpenModel"
            },
            "nullable": true
          },
          "rebarStirrups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Model_RebarStirrups-IdeaRS_OpenModel"
            },
            "nullable": true
          },
          "taper": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Model_Taper-IdeaRS_OpenModel"
            },
            "nullable": true
          },
          "span": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Model_Span-IdeaRS_OpenModel"
            },
            "nullable": true
          },
          "solidBlocks3D": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Detail_SolidBlock3D-IdeaRS_OpenModel"
            },
            "nullable": true
          },
          "surfaceSupports3D": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Detail_SurfaceSupport3D-IdeaRS_OpenModel"
            },
            "nullable": true
          },
          "basePlates3D": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Detail_BasePlate3D-IdeaRS_OpenModel"
            },
            "nullable": true
          },
          "anchors3D": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Detail_Anchor3D-IdeaRS_OpenModel"
            },
            "nullable": true
          },
          "detailLoadCase": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Detail_Loading_DetailLoadCase-IdeaRS_OpenModel"
            },
            "nullable": true
          },
          "detailCombination": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Detail_Loading_DetailCombination-IdeaRS_OpenModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OpenModelContainer-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "openModel": {
            "$ref": "#/components/schemas/OpenModel-IdeaRS_OpenModel"
          },
          "openModelResult": {
            "$ref": "#/components/schemas/Result_OpenModelResult-IdeaRS_OpenModel"
          }
        },
        "additionalProperties": false
      },
      "OriginSettings-IdeaRS_OpenModel": {
        "type": "object",
        "additionalProperties": false
      },
      "Parameters_AnchorType-IdeaRS_OpenModel": {
        "enum": [
          "straight",
          "washerPlateCircular",
          "washerPlateRectangular"
        ],
        "type": "string"
      },
      "Parameters_BoltShearType-IdeaRS_OpenModel": {
        "enum": [
          "bearing",
          "interaction",
          "friction"
        ],
        "type": "string"
      },
      "ProjectData-IdeaRS_OpenModel": {
        "type": "object",
        "additionalProperties": false
      },
      "ReferenceElement-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "typeName": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "element": {
            "$ref": "#/components/schemas/OpenElementId-IdeaRS_OpenModel"
          }
        },
        "additionalProperties": false
      },
      "Result_Loading-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "loadingType": {
            "$ref": "#/components/schemas/Result_LoadingType-IdeaRS_OpenModel"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Result_LoadingType-IdeaRS_OpenModel": {
        "enum": [
          "loadCase",
          "combination",
          "resultClass"
        ],
        "type": "string"
      },
      "Result_Member-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "memberType": {
            "$ref": "#/components/schemas/Result_MemberType-IdeaRS_OpenModel"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Result_MemberType-IdeaRS_OpenModel": {
        "enum": [
          "member1D",
          "element1D"
        ],
        "type": "string"
      },
      "Result_OpenModelResult-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "resultOnMembers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result_ResultOnMembers-IdeaRS_OpenModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Result_ResultBase-IdeaRS_OpenModel": {
        "type": "object",
        "additionalProperties": false
      },
      "Result_ResultLocalSystemType-IdeaRS_OpenModel": {
        "enum": [
          "local",
          "global",
          "principle"
        ],
        "type": "string"
      },
      "Result_ResultOnMember-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "member": {
            "$ref": "#/components/schemas/Result_Member-IdeaRS_OpenModel"
          },
          "resultType": {
            "$ref": "#/components/schemas/Result_ResultType-IdeaRS_OpenModel"
          },
          "localSystemType": {
            "$ref": "#/components/schemas/Result_ResultLocalSystemType-IdeaRS_OpenModel"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result_ResultBase-IdeaRS_OpenModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Result_ResultOnMembers-IdeaRS_OpenModel": {
        "type": "object",
        "properties": {
          "loading": {
            "$ref": "#/components/schemas/Result_Loading-IdeaRS_OpenModel"
          },
          "members": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Result_ResultOnMember-IdeaRS_OpenModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Result_ResultType-IdeaRS_OpenModel": {
        "enum": [
          "internalForces",
          "deformation",
          "crossSectionNLA",
          "crossSectionTA",
          "interactionDiagram",
          "crossSectionMesh"
        ],
        "type": "string"
      },
      "SteelSetup-IdeaRS_OpenModel": {
        "type": "object",
        "additionalProperties": false
      },
      "System_IO_MemoryStream-System_Private_CoreLib": {
        "type": "object",
        "properties": {
          "canRead": {
            "type": "boolean",
            "readOnly": true
          },
          "canSeek": {
            "type": "boolean",
            "readOnly": true
          },
          "canWrite": {
            "type": "boolean",
            "readOnly": true
          },
          "capacity": {
            "type": "integer",
            "format": "int32"
          },
          "length": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "position": {
            "type": "integer",
            "format": "int64"
          },
          "canTimeout": {
            "type": "boolean",
            "readOnly": true
          },
          "readTimeout": {
            "type": "integer",
            "format": "int32"
          },
          "writeTimeout": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "WeldEvaluation-IdeaRS_OpenModel": {
        "enum": [
          "maxForceElement",
          "forceResultant",
          "applyPlasticWelds"
        ],
        "type": "string"
      }
    }
  }
}