/*
 * Connection Rest API 1.0
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = connection_restapi_client_poc.Client.OpenAPIDateConverter;

namespace connection_restapi_client_poc.Model
{
    /// <summary>
    /// BoltCheckResDataTimberIdeaStatiCaConnectionChecks
    /// </summary>
    [DataContract(Name = "BoltCheckResDataTimber-IdeaStatiCa_ConnectionChecks")]
    public partial class BoltCheckResDataTimberIdeaStatiCaConnectionChecks : IValidatableObject
    {

        /// <summary>
        /// Gets or Sets CodeType
        /// </summary>
        [DataMember(Name = "codeType", EmitDefaultValue = false)]
        public IdeaRSWsLibCssServiceCodeTypeCIBasicTypes? CodeType { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="BoltCheckResDataTimberIdeaStatiCaConnectionChecks" /> class.
        /// </summary>
        /// <param name="boltTensionResistance">boltTensionResistance.</param>
        /// <param name="boltPunchingResistance">boltPunchingResistance.</param>
        /// <param name="boltTensionForce">boltTensionForce.</param>
        /// <param name="boltShearResistance">boltShearResistance.</param>
        /// <param name="boltShearResistanceTension">boltShearResistanceTension.</param>
        /// <param name="boltBearingResistance">boltBearingResistance.</param>
        /// <param name="bearingResistanceBolt">bearingResistanceBolt.</param>
        /// <param name="bearingResistanceConPart">bearingResistanceConPart.</param>
        /// <param name="boltShearForce">boltShearForce.</param>
        /// <param name="numberOfShearPlanes">numberOfShearPlanes.</param>
        /// <param name="boltShearForces">boltShearForces.</param>
        /// <param name="unityCheckTension">unityCheckTension.</param>
        /// <param name="unityCheckTensionRes">unityCheckTensionRes.</param>
        /// <param name="unityCheckShear">unityCheckShear.</param>
        /// <param name="boltAssemblyName">boltAssemblyName.</param>
        /// <param name="boltTensionForceLoadcase">boltTensionForceLoadcase.</param>
        /// <param name="boltShearForceLoadcase">boltShearForceLoadcase.</param>
        /// <param name="boltInteractionLoadcase">boltInteractionLoadcase.</param>
        /// <param name="boltTensionForceLoadcaseId">boltTensionForceLoadcaseId.</param>
        /// <param name="boltShearForceLoadcaseId">boltShearForceLoadcaseId.</param>
        /// <param name="boltInteractionLoadcaseId">boltInteractionLoadcaseId.</param>
        /// <param name="forcesAllLoadCases">forcesAllLoadCases.</param>
        /// <param name="elementAxisY">elementAxisY.</param>
        /// <param name="elementAxisZ">elementAxisZ.</param>
        /// <param name="unityCheckBearing">unityCheckBearing.</param>
        /// <param name="codeType">codeType.</param>
        /// <param name="connectorGripLength">connectorGripLength.</param>
        /// <param name="fillerPlatesPackTh">fillerPlatesPackTh.</param>
        /// <param name="angle">angle.</param>
        /// <param name="fub">fub.</param>
        /// <param name="aFtrd">aFtrd.</param>
        /// <param name="aFvrd">aFvrd.</param>
        /// <param name="k2">k2.</param>
        /// <param name="alfaV">alfaV.</param>
        /// <param name="tpBprd">tpBprd.</param>
        /// <param name="fuBprd">fuBprd.</param>
        /// <param name="dmBprd">dmBprd.</param>
        /// <param name="gammaM2">gammaM2.</param>
        /// <param name="dFbrd">dFbrd.</param>
        /// <param name="thFbrd">thFbrd.</param>
        /// <param name="k1">k1.</param>
        /// <param name="alphaB">alphaB.</param>
        /// <param name="gammaM3">gammaM3.</param>
        /// <param name="momentResistance">momentResistance.</param>
        /// <param name="unityCheckBending">unityCheckBending.</param>
        /// <param name="boltMomentForce">boltMomentForce.</param>
        /// <param name="bearingResistance">bearingResistance.</param>
        /// <param name="id">id.</param>
        /// <param name="name">name.</param>
        /// <param name="checkStatus">checkStatus.</param>
        /// <param name="limitCheckStatus">limitCheckStatus.</param>
        /// <param name="loadCaseId">loadCaseId.</param>
        /// <param name="loadCase">loadCase.</param>
        /// <param name="maxUnityCheck">maxUnityCheck.</param>
        /// <param name="form">form.</param>
        public BoltCheckResDataTimberIdeaStatiCaConnectionChecks(double boltTensionResistance = default(double), double boltPunchingResistance = default(double), double boltTensionForce = default(double), double boltShearResistance = default(double), double boltShearResistanceTension = default(double), double boltBearingResistance = default(double), double bearingResistanceBolt = default(double), double bearingResistanceConPart = default(double), double boltShearForce = default(double), int numberOfShearPlanes = default(int), List<double> boltShearForces = default(List<double>), double unityCheckTension = default(double), double unityCheckTensionRes = default(double), double unityCheckShear = default(double), string boltAssemblyName = default(string), string boltTensionForceLoadcase = default(string), string boltShearForceLoadcase = default(string), string boltInteractionLoadcase = default(string), int boltTensionForceLoadcaseId = default(int), int boltShearForceLoadcaseId = default(int), int boltInteractionLoadcaseId = default(int), Dictionary<string, List<float>> forcesAllLoadCases = default(Dictionary<string, List<float>>), string elementAxisY = default(string), string elementAxisZ = default(string), double unityCheckBearing = default(double), IdeaRSWsLibCssServiceCodeTypeCIBasicTypes? codeType = default(IdeaRSWsLibCssServiceCodeTypeCIBasicTypes?), double connectorGripLength = default(double), double fillerPlatesPackTh = default(double), double angle = default(double), double fub = default(double), double aFtrd = default(double), double aFvrd = default(double), double k2 = default(double), double alfaV = default(double), double tpBprd = default(double), double fuBprd = default(double), double dmBprd = default(double), double gammaM2 = default(double), double dFbrd = default(double), double thFbrd = default(double), double k1 = default(double), double alphaB = default(double), double gammaM3 = default(double), double momentResistance = default(double), double unityCheckBending = default(double), double boltMomentForce = default(double), double bearingResistance = default(double), int id = default(int), string name = default(string), bool checkStatus = default(bool), bool limitCheckStatus = default(bool), int loadCaseId = default(int), string loadCase = default(string), double maxUnityCheck = default(double), string form = default(string))
        {
            this.BoltTensionResistance = boltTensionResistance;
            this.BoltPunchingResistance = boltPunchingResistance;
            this.BoltTensionForce = boltTensionForce;
            this.BoltShearResistance = boltShearResistance;
            this.BoltShearResistanceTension = boltShearResistanceTension;
            this.BoltBearingResistance = boltBearingResistance;
            this.BearingResistanceBolt = bearingResistanceBolt;
            this.BearingResistanceConPart = bearingResistanceConPart;
            this.BoltShearForce = boltShearForce;
            this.NumberOfShearPlanes = numberOfShearPlanes;
            this.BoltShearForces = boltShearForces;
            this.UnityCheckTension = unityCheckTension;
            this.UnityCheckTensionRes = unityCheckTensionRes;
            this.UnityCheckShear = unityCheckShear;
            this.BoltAssemblyName = boltAssemblyName;
            this.BoltTensionForceLoadcase = boltTensionForceLoadcase;
            this.BoltShearForceLoadcase = boltShearForceLoadcase;
            this.BoltInteractionLoadcase = boltInteractionLoadcase;
            this.BoltTensionForceLoadcaseId = boltTensionForceLoadcaseId;
            this.BoltShearForceLoadcaseId = boltShearForceLoadcaseId;
            this.BoltInteractionLoadcaseId = boltInteractionLoadcaseId;
            this.ForcesAllLoadCases = forcesAllLoadCases;
            this.ElementAxisY = elementAxisY;
            this.ElementAxisZ = elementAxisZ;
            this.UnityCheckBearing = unityCheckBearing;
            this.CodeType = codeType;
            this.ConnectorGripLength = connectorGripLength;
            this.FillerPlatesPackTh = fillerPlatesPackTh;
            this.Angle = angle;
            this.Fub = fub;
            this.AFtrd = aFtrd;
            this.AFvrd = aFvrd;
            this.K2 = k2;
            this.AlfaV = alfaV;
            this.TpBprd = tpBprd;
            this.FuBprd = fuBprd;
            this.DmBprd = dmBprd;
            this.GammaM2 = gammaM2;
            this.DFbrd = dFbrd;
            this.ThFbrd = thFbrd;
            this.K1 = k1;
            this.AlphaB = alphaB;
            this.GammaM3 = gammaM3;
            this.MomentResistance = momentResistance;
            this.UnityCheckBending = unityCheckBending;
            this.BoltMomentForce = boltMomentForce;
            this.BearingResistance = bearingResistance;
            this.Id = id;
            this.Name = name;
            this.CheckStatus = checkStatus;
            this.LimitCheckStatus = limitCheckStatus;
            this.LoadCaseId = loadCaseId;
            this.LoadCase = loadCase;
            this.MaxUnityCheck = maxUnityCheck;
            this.Form = form;
        }

        /// <summary>
        /// Gets or Sets BoltTensionResistance
        /// </summary>
        [DataMember(Name = "boltTensionResistance", EmitDefaultValue = false)]
        public double BoltTensionResistance { get; set; }

        /// <summary>
        /// Gets or Sets BoltPunchingResistance
        /// </summary>
        [DataMember(Name = "boltPunchingResistance", EmitDefaultValue = false)]
        public double BoltPunchingResistance { get; set; }

        /// <summary>
        /// Gets or Sets BoltTensionForce
        /// </summary>
        [DataMember(Name = "boltTensionForce", EmitDefaultValue = false)]
        public double BoltTensionForce { get; set; }

        /// <summary>
        /// Gets or Sets BoltShearResistance
        /// </summary>
        [DataMember(Name = "boltShearResistance", EmitDefaultValue = false)]
        public double BoltShearResistance { get; set; }

        /// <summary>
        /// Gets or Sets BoltShearResistanceTension
        /// </summary>
        [DataMember(Name = "boltShearResistanceTension", EmitDefaultValue = false)]
        public double BoltShearResistanceTension { get; set; }

        /// <summary>
        /// Gets or Sets BoltBearingResistance
        /// </summary>
        [DataMember(Name = "boltBearingResistance", EmitDefaultValue = false)]
        public double BoltBearingResistance { get; set; }

        /// <summary>
        /// Gets or Sets BearingResistanceBolt
        /// </summary>
        [DataMember(Name = "bearingResistance_Bolt", EmitDefaultValue = false)]
        public double BearingResistanceBolt { get; set; }

        /// <summary>
        /// Gets or Sets BearingResistanceConPart
        /// </summary>
        [DataMember(Name = "bearingResistance_ConPart", EmitDefaultValue = false)]
        public double BearingResistanceConPart { get; set; }

        /// <summary>
        /// Gets or Sets BoltShearForce
        /// </summary>
        [DataMember(Name = "boltShearForce", EmitDefaultValue = false)]
        public double BoltShearForce { get; set; }

        /// <summary>
        /// Gets or Sets NumberOfShearPlanes
        /// </summary>
        [DataMember(Name = "numberOfShearPlanes", EmitDefaultValue = false)]
        public int NumberOfShearPlanes { get; set; }

        /// <summary>
        /// Gets or Sets BoltShearForces
        /// </summary>
        [DataMember(Name = "boltShearForces", EmitDefaultValue = true)]
        public List<double> BoltShearForces { get; set; }

        /// <summary>
        /// Gets or Sets UnityCheckTension
        /// </summary>
        [DataMember(Name = "unityCheckTension", EmitDefaultValue = false)]
        public double UnityCheckTension { get; set; }

        /// <summary>
        /// Gets or Sets UnityCheckTensionRes
        /// </summary>
        [DataMember(Name = "unityCheckTensionRes", EmitDefaultValue = false)]
        public double UnityCheckTensionRes { get; set; }

        /// <summary>
        /// Gets or Sets UnityCheckShear
        /// </summary>
        [DataMember(Name = "unityCheckShear", EmitDefaultValue = false)]
        public double UnityCheckShear { get; set; }

        /// <summary>
        /// Gets or Sets BoltAssemblyName
        /// </summary>
        [DataMember(Name = "boltAssemblyName", EmitDefaultValue = true)]
        public string BoltAssemblyName { get; set; }

        /// <summary>
        /// Gets or Sets BoltTensionForceLoadcase
        /// </summary>
        [DataMember(Name = "boltTensionForceLoadcase", EmitDefaultValue = true)]
        public string BoltTensionForceLoadcase { get; set; }

        /// <summary>
        /// Gets or Sets BoltShearForceLoadcase
        /// </summary>
        [DataMember(Name = "boltShearForceLoadcase", EmitDefaultValue = true)]
        public string BoltShearForceLoadcase { get; set; }

        /// <summary>
        /// Gets or Sets BoltInteractionLoadcase
        /// </summary>
        [DataMember(Name = "boltInteractionLoadcase", EmitDefaultValue = true)]
        public string BoltInteractionLoadcase { get; set; }

        /// <summary>
        /// Gets or Sets BoltTensionForceLoadcaseId
        /// </summary>
        [DataMember(Name = "boltTensionForceLoadcaseId", EmitDefaultValue = false)]
        public int BoltTensionForceLoadcaseId { get; set; }

        /// <summary>
        /// Gets or Sets BoltShearForceLoadcaseId
        /// </summary>
        [DataMember(Name = "boltShearForceLoadcaseId", EmitDefaultValue = false)]
        public int BoltShearForceLoadcaseId { get; set; }

        /// <summary>
        /// Gets or Sets BoltInteractionLoadcaseId
        /// </summary>
        [DataMember(Name = "boltInteractionLoadcaseId", EmitDefaultValue = false)]
        public int BoltInteractionLoadcaseId { get; set; }

        /// <summary>
        /// Gets or Sets ForcesAllLoadCases
        /// </summary>
        [DataMember(Name = "forcesAllLoadCases", EmitDefaultValue = true)]
        public Dictionary<string, List<float>> ForcesAllLoadCases { get; set; }

        /// <summary>
        /// Gets or Sets ElementAxisY
        /// </summary>
        [DataMember(Name = "elementAxisY", EmitDefaultValue = false)]
        public string ElementAxisY { get; set; }

        /// <summary>
        /// Gets or Sets ElementAxisZ
        /// </summary>
        [DataMember(Name = "elementAxisZ", EmitDefaultValue = false)]
        public string ElementAxisZ { get; set; }

        /// <summary>
        /// Gets or Sets UnityCheckBearing
        /// </summary>
        [DataMember(Name = "unityCheckBearing", EmitDefaultValue = false)]
        public double UnityCheckBearing { get; set; }

        /// <summary>
        /// Gets or Sets ConnectorGripLength
        /// </summary>
        [DataMember(Name = "connectorGripLength", EmitDefaultValue = false)]
        public double ConnectorGripLength { get; set; }

        /// <summary>
        /// Gets or Sets FillerPlatesPackTh
        /// </summary>
        [DataMember(Name = "fillerPlatesPackTh", EmitDefaultValue = false)]
        public double FillerPlatesPackTh { get; set; }

        /// <summary>
        /// Gets or Sets Angle
        /// </summary>
        [DataMember(Name = "angle", EmitDefaultValue = false)]
        public double Angle { get; set; }

        /// <summary>
        /// Gets or Sets Fub
        /// </summary>
        [DataMember(Name = "fub", EmitDefaultValue = false)]
        public double Fub { get; set; }

        /// <summary>
        /// Gets or Sets AFtrd
        /// </summary>
        [DataMember(Name = "a_ftrd", EmitDefaultValue = false)]
        public double AFtrd { get; set; }

        /// <summary>
        /// Gets or Sets AFvrd
        /// </summary>
        [DataMember(Name = "a_fvrd", EmitDefaultValue = false)]
        public double AFvrd { get; set; }

        /// <summary>
        /// Gets or Sets K2
        /// </summary>
        [DataMember(Name = "k2", EmitDefaultValue = false)]
        public double K2 { get; set; }

        /// <summary>
        /// Gets or Sets AlfaV
        /// </summary>
        [DataMember(Name = "alfa_v", EmitDefaultValue = false)]
        public double AlfaV { get; set; }

        /// <summary>
        /// Gets or Sets TpBprd
        /// </summary>
        [DataMember(Name = "tp_Bprd", EmitDefaultValue = false)]
        public double TpBprd { get; set; }

        /// <summary>
        /// Gets or Sets FuBprd
        /// </summary>
        [DataMember(Name = "fu_Bprd", EmitDefaultValue = false)]
        public double FuBprd { get; set; }

        /// <summary>
        /// Gets or Sets DmBprd
        /// </summary>
        [DataMember(Name = "dm_Bprd", EmitDefaultValue = false)]
        public double DmBprd { get; set; }

        /// <summary>
        /// Gets or Sets GammaM2
        /// </summary>
        [DataMember(Name = "gammaM2", EmitDefaultValue = false)]
        public double GammaM2 { get; set; }

        /// <summary>
        /// Gets or Sets DFbrd
        /// </summary>
        [DataMember(Name = "d_fbrd", EmitDefaultValue = false)]
        public double DFbrd { get; set; }

        /// <summary>
        /// Gets or Sets ThFbrd
        /// </summary>
        [DataMember(Name = "th_fbrd", EmitDefaultValue = false)]
        public double ThFbrd { get; set; }

        /// <summary>
        /// Gets or Sets K1
        /// </summary>
        [DataMember(Name = "k1", EmitDefaultValue = false)]
        public double K1 { get; set; }

        /// <summary>
        /// Gets or Sets AlphaB
        /// </summary>
        [DataMember(Name = "alpha_b", EmitDefaultValue = false)]
        public double AlphaB { get; set; }

        /// <summary>
        /// Gets or Sets GammaM3
        /// </summary>
        [DataMember(Name = "gammaM3", EmitDefaultValue = false)]
        public double GammaM3 { get; set; }

        /// <summary>
        /// Gets or Sets MomentResistance
        /// </summary>
        [DataMember(Name = "momentResistance", EmitDefaultValue = false)]
        public double MomentResistance { get; set; }

        /// <summary>
        /// Gets or Sets UnityCheckBending
        /// </summary>
        [DataMember(Name = "unityCheckBending", EmitDefaultValue = false)]
        public double UnityCheckBending { get; set; }

        /// <summary>
        /// Gets or Sets BoltMomentForce
        /// </summary>
        [DataMember(Name = "boltMomentForce", EmitDefaultValue = false)]
        public double BoltMomentForce { get; set; }

        /// <summary>
        /// Gets or Sets BearingResistance
        /// </summary>
        [DataMember(Name = "bearingResistance", EmitDefaultValue = false)]
        public double BearingResistance { get; set; }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public int Id { get; set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name = "name", EmitDefaultValue = true)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets CheckStatus
        /// </summary>
        [DataMember(Name = "checkStatus", EmitDefaultValue = true)]
        public bool CheckStatus { get; set; }

        /// <summary>
        /// Gets or Sets LimitCheckStatus
        /// </summary>
        [DataMember(Name = "limitCheckStatus", EmitDefaultValue = true)]
        public bool LimitCheckStatus { get; set; }

        /// <summary>
        /// Gets or Sets LoadCaseId
        /// </summary>
        [DataMember(Name = "loadCaseId", EmitDefaultValue = false)]
        public int LoadCaseId { get; set; }

        /// <summary>
        /// Gets or Sets LoadCase
        /// </summary>
        [DataMember(Name = "loadCase", EmitDefaultValue = true)]
        public string LoadCase { get; set; }

        /// <summary>
        /// Gets or Sets MaxUnityCheck
        /// </summary>
        [DataMember(Name = "maxUnityCheck", EmitDefaultValue = false)]
        public double MaxUnityCheck { get; set; }

        /// <summary>
        /// Gets or Sets Form
        /// </summary>
        [DataMember(Name = "form", EmitDefaultValue = true)]
        public string Form { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class BoltCheckResDataTimberIdeaStatiCaConnectionChecks {\n");
            sb.Append("  BoltTensionResistance: ").Append(BoltTensionResistance).Append("\n");
            sb.Append("  BoltPunchingResistance: ").Append(BoltPunchingResistance).Append("\n");
            sb.Append("  BoltTensionForce: ").Append(BoltTensionForce).Append("\n");
            sb.Append("  BoltShearResistance: ").Append(BoltShearResistance).Append("\n");
            sb.Append("  BoltShearResistanceTension: ").Append(BoltShearResistanceTension).Append("\n");
            sb.Append("  BoltBearingResistance: ").Append(BoltBearingResistance).Append("\n");
            sb.Append("  BearingResistanceBolt: ").Append(BearingResistanceBolt).Append("\n");
            sb.Append("  BearingResistanceConPart: ").Append(BearingResistanceConPart).Append("\n");
            sb.Append("  BoltShearForce: ").Append(BoltShearForce).Append("\n");
            sb.Append("  NumberOfShearPlanes: ").Append(NumberOfShearPlanes).Append("\n");
            sb.Append("  BoltShearForces: ").Append(BoltShearForces).Append("\n");
            sb.Append("  UnityCheckTension: ").Append(UnityCheckTension).Append("\n");
            sb.Append("  UnityCheckTensionRes: ").Append(UnityCheckTensionRes).Append("\n");
            sb.Append("  UnityCheckShear: ").Append(UnityCheckShear).Append("\n");
            sb.Append("  BoltAssemblyName: ").Append(BoltAssemblyName).Append("\n");
            sb.Append("  BoltTensionForceLoadcase: ").Append(BoltTensionForceLoadcase).Append("\n");
            sb.Append("  BoltShearForceLoadcase: ").Append(BoltShearForceLoadcase).Append("\n");
            sb.Append("  BoltInteractionLoadcase: ").Append(BoltInteractionLoadcase).Append("\n");
            sb.Append("  BoltTensionForceLoadcaseId: ").Append(BoltTensionForceLoadcaseId).Append("\n");
            sb.Append("  BoltShearForceLoadcaseId: ").Append(BoltShearForceLoadcaseId).Append("\n");
            sb.Append("  BoltInteractionLoadcaseId: ").Append(BoltInteractionLoadcaseId).Append("\n");
            sb.Append("  ForcesAllLoadCases: ").Append(ForcesAllLoadCases).Append("\n");
            sb.Append("  ElementAxisY: ").Append(ElementAxisY).Append("\n");
            sb.Append("  ElementAxisZ: ").Append(ElementAxisZ).Append("\n");
            sb.Append("  UnityCheckBearing: ").Append(UnityCheckBearing).Append("\n");
            sb.Append("  CodeType: ").Append(CodeType).Append("\n");
            sb.Append("  ConnectorGripLength: ").Append(ConnectorGripLength).Append("\n");
            sb.Append("  FillerPlatesPackTh: ").Append(FillerPlatesPackTh).Append("\n");
            sb.Append("  Angle: ").Append(Angle).Append("\n");
            sb.Append("  Fub: ").Append(Fub).Append("\n");
            sb.Append("  AFtrd: ").Append(AFtrd).Append("\n");
            sb.Append("  AFvrd: ").Append(AFvrd).Append("\n");
            sb.Append("  K2: ").Append(K2).Append("\n");
            sb.Append("  AlfaV: ").Append(AlfaV).Append("\n");
            sb.Append("  TpBprd: ").Append(TpBprd).Append("\n");
            sb.Append("  FuBprd: ").Append(FuBprd).Append("\n");
            sb.Append("  DmBprd: ").Append(DmBprd).Append("\n");
            sb.Append("  GammaM2: ").Append(GammaM2).Append("\n");
            sb.Append("  DFbrd: ").Append(DFbrd).Append("\n");
            sb.Append("  ThFbrd: ").Append(ThFbrd).Append("\n");
            sb.Append("  K1: ").Append(K1).Append("\n");
            sb.Append("  AlphaB: ").Append(AlphaB).Append("\n");
            sb.Append("  GammaM3: ").Append(GammaM3).Append("\n");
            sb.Append("  MomentResistance: ").Append(MomentResistance).Append("\n");
            sb.Append("  UnityCheckBending: ").Append(UnityCheckBending).Append("\n");
            sb.Append("  BoltMomentForce: ").Append(BoltMomentForce).Append("\n");
            sb.Append("  BearingResistance: ").Append(BearingResistance).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  CheckStatus: ").Append(CheckStatus).Append("\n");
            sb.Append("  LimitCheckStatus: ").Append(LimitCheckStatus).Append("\n");
            sb.Append("  LoadCaseId: ").Append(LoadCaseId).Append("\n");
            sb.Append("  LoadCase: ").Append(LoadCase).Append("\n");
            sb.Append("  MaxUnityCheck: ").Append(MaxUnityCheck).Append("\n");
            sb.Append("  Form: ").Append(Form).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
