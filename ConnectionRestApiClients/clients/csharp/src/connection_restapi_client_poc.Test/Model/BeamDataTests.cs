/*
 * Connection Rest API 1.0
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using connection_restapi_client_poc.Model;
using connection_restapi_client_poc.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace connection_restapi_client_poc.Test.Model
{
    /// <summary>
    ///  Class for testing BeamData
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class BeamDataTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for BeamData
        //private BeamData instance;

        public BeamDataTests()
        {
            // TODO uncomment below to create an instance of BeamData
            //instance = new BeamData();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of BeamData
        /// </summary>
        [Fact]
        public void BeamDataInstanceTest()
        {
            // TODO uncomment below to test "IsType" BeamData
            //Assert.IsType<BeamData>(instance);
        }

        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }

        /// <summary>
        /// Test the property 'Plates'
        /// </summary>
        [Fact]
        public void PlatesTest()
        {
            // TODO unit test for the property 'Plates'
        }

        /// <summary>
        /// Test the property 'CrossSectionType'
        /// </summary>
        [Fact]
        public void CrossSectionTypeTest()
        {
            // TODO unit test for the property 'CrossSectionType'
        }

        /// <summary>
        /// Test the property 'MprlName'
        /// </summary>
        [Fact]
        public void MprlNameTest()
        {
            // TODO unit test for the property 'MprlName'
        }

        /// <summary>
        /// Test the property 'OriginalModelId'
        /// </summary>
        [Fact]
        public void OriginalModelIdTest()
        {
            // TODO unit test for the property 'OriginalModelId'
        }

        /// <summary>
        /// Test the property 'Cuts'
        /// </summary>
        [Fact]
        public void CutsTest()
        {
            // TODO unit test for the property 'Cuts'
        }

        /// <summary>
        /// Test the property 'IsAdded'
        /// </summary>
        [Fact]
        public void IsAddedTest()
        {
            // TODO unit test for the property 'IsAdded'
        }

        /// <summary>
        /// Test the property 'AddedMemberLength'
        /// </summary>
        [Fact]
        public void AddedMemberLengthTest()
        {
            // TODO unit test for the property 'AddedMemberLength'
        }

        /// <summary>
        /// Test the property 'IsNegativeObject'
        /// </summary>
        [Fact]
        public void IsNegativeObjectTest()
        {
            // TODO unit test for the property 'IsNegativeObject'
        }

        /// <summary>
        /// Test the property 'AddedMember'
        /// </summary>
        [Fact]
        public void AddedMemberTest()
        {
            // TODO unit test for the property 'AddedMember'
        }

        /// <summary>
        /// Test the property 'MirrorY'
        /// </summary>
        [Fact]
        public void MirrorYTest()
        {
            // TODO unit test for the property 'MirrorY'
        }

        /// <summary>
        /// Test the property 'RefLineInCenterOfGravity'
        /// </summary>
        [Fact]
        public void RefLineInCenterOfGravityTest()
        {
            // TODO unit test for the property 'RefLineInCenterOfGravity'
        }

        /// <summary>
        /// Test the property 'IsBearingMember'
        /// </summary>
        [Fact]
        public void IsBearingMemberTest()
        {
            // TODO unit test for the property 'IsBearingMember'
        }

        /// <summary>
        /// Test the property 'AutoAddCutByWorkplane'
        /// </summary>
        [Fact]
        public void AutoAddCutByWorkplaneTest()
        {
            // TODO unit test for the property 'AutoAddCutByWorkplane'
        }

        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }
    }
}
