/*
 * Connection Rest API 1.0
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = connection_restapi_client_poc.Client.OpenAPIDateConverter;

namespace connection_restapi_client_poc.Model
{
    /// <summary>
    /// FatigueCheckResDataIdeaStatiCaConnectionChecks
    /// </summary>
    [DataContract(Name = "FatigueCheckResData-IdeaStatiCa_ConnectionChecks")]
    public partial class FatigueCheckResDataIdeaStatiCaConnectionChecks : IValidatableObject
    {

        /// <summary>
        /// Gets or Sets WeldType2
        /// </summary>
        [DataMember(Name = "weldType2", EmitDefaultValue = false)]
        public DataWeldTypeCodeCIBasicTypes? WeldType2 { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="FatigueCheckResDataIdeaStatiCaConnectionChecks" /> class.
        /// </summary>
        /// <param name="stressDiagram">stressDiagram.</param>
        /// <param name="stressDiagramTau">stressDiagramTau.</param>
        /// <param name="plateUID">plateUID.</param>
        /// <param name="joinedItemName">joinedItemName.</param>
        /// <param name="weldType2">weldType2.</param>
        /// <param name="designedThickness">designedThickness.</param>
        /// <param name="normalStress">normalStress.</param>
        /// <param name="shearStress">shearStress.</param>
        /// <param name="normalStress2">normalStress2.</param>
        /// <param name="shearStress2">shearStress2.</param>
        /// <param name="plateName">plateName.</param>
        /// <param name="length">length.</param>
        /// <param name="originId">originId.</param>
        /// <param name="sectionLine">sectionLine.</param>
        /// <param name="id">id.</param>
        /// <param name="name">name.</param>
        /// <param name="checkStatus">checkStatus.</param>
        /// <param name="limitCheckStatus">limitCheckStatus.</param>
        /// <param name="loadCaseId">loadCaseId.</param>
        /// <param name="loadCase">loadCase.</param>
        /// <param name="maxUnityCheck">maxUnityCheck.</param>
        /// <param name="form">form.</param>
        public FatigueCheckResDataIdeaStatiCaConnectionChecks(List<List<double>> stressDiagram = default(List<List<double>>), List<List<double>> stressDiagramTau = default(List<List<double>>), List<int> plateUID = default(List<int>), string joinedItemName = default(string), DataWeldTypeCodeCIBasicTypes? weldType2 = default(DataWeldTypeCodeCIBasicTypes?), double designedThickness = default(double), double normalStress = default(double), double shearStress = default(double), double normalStress2 = default(double), double shearStress2 = default(double), string plateName = default(string), double length = default(double), double originId = default(double), List<List<string>> sectionLine = default(List<List<string>>), int id = default(int), string name = default(string), bool checkStatus = default(bool), bool limitCheckStatus = default(bool), int loadCaseId = default(int), string loadCase = default(string), double maxUnityCheck = default(double), string form = default(string))
        {
            this.StressDiagram = stressDiagram;
            this.StressDiagramTau = stressDiagramTau;
            this.PlateUID = plateUID;
            this.JoinedItemName = joinedItemName;
            this.WeldType2 = weldType2;
            this.DesignedThickness = designedThickness;
            this.NormalStress = normalStress;
            this.ShearStress = shearStress;
            this.NormalStress2 = normalStress2;
            this.ShearStress2 = shearStress2;
            this.PlateName = plateName;
            this.Length = length;
            this.OriginId = originId;
            this.SectionLine = sectionLine;
            this.Id = id;
            this.Name = name;
            this.CheckStatus = checkStatus;
            this.LimitCheckStatus = limitCheckStatus;
            this.LoadCaseId = loadCaseId;
            this.LoadCase = loadCase;
            this.MaxUnityCheck = maxUnityCheck;
            this.Form = form;
        }

        /// <summary>
        /// Gets or Sets StressDiagram
        /// </summary>
        [DataMember(Name = "stressDiagram", EmitDefaultValue = true)]
        public List<List<double>> StressDiagram { get; set; }

        /// <summary>
        /// Gets or Sets StressDiagramTau
        /// </summary>
        [DataMember(Name = "stressDiagramTau", EmitDefaultValue = true)]
        public List<List<double>> StressDiagramTau { get; set; }

        /// <summary>
        /// Gets or Sets PlateUID
        /// </summary>
        [DataMember(Name = "plateUID", EmitDefaultValue = true)]
        public List<int> PlateUID { get; set; }

        /// <summary>
        /// Gets or Sets JoinedItemName
        /// </summary>
        [DataMember(Name = "joinedItemName", EmitDefaultValue = true)]
        public string JoinedItemName { get; set; }

        /// <summary>
        /// Gets or Sets DesignedThickness
        /// </summary>
        [DataMember(Name = "designedThickness", EmitDefaultValue = false)]
        public double DesignedThickness { get; set; }

        /// <summary>
        /// Gets or Sets NormalStress
        /// </summary>
        [DataMember(Name = "normalStress", EmitDefaultValue = false)]
        public double NormalStress { get; set; }

        /// <summary>
        /// Gets or Sets ShearStress
        /// </summary>
        [DataMember(Name = "shearStress", EmitDefaultValue = false)]
        public double ShearStress { get; set; }

        /// <summary>
        /// Gets or Sets NormalStress2
        /// </summary>
        [DataMember(Name = "normalStress2", EmitDefaultValue = false)]
        public double NormalStress2 { get; set; }

        /// <summary>
        /// Gets or Sets ShearStress2
        /// </summary>
        [DataMember(Name = "shearStress2", EmitDefaultValue = false)]
        public double ShearStress2 { get; set; }

        /// <summary>
        /// Gets or Sets PlateName
        /// </summary>
        [DataMember(Name = "plateName", EmitDefaultValue = true)]
        public string PlateName { get; set; }

        /// <summary>
        /// Gets or Sets Length
        /// </summary>
        [DataMember(Name = "length", EmitDefaultValue = false)]
        public double Length { get; set; }

        /// <summary>
        /// Gets or Sets OriginId
        /// </summary>
        [DataMember(Name = "originId", EmitDefaultValue = false)]
        public double OriginId { get; set; }

        /// <summary>
        /// Gets or Sets SectionLine
        /// </summary>
        [DataMember(Name = "sectionLine", EmitDefaultValue = true)]
        public List<List<string>> SectionLine { get; set; }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public int Id { get; set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name = "name", EmitDefaultValue = true)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets CheckStatus
        /// </summary>
        [DataMember(Name = "checkStatus", EmitDefaultValue = true)]
        public bool CheckStatus { get; set; }

        /// <summary>
        /// Gets or Sets LimitCheckStatus
        /// </summary>
        [DataMember(Name = "limitCheckStatus", EmitDefaultValue = true)]
        public bool LimitCheckStatus { get; set; }

        /// <summary>
        /// Gets or Sets LoadCaseId
        /// </summary>
        [DataMember(Name = "loadCaseId", EmitDefaultValue = false)]
        public int LoadCaseId { get; set; }

        /// <summary>
        /// Gets or Sets LoadCase
        /// </summary>
        [DataMember(Name = "loadCase", EmitDefaultValue = true)]
        public string LoadCase { get; set; }

        /// <summary>
        /// Gets or Sets MaxUnityCheck
        /// </summary>
        [DataMember(Name = "maxUnityCheck", EmitDefaultValue = false)]
        public double MaxUnityCheck { get; set; }

        /// <summary>
        /// Gets or Sets Form
        /// </summary>
        [DataMember(Name = "form", EmitDefaultValue = true)]
        public string Form { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class FatigueCheckResDataIdeaStatiCaConnectionChecks {\n");
            sb.Append("  StressDiagram: ").Append(StressDiagram).Append("\n");
            sb.Append("  StressDiagramTau: ").Append(StressDiagramTau).Append("\n");
            sb.Append("  PlateUID: ").Append(PlateUID).Append("\n");
            sb.Append("  JoinedItemName: ").Append(JoinedItemName).Append("\n");
            sb.Append("  WeldType2: ").Append(WeldType2).Append("\n");
            sb.Append("  DesignedThickness: ").Append(DesignedThickness).Append("\n");
            sb.Append("  NormalStress: ").Append(NormalStress).Append("\n");
            sb.Append("  ShearStress: ").Append(ShearStress).Append("\n");
            sb.Append("  NormalStress2: ").Append(NormalStress2).Append("\n");
            sb.Append("  ShearStress2: ").Append(ShearStress2).Append("\n");
            sb.Append("  PlateName: ").Append(PlateName).Append("\n");
            sb.Append("  Length: ").Append(Length).Append("\n");
            sb.Append("  OriginId: ").Append(OriginId).Append("\n");
            sb.Append("  SectionLine: ").Append(SectionLine).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  CheckStatus: ").Append(CheckStatus).Append("\n");
            sb.Append("  LimitCheckStatus: ").Append(LimitCheckStatus).Append("\n");
            sb.Append("  LoadCaseId: ").Append(LoadCaseId).Append("\n");
            sb.Append("  LoadCase: ").Append(LoadCase).Append("\n");
            sb.Append("  MaxUnityCheck: ").Append(MaxUnityCheck).Append("\n");
            sb.Append("  Form: ").Append(Form).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
