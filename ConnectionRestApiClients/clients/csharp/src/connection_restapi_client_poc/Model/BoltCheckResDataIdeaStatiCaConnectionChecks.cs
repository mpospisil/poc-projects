/*
 * Connection Rest API 1.0
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = connection_restapi_client_poc.Client.OpenAPIDateConverter;

namespace connection_restapi_client_poc.Model
{
    /// <summary>
    /// BoltCheckResDataIdeaStatiCaConnectionChecks
    /// </summary>
    [DataContract(Name = "BoltCheckResData-IdeaStatiCa_ConnectionChecks")]
    public partial class BoltCheckResDataIdeaStatiCaConnectionChecks : IValidatableObject
    {

        /// <summary>
        /// Gets or Sets CodeType
        /// </summary>
        [DataMember(Name = "codeType", EmitDefaultValue = false)]
        public IdeaRSWsLibCssServiceCodeTypeCIBasicTypes? CodeType { get; set; }

        /// <summary>
        /// Gets or Sets BoltShearType
        /// </summary>
        [DataMember(Name = "boltShearType", EmitDefaultValue = false)]
        public DataBoltShearTypeCIBasicTypes? BoltShearType { get; set; }

        /// <summary>
        /// Gets or Sets InteractionCheckOutcome
        /// </summary>
        [DataMember(Name = "interactionCheckOutcome", EmitDefaultValue = false)]
        public DataCheckOutcomeCIBasicTypes? InteractionCheckOutcome { get; set; }

        /// <summary>
        /// Gets or Sets ConeBreakoutCheckType
        /// </summary>
        [DataMember(Name = "coneBreakoutCheckType", EmitDefaultValue = false)]
        public DataConeBreakoutCheckTypeCIBasicTypes? ConeBreakoutCheckType { get; set; }

        /// <summary>
        /// Gets or Sets AnchorType
        /// </summary>
        [DataMember(Name = "anchorType", EmitDefaultValue = false)]
        public DataAnchorTypeCIBasicTypes? AnchorType { get; set; }

        /// <summary>
        /// Gets or Sets BasePlateContactType
        /// </summary>
        [DataMember(Name = "basePlateContactType", EmitDefaultValue = false)]
        public DataBasePlateContactTypeCIBasicTypes? BasePlateContactType { get; set; }

        /// <summary>
        /// Gets or Sets AiscSubcode
        /// </summary>
        [DataMember(Name = "aiscSubcode", EmitDefaultValue = false)]
        public IdeaRSWsLibCssServiceAmericanSubcodeCIBasicTypes? AiscSubcode { get; set; }

        /// <summary>
        /// Gets or Sets ShearForceTransfer
        /// </summary>
        [DataMember(Name = "shearForceTransfer", EmitDefaultValue = false)]
        public DataShearForceTransferMethodsCIBasicTypes? ShearForceTransfer { get; set; }

        /// <summary>
        /// Gets or Sets ThreadType
        /// </summary>
        [DataMember(Name = "threadType", EmitDefaultValue = false)]
        public DataThreadTypeCIBasicTypes? ThreadType { get; set; }

        /// <summary>
        /// Gets or Sets AnchorTensileCalculationAUS
        /// </summary>
        [DataMember(Name = "anchorTensileCalculationAUS", EmitDefaultValue = false)]
        public DataAnchorTensileCalculationAUSCIBasicTypes? AnchorTensileCalculationAUS { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="BoltCheckResDataIdeaStatiCaConnectionChecks" /> class.
        /// </summary>
        /// <param name="boltTensionResistance">boltTensionResistance.</param>
        /// <param name="boltPunchingResistance">boltPunchingResistance.</param>
        /// <param name="boltTensionForce">boltTensionForce.</param>
        /// <param name="boltShearResistance">boltShearResistance.</param>
        /// <param name="boltShearResistanceAnchor">boltShearResistanceAnchor.</param>
        /// <param name="boltShearResistanceAnchorLeverArm">boltShearResistanceAnchorLeverArm.</param>
        /// <param name="anchorStiffness">anchorStiffness.</param>
        /// <param name="concretePryOutfailure">concretePryOutfailure.</param>
        /// <param name="concretePryOutfailureResistance">concretePryOutfailureResistance.</param>
        /// <param name="concreteEdgefailure">concreteEdgefailure.</param>
        /// <param name="concreteEdgeFailureResistance">concreteEdgeFailureResistance.</param>
        /// <param name="boltShearResistanceTension">boltShearResistanceTension.</param>
        /// <param name="boltBearingResistance">boltBearingResistance.</param>
        /// <param name="boltBearingResistancesByPlateID">boltBearingResistancesByPlateID.</param>
        /// <param name="boltShearForce">boltShearForce.</param>
        /// <param name="numberOfShearPlanes">numberOfShearPlanes.</param>
        /// <param name="boltShearForces">boltShearForces.</param>
        /// <param name="shearForcesInShearPlanes">shearForcesInShearPlanes.</param>
        /// <param name="angle">angle.</param>
        /// <param name="coneBreakoutResistance">coneBreakoutResistance.</param>
        /// <param name="unityCheckTension">unityCheckTension.</param>
        /// <param name="unityCheckTensionMax">unityCheckTensionMax.</param>
        /// <param name="unityCheckTensionRes">unityCheckTensionRes.</param>
        /// <param name="unityCheckTensionBreakout">unityCheckTensionBreakout.</param>
        /// <param name="unityCheckShear">unityCheckShear.</param>
        /// <param name="unityCheckShearMax">unityCheckShearMax.</param>
        /// <param name="unityCheckShearRes">unityCheckShearRes.</param>
        /// <param name="interactionTensionShear">interactionTensionShear.</param>
        /// <param name="interactionTensionShearSteel">interactionTensionShearSteel.</param>
        /// <param name="interactionTensionShearSteelBasic">interactionTensionShearSteelBasic.</param>
        /// <param name="interactionTensionShearConcrete">interactionTensionShearConcrete.</param>
        /// <param name="interactionTensionShearSteelConcrete">interactionTensionShearSteelConcrete.</param>
        /// <param name="interactionTensionShearAnchor">interactionTensionShearAnchor.</param>
        /// <param name="boltAssemblyName">boltAssemblyName.</param>
        /// <param name="boltTensionForceLoadcase">boltTensionForceLoadcase.</param>
        /// <param name="boltShearForceLoadcase">boltShearForceLoadcase.</param>
        /// <param name="boltInteractionLoadcase">boltInteractionLoadcase.</param>
        /// <param name="boltTensionForceLoadcaseId">boltTensionForceLoadcaseId.</param>
        /// <param name="boltShearForceLoadcaseId">boltShearForceLoadcaseId.</param>
        /// <param name="boltInteractionLoadcaseId">boltInteractionLoadcaseId.</param>
        /// <param name="forcesAllLoadCases">forcesAllLoadCases.</param>
        /// <param name="elementAxisY">elementAxisY.</param>
        /// <param name="elementAxisZ">elementAxisZ.</param>
        /// <param name="isDetailingStatusOK">isDetailingStatusOK.</param>
        /// <param name="isDetailingStatusForReportOK">isDetailingStatusForReportOK.</param>
        /// <param name="isBoltInBending">isBoltInBending.</param>
        /// <param name="anchor">anchor.</param>
        /// <param name="heff">heff.</param>
        /// <param name="unityCheckBearing">unityCheckBearing.</param>
        /// <param name="anchorShear">anchorShear.</param>
        /// <param name="slottedHole">slottedHole.</param>
        /// <param name="stiffnessAnchorOK">stiffnessAnchorOK.</param>
        /// <param name="pullOutResistance">pullOutResistance.</param>
        /// <param name="bearingAreaPullOut">bearingAreaPullOut.</param>
        /// <param name="crackedConcrete">crackedConcrete.</param>
        /// <param name="codeType">codeType.</param>
        /// <param name="connectorGripLength">connectorGripLength.</param>
        /// <param name="fillerPlatesPackTh">fillerPlatesPackTh.</param>
        /// <param name="fireTemperature">fireTemperature.</param>
        /// <param name="fireDesign">fireDesign.</param>
        /// <param name="kbTheta">kbTheta.</param>
        /// <param name="k2EN">k2EN.</param>
        /// <param name="alphaVEN">alphaVEN.</param>
        /// <param name="betaPEN">betaPEN.</param>
        /// <param name="plateThicknessForPunching">plateThicknessForPunching.</param>
        /// <param name="plateFuForPunching">plateFuForPunching.</param>
        /// <param name="boltHeadOrNutDimension">boltHeadOrNutDimension.</param>
        /// <param name="gammaM2EN">gammaM2EN.</param>
        /// <param name="gammaMfi">gammaMfi.</param>
        /// <param name="dFbrd">dFbrd.</param>
        /// <param name="thFbrd">thFbrd.</param>
        /// <param name="k1">k1.</param>
        /// <param name="kt">kt.</param>
        /// <param name="alphaB">alphaB.</param>
        /// <param name="boltPreloadingForce">boltPreloadingForce.</param>
        /// <param name="gammaM3EN">gammaM3EN.</param>
        /// <param name="ksEN">ksEN.</param>
        /// <param name="numberOfFrictionSurfaces">numberOfFrictionSurfaces.</param>
        /// <param name="acn">acn.</param>
        /// <param name="ac0">ac0.</param>
        /// <param name="n0rkc">n0rkc.</param>
        /// <param name="psis">psis.</param>
        /// <param name="gammaC">gammaC.</param>
        /// <param name="gammaInstN">gammaInstN.</param>
        /// <param name="gammaInstV">gammaInstV.</param>
        /// <param name="nrkc0">nrkc0.</param>
        /// <param name="nrkcCp">nrkcCp.</param>
        /// <param name="vrks">vrks.</param>
        /// <param name="vrksK">vrksK.</param>
        /// <param name="vrksGammaMs">vrksGammaMs.</param>
        /// <param name="vrkGammaMc">vrkGammaMc.</param>
        /// <param name="vrksAs">vrksAs.</param>
        /// <param name="vrksFuk">vrksFuk.</param>
        /// <param name="grouting">grouting.</param>
        /// <param name="vrksMrks">vrksMrks.</param>
        /// <param name="vrksAlfaM">vrksAlfaM.</param>
        /// <param name="vrksL">vrksL.</param>
        /// <param name="interactionBetaN">interactionBetaN.</param>
        /// <param name="interactionBetaV">interactionBetaV.</param>
        /// <param name="interactionAlfa">interactionAlfa.</param>
        /// <param name="v0rkc">v0rkc.</param>
        /// <param name="a0cv">a0cv.</param>
        /// <param name="decreaseFtrd">decreaseFtrd.</param>
        /// <param name="compressionResistance">compressionResistance.</param>
        /// <param name="momentResistance">momentResistance.</param>
        /// <param name="unityCheckCompression">unityCheckCompression.</param>
        /// <param name="unityCheckBending">unityCheckBending.</param>
        /// <param name="boltMomentForce">boltMomentForce.</param>
        /// <param name="bearingResistance">bearingResistance.</param>
        /// <param name="criticalTensionPreloaded">criticalTensionPreloaded.</param>
        /// <param name="criticalShearPreloaded">criticalShearPreloaded.</param>
        /// <param name="alphaBEN">alphaBEN.</param>
        /// <param name="k1EN">k1EN.</param>
        /// <param name="ktEN">ktEN.</param>
        /// <param name="isHorizontalTying">isHorizontalTying.</param>
        /// <param name="boltTensionResistanceCombined">boltTensionResistanceCombined.</param>
        /// <param name="asd">asd.</param>
        /// <param name="ab">ab.</param>
        /// <param name="fnt">fnt.</param>
        /// <param name="fnv">fnv.</param>
        /// <param name="frv">frv.</param>
        /// <param name="fntt">fntt.</param>
        /// <param name="boltTensileShearOmega">boltTensileShearOmega.</param>
        /// <param name="boltTensileShearPhi">boltTensileShearPhi.</param>
        /// <param name="boltTensileShearCombinedPhi">boltTensileShearCombinedPhi.</param>
        /// <param name="boltTensileShearCombinedOmega">boltTensileShearCombinedOmega.</param>
        /// <param name="fuBearing">fuBearing.</param>
        /// <param name="massFbrd">massFbrd.</param>
        /// <param name="boltBearingPhi">boltBearingPhi.</param>
        /// <param name="boltBearingOmega">boltBearingOmega.</param>
        /// <param name="boltSlipResPhi">boltSlipResPhi.</param>
        /// <param name="boltSlipResOmega">boltSlipResOmega.</param>
        /// <param name="fc">fc.</param>
        /// <param name="dnom">dnom.</param>
        /// <param name="alength">alength.</param>
        /// <param name="ce">ce.</param>
        /// <param name="reductionFactorTension">reductionFactorTension.</param>
        /// <param name="reductionFactorShear">reductionFactorShear.</param>
        /// <param name="slipResistanceCoeff">slipResistanceCoeff.</param>
        /// <param name="linearInteraction">linearInteraction.</param>
        /// <param name="linearInteractionConcrete">linearInteractionConcrete.</param>
        /// <param name="standOffGap">standOffGap.</param>
        /// <param name="bearingCriticalDist">bearingCriticalDist.</param>
        /// <param name="bearingForce">bearingForce.</param>
        /// <param name="bearingPlateThickness">bearingPlateThickness.</param>
        /// <param name="bearingPlateFu">bearingPlateFu.</param>
        /// <param name="concretePullOutResistance">concretePullOutResistance.</param>
        /// <param name="concreteShearBreakOutResistance">concreteShearBreakOutResistance.</param>
        /// <param name="tearOutResistance">tearOutResistance.</param>
        /// <param name="vnsbIS">vnsbIS.</param>
        /// <param name="betaLgIS">betaLgIS.</param>
        /// <param name="betaPacking">betaPacking.</param>
        /// <param name="kbIS">kbIS.</param>
        /// <param name="vnpbIS">vnpbIS.</param>
        /// <param name="preloadingForceProofStress">preloadingForceProofStress.</param>
        /// <param name="gammaMfIS">gammaMfIS.</param>
        /// <param name="vnsfIS">vnsfIS.</param>
        /// <param name="tnfIS">tnfIS.</param>
        /// <param name="boltHoleBearResRedFactor">boltHoleBearResRedFactor.</param>
        /// <param name="ptHK">ptHK.</param>
        /// <param name="psHK">psHK.</param>
        /// <param name="pbbHK">pbbHK.</param>
        /// <param name="rbnSNIP">rbnSNIP.</param>
        /// <param name="phiNsSNIP">phiNsSNIP.</param>
        /// <param name="connectorTensileArea">connectorTensileArea.</param>
        /// <param name="connectorFu">connectorFu.</param>
        /// <param name="phiBoltTensionShear">phiBoltTensionShear.</param>
        /// <param name="boltBearForces">boltBearForces.</param>
        /// <param name="connectorCoreArea">connectorCoreArea.</param>
        /// <param name="connectorGrossArea">connectorGrossArea.</param>
        /// <param name="shearReductionFactor">shearReductionFactor.</param>
        /// <param name="boltBearingForce">boltBearingForce.</param>
        /// <param name="connectorDiameter">connectorDiameter.</param>
        /// <param name="boreHoleDiameter">boreHoleDiameter.</param>
        /// <param name="connectorEffDiameter">connectorEffDiameter.</param>
        /// <param name="connectorBoreHole">connectorBoreHole.</param>
        /// <param name="boltMinEdgeDist">boltMinEdgeDist.</param>
        /// <param name="boltMinInterDist">boltMinInterDist.</param>
        /// <param name="criticalPlateThicknessTearOut">criticalPlateThicknessTearOut.</param>
        /// <param name="criticalPlateYieldStrengthTearOut">criticalPlateYieldStrengthTearOut.</param>
        /// <param name="criticalPlateTensileStrengthTearOut">criticalPlateTensileStrengthTearOut.</param>
        /// <param name="tearOutDistance">tearOutDistance.</param>
        /// <param name="phiBearing">phiBearing.</param>
        /// <param name="shearPlaneThread">shearPlaneThread.</param>
        /// <param name="detailingChecksBolt">detailingChecksBolt.</param>
        /// <param name="thinPlatesValidityEN">thinPlatesValidityEN.</param>
        /// <param name="isAnyThinPlateInConnectedPlates">isAnyThinPlateInConnectedPlates.</param>
        /// <param name="rbtSNIP">rbtSNIP.</param>
        /// <param name="rbsSNIP">rbsSNIP.</param>
        /// <param name="rbpSNIP">rbpSNIP.</param>
        /// <param name="gammaBShearSNIP">gammaBShearSNIP.</param>
        /// <param name="gammaBBearingSNIP">gammaBBearingSNIP.</param>
        /// <param name="bearingDetailingErrorsSNIP">bearingDetailingErrorsSNIP.</param>
        /// <param name="criticalPlateThickness">criticalPlateThickness.</param>
        /// <param name="connectorShearArea">connectorShearArea.</param>
        /// <param name="shearPlateThreadCoeff">shearPlateThreadCoeff.</param>
        /// <param name="boltShearForceAngles">boltShearForceAngles.</param>
        /// <param name="tearOutForce">tearOutForce.</param>
        /// <param name="shearAreaTearOut">shearAreaTearOut.</param>
        /// <param name="criticalPlateTensileStrength">criticalPlateTensileStrength.</param>
        /// <param name="criticalPlateYieldStrength">criticalPlateYieldStrength.</param>
        /// <param name="criticalPlateBearingStrength">criticalPlateBearingStrength.</param>
        /// <param name="phiU">phiU.</param>
        /// <param name="edgeDistances">edgeDistances.</param>
        /// <param name="interDistances">interDistances.</param>
        /// <param name="areHolesSlotted">areHolesSlotted.</param>
        /// <param name="boltShearType">boltShearType.</param>
        /// <param name="unityCheckShearCalc">unityCheckShearCalc.</param>
        /// <param name="unityCheckTearOut">unityCheckTearOut.</param>
        /// <param name="tearOutCoeff">tearOutCoeff.</param>
        /// <param name="bearingCoeff">bearingCoeff.</param>
        /// <param name="residualTensileResistance">residualTensileResistance.</param>
        /// <param name="isFntTableValue">isFntTableValue.</param>
        /// <param name="isFnvTableValue">isFnvTableValue.</param>
        /// <param name="phiTensileShearCombined">phiTensileShearCombined.</param>
        /// <param name="tensileStressInInteraction">tensileStressInInteraction.</param>
        /// <param name="interactionCheckOutcome">interactionCheckOutcome.</param>
        /// <param name="omegaTensileShear">omegaTensileShear.</param>
        /// <param name="omegaTensileShearCombined">omegaTensileShearCombined.</param>
        /// <param name="omegaBearing">omegaBearing.</param>
        /// <param name="fbtCHN">fbtCHN.</param>
        /// <param name="fbvCHN">fbvCHN.</param>
        /// <param name="fbcCHN">fbcCHN.</param>
        /// <param name="bearingForceBolt">bearingForceBolt.</param>
        /// <param name="bearingForceConParts">bearingForceConParts.</param>
        /// <param name="criticalBoltBearingStrength">criticalBoltBearingStrength.</param>
        /// <param name="bearingResistanceBolt">bearingResistanceBolt.</param>
        /// <param name="bearingResistanceConParts">bearingResistanceConParts.</param>
        /// <param name="criticalPlateThicknessBolt">criticalPlateThicknessBolt.</param>
        /// <param name="criticalPlateThicknessConParts">criticalPlateThicknessConParts.</param>
        /// <param name="criticalPlateBearingStrengthConParts">criticalPlateBearingStrengthConParts.</param>
        /// <param name="unityCheckBearingBolt">unityCheckBearingBolt.</param>
        /// <param name="unityCheckBearingConParts">unityCheckBearingConParts.</param>
        /// <param name="applyBearingCheck">applyBearingCheck.</param>
        /// <param name="slipCoeff">slipCoeff.</param>
        /// <param name="nti">nti.</param>
        /// <param name="coeffKh">coeffKh.</param>
        /// <param name="slipFactorCs">slipFactorCs.</param>
        /// <param name="slipCoeffKs">slipCoeffKs.</param>
        /// <param name="slipGammaHSNIP">slipGammaHSNIP.</param>
        /// <param name="slipGammaBSNIP">slipGammaBSNIP.</param>
        /// <param name="slipGammaBtensSNIP">slipGammaBtensSNIP.</param>
        /// <param name="designPreloadStrength">designPreloadStrength.</param>
        /// <param name="qbh">qbh.</param>
        /// <param name="boltPreloadedForce">boltPreloadedForce.</param>
        /// <param name="tb">tb.</param>
        /// <param name="constDu">constDu.</param>
        /// <param name="fillersFactorHf">fillersFactorHf.</param>
        /// <param name="coeffKsc">coeffKsc.</param>
        /// <param name="omegaSlipRes">omegaSlipRes.</param>
        /// <param name="preBoltHoleFactor">preBoltHoleFactor.</param>
        /// <param name="isPreloadedForceTableValue">isPreloadedForceTableValue.</param>
        /// <param name="phiMsTension">phiMsTension.</param>
        /// <param name="phiMsShear">phiMsShear.</param>
        /// <param name="phiBolt">phiBolt.</param>
        /// <param name="phiMc">phiMc.</param>
        /// <param name="psiSn">psiSn.</param>
        /// <param name="psiRen">psiRen.</param>
        /// <param name="psiEcn">psiEcn.</param>
        /// <param name="psiMN">psiMN.</param>
        /// <param name="coeffK1ConeBreakOut">coeffK1ConeBreakOut.</param>
        /// <param name="coeffK1PullOut">coeffK1PullOut.</param>
        /// <param name="coeffK5">coeffK5.</param>
        /// <param name="coeffK9">coeffK9.</param>
        /// <param name="concreteConeCheckInTensionFailed">concreteConeCheckInTensionFailed.</param>
        /// <param name="unityCheckConeTensionRes">unityCheckConeTensionRes.</param>
        /// <param name="unityCheckConcretePullOutRes">unityCheckConcretePullOutRes.</param>
        /// <param name="caMin">caMin.</param>
        /// <param name="caMax">caMax.</param>
        /// <param name="eccN">eccN.</param>
        /// <param name="acn0">acn0.</param>
        /// <param name="fyf">fyf.</param>
        /// <param name="fuf">fuf.</param>
        /// <param name="nrkcForce">nrkcForce.</param>
        /// <param name="hemb">hemb.</param>
        /// <param name="isHeffReduced">isHeffReduced.</param>
        /// <param name="heffReduction">heffReduction.</param>
        /// <param name="ftAnc">ftAnc.</param>
        /// <param name="ftBlowOut">ftBlowOut.</param>
        /// <param name="anchorTypeSize">anchorTypeSize.</param>
        /// <param name="ah">ah.</param>
        /// <param name="nblowOut">nblowOut.</param>
        /// <param name="sblowOut">sblowOut.</param>
        /// <param name="acnb">acnb.</param>
        /// <param name="psiSnb">psiSnb.</param>
        /// <param name="psiGnb">psiGnb.</param>
        /// <param name="psiEcnb">psiEcnb.</param>
        /// <param name="nrkcb0">nrkcb0.</param>
        /// <param name="eccNb">eccNb.</param>
        /// <param name="acnb0">acnb0.</param>
        /// <param name="coeffK4">coeffK4.</param>
        /// <param name="c1">c1.</param>
        /// <param name="c2">c2.</param>
        /// <param name="c1blowOut">c1blowOut.</param>
        /// <param name="c2blowOut">c2blowOut.</param>
        /// <param name="unityCheckConcreteEdgefailureRes">unityCheckConcreteEdgefailureRes.</param>
        /// <param name="coneBreakoutCheckType">coneBreakoutCheckType.</param>
        /// <param name="unityCheckConcreteShearBreakOutRes">unityCheckConcreteShearBreakOutRes.</param>
        /// <param name="concreteConeCheckInShearFailed">concreteConeCheckInShearFailed.</param>
        /// <param name="hc">hc.</param>
        /// <param name="psiRev">psiRev.</param>
        /// <param name="coeffAlpha">coeffAlpha.</param>
        /// <param name="coeffBeta">coeffBeta.</param>
        /// <param name="lf">lf.</param>
        /// <param name="shearBreakOutForce">shearBreakOutForce.</param>
        /// <param name="shearBreakOutForceFactor">shearBreakOutForceFactor.</param>
        /// <param name="criticalSegmentShearConeBreakoutForce">criticalSegmentShearConeBreakoutForce.</param>
        /// <param name="acv">acv.</param>
        /// <param name="acv0">acv0.</param>
        /// <param name="eccV">eccV.</param>
        /// <param name="sshearBreakout">sshearBreakout.</param>
        /// <param name="caReduction">caReduction.</param>
        /// <param name="psiSv">psiSv.</param>
        /// <param name="psiHv">psiHv.</param>
        /// <param name="psiEcv">psiEcv.</param>
        /// <param name="psiAlphaV">psiAlphaV.</param>
        /// <param name="vrkc0">vrkc0.</param>
        /// <param name="criticalAvcSegmentIndex">criticalAvcSegmentIndex.</param>
        /// <param name="alphaV">alphaV.</param>
        /// <param name="coeffK8">coeffK8.</param>
        /// <param name="nrkcDefault">nrkcDefault.</param>
        /// <param name="unityCheckPryOutfailureResistanceRes">unityCheckPryOutfailureResistanceRes.</param>
        /// <param name="leverArm">leverArm.</param>
        /// <param name="alphaM">alphaM.</param>
        /// <param name="wel">wel.</param>
        /// <param name="mrks0">mrks0.</param>
        /// <param name="mrks">mrks.</param>
        /// <param name="leverArmShear">leverArmShear.</param>
        /// <param name="isMortarJoint">isMortarJoint.</param>
        /// <param name="groutTh">groutTh.</param>
        /// <param name="leverArmA3">leverArmA3.</param>
        /// <param name="leverArmE1">leverArmE1.</param>
        /// <param name="anchorType">anchorType.</param>
        /// <param name="listOfAncAnchorIDs">listOfAncAnchorIDs.</param>
        /// <param name="listOfAvcAnchorIDs">listOfAvcAnchorIDs.</param>
        /// <param name="listOfBlowOutAnchorIDs">listOfBlowOutAnchorIDs.</param>
        /// <param name="basePlateContactType">basePlateContactType.</param>
        /// <param name="dh">dh.</param>
        /// <param name="washerThickness">washerThickness.</param>
        /// <param name="psiEcNx">psiEcNx.</param>
        /// <param name="psiEcNy">psiEcNy.</param>
        /// <param name="eccNx">eccNx.</param>
        /// <param name="eccNy">eccNy.</param>
        /// <param name="isCa1ReducedInAvcCalculation">isCa1ReducedInAvcCalculation.</param>
        /// <param name="areBasePlatesAnchorsOfSameType">areBasePlatesAnchorsOfSameType.</param>
        /// <param name="isAnchorInteractingWithAnchorsOfAnotherBasePlate">isAnchorInteractingWithAnchorsOfAnotherBasePlate.</param>
        /// <param name="hookLength">hookLength.</param>
        /// <param name="phiS">phiS.</param>
        /// <param name="phiC">phiC.</param>
        /// <param name="phi">phi.</param>
        /// <param name="resFactorSteelTension">resFactorSteelTension.</param>
        /// <param name="resFactorSteelShear">resFactorSteelShear.</param>
        /// <param name="resFactorCrtStrength">resFactorCrtStrength.</param>
        /// <param name="psiEdn">psiEdn.</param>
        /// <param name="anc0">anc0.</param>
        /// <param name="anc">anc.</param>
        /// <param name="futa">futa.</param>
        /// <param name="psiCn">psiCn.</param>
        /// <param name="psiCp">psiCp.</param>
        /// <param name="psiCv">psiCv.</param>
        /// <param name="avc">avc.</param>
        /// <param name="avc0">avc0.</param>
        /// <param name="abrg">abrg.</param>
        /// <param name="connectorDiameterReducedByThread">connectorDiameterReducedByThread.</param>
        /// <param name="nbr">nbr.</param>
        /// <param name="coeffKc">coeffKc.</param>
        /// <param name="lambdaA">lambdaA.</param>
        /// <param name="npr">npr.</param>
        /// <param name="sideFaceReduction">sideFaceReduction.</param>
        /// <param name="nsbr">nsbr.</param>
        /// <param name="shearBearingLength">shearBearingLength.</param>
        /// <param name="spacingShearBreakout">spacingShearBreakout.</param>
        /// <param name="caNorm">caNorm.</param>
        /// <param name="caPerp">caPerp.</param>
        /// <param name="caPerpMax">caPerpMax.</param>
        /// <param name="psiEdv">psiEdv.</param>
        /// <param name="vbr">vbr.</param>
        /// <param name="ncp">ncp.</param>
        /// <param name="coeffKcp">coeffKcp.</param>
        /// <param name="connectorFy">connectorFy.</param>
        /// <param name="phiShear">phiShear.</param>
        /// <param name="aiscSubcode">aiscSubcode.</param>
        /// <param name="offsetValueAnc0">offsetValueAnc0.</param>
        /// <param name="anchorAreaRedByThread">anchorAreaRedByThread.</param>
        /// <param name="anchorDiamRedByThread">anchorDiamRedByThread.</param>
        /// <param name="sAncMax">sAncMax.</param>
        /// <param name="sAncMin">sAncMin.</param>
        /// <param name="areStandOffAnchors">areStandOffAnchors.</param>
        /// <param name="nb">nb.</param>
        /// <param name="nsb">nsb.</param>
        /// <param name="shearForceTransfer">shearForceTransfer.</param>
        /// <param name="threadType">threadType.</param>
        /// <param name="threadReductionFactor">threadReductionFactor.</param>
        /// <param name="coeffK2CountersunkAnchors">coeffK2CountersunkAnchors.</param>
        /// <param name="nrks">nrks.</param>
        /// <param name="gammaMcEN">gammaMcEN.</param>
        /// <param name="gammaCEN">gammaCEN.</param>
        /// <param name="nrkc">nrkc.</param>
        /// <param name="nrkp">nrkp.</param>
        /// <param name="coeffK2PullOut">coeffK2PullOut.</param>
        /// <param name="nrkcb">nrkcb.</param>
        /// <param name="gammaMsTensionEN">gammaMsTensionEN.</param>
        /// <param name="gammaMsShearEN">gammaMsShearEN.</param>
        /// <param name="coeffK6">coeffK6.</param>
        /// <param name="coeffK7">coeffK7.</param>
        /// <param name="vrks0">vrks0.</param>
        /// <param name="vrkc">vrkc.</param>
        /// <param name="vrkcp">vrkcp.</param>
        /// <param name="integralNormalForce">integralNormalForce.</param>
        /// <param name="integralShearForce">integralShearForce.</param>
        /// <param name="applyConeBreakoutCheck">applyConeBreakoutCheck.</param>
        /// <param name="bearingCoeffAlphaB0">bearingCoeffAlphaB0.</param>
        /// <param name="bearingCoeffAlphaB1">bearingCoeffAlphaB1.</param>
        /// <param name="bearingCoeffK1">bearingCoeffK1.</param>
        /// <param name="punchingResistance">punchingResistance.</param>
        /// <param name="connectorHeadDiameter">connectorHeadDiameter.</param>
        /// <param name="distanceE1EN">distanceE1EN.</param>
        /// <param name="distanceE2EN">distanceE2EN.</param>
        /// <param name="spacingP1EN">spacingP1EN.</param>
        /// <param name="spacingP2EN">spacingP2EN.</param>
        /// <param name="nnpSNIP">nnpSNIP.</param>
        /// <param name="gammaNpSNIP">gammaNpSNIP.</param>
        /// <param name="gammaBtSNIP">gammaBtSNIP.</param>
        /// <param name="gammaNcSNIP">gammaNcSNIP.</param>
        /// <param name="mns0SNIP">mns0SNIP.</param>
        /// <param name="mnsSNIP">mnsSNIP.</param>
        /// <param name="phiBSNIP">phiBSNIP.</param>
        /// <param name="gammaVcpSNIP">gammaVcpSNIP.</param>
        /// <param name="rbaSNIP">rbaSNIP.</param>
        /// <param name="coeffK0SNIP">coeffK0SNIP.</param>
        /// <param name="cCrNSNIP">cCrNSNIP.</param>
        /// <param name="sCrNSNIP">sCrNSNIP.</param>
        /// <param name="coeffK3EdgeFailureSNIP">coeffK3EdgeFailureSNIP.</param>
        /// <param name="gammaVcSNIP">gammaVcSNIP.</param>
        /// <param name="coeffPryOutKSNIP">coeffPryOutKSNIP.</param>
        /// <param name="anchorTensileCalculationAUS">anchorTensileCalculationAUS.</param>
        /// <param name="s">s.</param>
        /// <param name="z">z.</param>
        /// <param name="ze">ze.</param>
        /// <param name="fy">fy.</param>
        /// <param name="fu">fu.</param>
        /// <param name="aw">aw.</param>
        /// <param name="factorAlphaA">factorAlphaA.</param>
        /// <param name="constantAplhaB">constantAplhaB.</param>
        /// <param name="lambdaN">lambdaN.</param>
        /// <param name="ds">ds.</param>
        /// <param name="varIs">varIs.</param>
        /// <param name="r">r.</param>
        /// <param name="coeffKf">coeffKf.</param>
        /// <param name="le">le.</param>
        /// <param name="factorEta">factorEta.</param>
        /// <param name="lambda">lambda.</param>
        /// <param name="factorKsi">factorKsi.</param>
        /// <param name="factorAlphaC">factorAlphaC.</param>
        /// <param name="factorKe">factorKe.</param>
        /// <param name="nc">nc.</param>
        /// <param name="ns">ns.</param>
        /// <param name="nt">nt.</param>
        /// <param name="lgap">lgap.</param>
        /// <param name="basePlateTh">basePlateTh.</param>
        /// <param name="interactionAxialLoadBending">interactionAxialLoadBending.</param>
        /// <param name="coeffN">coeffN.</param>
        /// <param name="fe">fe.</param>
        /// <param name="e">e.</param>
        /// <param name="lambdaSlenderness">lambdaSlenderness.</param>
        /// <param name="av">av.</param>
        /// <param name="phiLRFD">phiLRFD.</param>
        /// <param name="omega">omega.</param>
        /// <param name="basePlateContactTh">basePlateContactTh.</param>
        /// <param name="lcStandOff">lcStandOff.</param>
        /// <param name="connectorE">connectorE.</param>
        /// <param name="fcrStandOffFstEq">fcrStandOffFstEq.</param>
        /// <param name="fcr">fcr.</param>
        /// <param name="plasticSectionModulus">plasticSectionModulus.</param>
        /// <param name="elasticSectionModulus">elasticSectionModulus.</param>
        /// <param name="bendingResistanceLimitReached">bendingResistanceLimitReached.</param>
        /// <param name="coeffK2StandOffEN">coeffK2StandOffEN.</param>
        /// <param name="standOffNcr">standOffNcr.</param>
        /// <param name="standOffLambda">standOffLambda.</param>
        /// <param name="standOffKappa">standOffKappa.</param>
        /// <param name="standOffPhi">standOffPhi.</param>
        /// <param name="standOffAlpha">standOffAlpha.</param>
        /// <param name="wpl">wpl.</param>
        /// <param name="boltElongation">boltElongation.</param>
        /// <param name="tnbIS">tnbIS.</param>
        /// <param name="gammaMbIS">gammaMbIS.</param>
        /// <param name="gammaM0IS">gammaM0IS.</param>
        /// <param name="bearingResistanceAnchor">bearingResistanceAnchor.</param>
        /// <param name="bearingForceAnhor">bearingForceAnhor.</param>
        /// <param name="criticalPlateThicknessAnchor">criticalPlateThicknessAnchor.</param>
        /// <param name="id">id.</param>
        /// <param name="name">name.</param>
        /// <param name="checkStatus">checkStatus.</param>
        /// <param name="limitCheckStatus">limitCheckStatus.</param>
        /// <param name="loadCaseId">loadCaseId.</param>
        /// <param name="loadCase">loadCase.</param>
        /// <param name="maxUnityCheck">maxUnityCheck.</param>
        /// <param name="form">form.</param>
        public BoltCheckResDataIdeaStatiCaConnectionChecks(double boltTensionResistance = default(double), double boltPunchingResistance = default(double), double boltTensionForce = default(double), double boltShearResistance = default(double), double boltShearResistanceAnchor = default(double), double boltShearResistanceAnchorLeverArm = default(double), double anchorStiffness = default(double), bool concretePryOutfailure = default(bool), double concretePryOutfailureResistance = default(double), bool concreteEdgefailure = default(bool), double concreteEdgeFailureResistance = default(double), double boltShearResistanceTension = default(double), double boltBearingResistance = default(double), Dictionary<string, double> boltBearingResistancesByPlateID = default(Dictionary<string, double>), double boltShearForce = default(double), int numberOfShearPlanes = default(int), List<double> boltShearForces = default(List<double>), DataAutoDesignShearForcesInShearPlanesCIBasicTypes shearForcesInShearPlanes = default(DataAutoDesignShearForcesInShearPlanesCIBasicTypes), double angle = default(double), double coneBreakoutResistance = default(double), double unityCheckTension = default(double), double unityCheckTensionMax = default(double), double unityCheckTensionRes = default(double), double unityCheckTensionBreakout = default(double), double unityCheckShear = default(double), double unityCheckShearMax = default(double), double unityCheckShearRes = default(double), double interactionTensionShear = default(double), double interactionTensionShearSteel = default(double), double interactionTensionShearSteelBasic = default(double), double interactionTensionShearConcrete = default(double), double interactionTensionShearSteelConcrete = default(double), double interactionTensionShearAnchor = default(double), string boltAssemblyName = default(string), string boltTensionForceLoadcase = default(string), string boltShearForceLoadcase = default(string), string boltInteractionLoadcase = default(string), int boltTensionForceLoadcaseId = default(int), int boltShearForceLoadcaseId = default(int), int boltInteractionLoadcaseId = default(int), Dictionary<string, List<float>> forcesAllLoadCases = default(Dictionary<string, List<float>>), string elementAxisY = default(string), string elementAxisZ = default(string), bool isDetailingStatusOK = default(bool), bool isDetailingStatusForReportOK = default(bool), bool isBoltInBending = default(bool), bool anchor = default(bool), double heff = default(double), double unityCheckBearing = default(double), bool anchorShear = default(bool), bool slottedHole = default(bool), bool stiffnessAnchorOK = default(bool), double pullOutResistance = default(double), double bearingAreaPullOut = default(double), bool crackedConcrete = default(bool), IdeaRSWsLibCssServiceCodeTypeCIBasicTypes? codeType = default(IdeaRSWsLibCssServiceCodeTypeCIBasicTypes?), double connectorGripLength = default(double), double fillerPlatesPackTh = default(double), double fireTemperature = default(double), bool fireDesign = default(bool), double kbTheta = default(double), double k2EN = default(double), double alphaVEN = default(double), double betaPEN = default(double), double plateThicknessForPunching = default(double), double plateFuForPunching = default(double), double boltHeadOrNutDimension = default(double), double gammaM2EN = default(double), double gammaMfi = default(double), double dFbrd = default(double), double thFbrd = default(double), double k1 = default(double), double kt = default(double), double alphaB = default(double), double boltPreloadingForce = default(double), double gammaM3EN = default(double), double ksEN = default(double), int numberOfFrictionSurfaces = default(int), double acn = default(double), double ac0 = default(double), double n0rkc = default(double), double psis = default(double), double gammaC = default(double), double gammaInstN = default(double), double gammaInstV = default(double), double nrkc0 = default(double), double nrkcCp = default(double), double vrks = default(double), double vrksK = default(double), double vrksGammaMs = default(double), double vrkGammaMc = default(double), double vrksAs = default(double), double vrksFuk = default(double), bool grouting = default(bool), double vrksMrks = default(double), double vrksAlfaM = default(double), double vrksL = default(double), double interactionBetaN = default(double), double interactionBetaV = default(double), double interactionAlfa = default(double), double v0rkc = default(double), double a0cv = default(double), double decreaseFtrd = default(double), double compressionResistance = default(double), double momentResistance = default(double), double unityCheckCompression = default(double), double unityCheckBending = default(double), double boltMomentForce = default(double), double bearingResistance = default(double), double criticalTensionPreloaded = default(double), double criticalShearPreloaded = default(double), double alphaBEN = default(double), double k1EN = default(double), double ktEN = default(double), bool isHorizontalTying = default(bool), double boltTensionResistanceCombined = default(double), bool asd = default(bool), double ab = default(double), double fnt = default(double), double fnv = default(double), double frv = default(double), double fntt = default(double), double boltTensileShearOmega = default(double), double boltTensileShearPhi = default(double), double boltTensileShearCombinedPhi = default(double), double boltTensileShearCombinedOmega = default(double), double fuBearing = default(double), double massFbrd = default(double), double boltBearingPhi = default(double), double boltBearingOmega = default(double), double boltSlipResPhi = default(double), double boltSlipResOmega = default(double), double fc = default(double), double dnom = default(double), double alength = default(double), double ce = default(double), double reductionFactorTension = default(double), double reductionFactorShear = default(double), double slipResistanceCoeff = default(double), double linearInteraction = default(double), double linearInteractionConcrete = default(double), double standOffGap = default(double), double bearingCriticalDist = default(double), double bearingForce = default(double), double bearingPlateThickness = default(double), double bearingPlateFu = default(double), double concretePullOutResistance = default(double), double concreteShearBreakOutResistance = default(double), double tearOutResistance = default(double), double vnsbIS = default(double), double betaLgIS = default(double), double betaPacking = default(double), double kbIS = default(double), double vnpbIS = default(double), double preloadingForceProofStress = default(double), double gammaMfIS = default(double), double vnsfIS = default(double), double tnfIS = default(double), double boltHoleBearResRedFactor = default(double), double ptHK = default(double), double psHK = default(double), double pbbHK = default(double), double rbnSNIP = default(double), double phiNsSNIP = default(double), double connectorTensileArea = default(double), double connectorFu = default(double), double phiBoltTensionShear = default(double), List<double> boltBearForces = default(List<double>), double connectorCoreArea = default(double), double connectorGrossArea = default(double), double shearReductionFactor = default(double), double boltBearingForce = default(double), double connectorDiameter = default(double), double boreHoleDiameter = default(double), double connectorEffDiameter = default(double), double connectorBoreHole = default(double), double boltMinEdgeDist = default(double), double boltMinInterDist = default(double), double criticalPlateThicknessTearOut = default(double), double criticalPlateYieldStrengthTearOut = default(double), double criticalPlateTensileStrengthTearOut = default(double), double tearOutDistance = default(double), double phiBearing = default(double), bool shearPlaneThread = default(bool), DataDetailingDetailingChecksBoltCIBasicTypes detailingChecksBolt = default(DataDetailingDetailingChecksBoltCIBasicTypes), List<DataThinPlateValidityCIBasicTypes> thinPlatesValidityEN = default(List<DataThinPlateValidityCIBasicTypes>), bool isAnyThinPlateInConnectedPlates = default(bool), double rbtSNIP = default(double), double rbsSNIP = default(double), double rbpSNIP = default(double), double gammaBShearSNIP = default(double), double gammaBBearingSNIP = default(double), DataDetailingDetailingChecksBoltCIBasicTypes bearingDetailingErrorsSNIP = default(DataDetailingDetailingChecksBoltCIBasicTypes), double criticalPlateThickness = default(double), double connectorShearArea = default(double), double shearPlateThreadCoeff = default(double), List<double> boltShearForceAngles = default(List<double>), double tearOutForce = default(double), double shearAreaTearOut = default(double), double criticalPlateTensileStrength = default(double), double criticalPlateYieldStrength = default(double), double criticalPlateBearingStrength = default(double), double phiU = default(double), List<double> edgeDistances = default(List<double>), List<double> interDistances = default(List<double>), bool areHolesSlotted = default(bool), DataBoltShearTypeCIBasicTypes? boltShearType = default(DataBoltShearTypeCIBasicTypes?), double unityCheckShearCalc = default(double), double unityCheckTearOut = default(double), double tearOutCoeff = default(double), double bearingCoeff = default(double), double residualTensileResistance = default(double), bool isFntTableValue = default(bool), bool isFnvTableValue = default(bool), double phiTensileShearCombined = default(double), double tensileStressInInteraction = default(double), DataCheckOutcomeCIBasicTypes? interactionCheckOutcome = default(DataCheckOutcomeCIBasicTypes?), double omegaTensileShear = default(double), double omegaTensileShearCombined = default(double), double omegaBearing = default(double), double fbtCHN = default(double), double fbvCHN = default(double), double fbcCHN = default(double), double bearingForceBolt = default(double), double bearingForceConParts = default(double), double criticalBoltBearingStrength = default(double), double bearingResistanceBolt = default(double), double bearingResistanceConParts = default(double), double criticalPlateThicknessBolt = default(double), double criticalPlateThicknessConParts = default(double), double criticalPlateBearingStrengthConParts = default(double), double unityCheckBearingBolt = default(double), double unityCheckBearingConParts = default(double), bool applyBearingCheck = default(bool), double slipCoeff = default(double), double nti = default(double), double coeffKh = default(double), double slipFactorCs = default(double), double slipCoeffKs = default(double), double slipGammaHSNIP = default(double), double slipGammaBSNIP = default(double), double slipGammaBtensSNIP = default(double), double designPreloadStrength = default(double), double qbh = default(double), double boltPreloadedForce = default(double), double tb = default(double), double constDu = default(double), double fillersFactorHf = default(double), double coeffKsc = default(double), double omegaSlipRes = default(double), double preBoltHoleFactor = default(double), bool isPreloadedForceTableValue = default(bool), double phiMsTension = default(double), double phiMsShear = default(double), double phiBolt = default(double), double phiMc = default(double), double psiSn = default(double), double psiRen = default(double), double psiEcn = default(double), double psiMN = default(double), double coeffK1ConeBreakOut = default(double), double coeffK1PullOut = default(double), double coeffK5 = default(double), double coeffK9 = default(double), bool concreteConeCheckInTensionFailed = default(bool), double unityCheckConeTensionRes = default(double), double unityCheckConcretePullOutRes = default(double), double caMin = default(double), double caMax = default(double), double eccN = default(double), double acn0 = default(double), double fyf = default(double), double fuf = default(double), double nrkcForce = default(double), double hemb = default(double), bool isHeffReduced = default(bool), double heffReduction = default(double), double ftAnc = default(double), double ftBlowOut = default(double), double anchorTypeSize = default(double), double ah = default(double), double nblowOut = default(double), double sblowOut = default(double), double acnb = default(double), double psiSnb = default(double), double psiGnb = default(double), double psiEcnb = default(double), double nrkcb0 = default(double), double eccNb = default(double), double acnb0 = default(double), double coeffK4 = default(double), double c1 = default(double), double c2 = default(double), double c1blowOut = default(double), double c2blowOut = default(double), double unityCheckConcreteEdgefailureRes = default(double), DataConeBreakoutCheckTypeCIBasicTypes? coneBreakoutCheckType = default(DataConeBreakoutCheckTypeCIBasicTypes?), double unityCheckConcreteShearBreakOutRes = default(double), bool concreteConeCheckInShearFailed = default(bool), double hc = default(double), double psiRev = default(double), double coeffAlpha = default(double), double coeffBeta = default(double), double lf = default(double), double shearBreakOutForce = default(double), double shearBreakOutForceFactor = default(double), double criticalSegmentShearConeBreakoutForce = default(double), double acv = default(double), double acv0 = default(double), double eccV = default(double), double sshearBreakout = default(double), double caReduction = default(double), double psiSv = default(double), double psiHv = default(double), double psiEcv = default(double), double psiAlphaV = default(double), double vrkc0 = default(double), int criticalAvcSegmentIndex = default(int), double alphaV = default(double), double coeffK8 = default(double), double nrkcDefault = default(double), double unityCheckPryOutfailureResistanceRes = default(double), double leverArm = default(double), double alphaM = default(double), double wel = default(double), double mrks0 = default(double), double mrks = default(double), double leverArmShear = default(double), bool isMortarJoint = default(bool), double groutTh = default(double), double leverArmA3 = default(double), double leverArmE1 = default(double), DataAnchorTypeCIBasicTypes? anchorType = default(DataAnchorTypeCIBasicTypes?), List<int> listOfAncAnchorIDs = default(List<int>), List<int> listOfAvcAnchorIDs = default(List<int>), List<int> listOfBlowOutAnchorIDs = default(List<int>), DataBasePlateContactTypeCIBasicTypes? basePlateContactType = default(DataBasePlateContactTypeCIBasicTypes?), double dh = default(double), double washerThickness = default(double), double psiEcNx = default(double), double psiEcNy = default(double), double eccNx = default(double), double eccNy = default(double), bool isCa1ReducedInAvcCalculation = default(bool), bool areBasePlatesAnchorsOfSameType = default(bool), bool isAnchorInteractingWithAnchorsOfAnotherBasePlate = default(bool), double hookLength = default(double), double phiS = default(double), double phiC = default(double), double phi = default(double), double resFactorSteelTension = default(double), double resFactorSteelShear = default(double), double resFactorCrtStrength = default(double), double psiEdn = default(double), double anc0 = default(double), double anc = default(double), double futa = default(double), double psiCn = default(double), double psiCp = default(double), double psiCv = default(double), double avc = default(double), double avc0 = default(double), double abrg = default(double), double connectorDiameterReducedByThread = default(double), double nbr = default(double), double coeffKc = default(double), double lambdaA = default(double), double npr = default(double), double sideFaceReduction = default(double), double nsbr = default(double), double shearBearingLength = default(double), double spacingShearBreakout = default(double), double caNorm = default(double), double caPerp = default(double), double caPerpMax = default(double), double psiEdv = default(double), double vbr = default(double), double ncp = default(double), double coeffKcp = default(double), double connectorFy = default(double), double phiShear = default(double), IdeaRSWsLibCssServiceAmericanSubcodeCIBasicTypes? aiscSubcode = default(IdeaRSWsLibCssServiceAmericanSubcodeCIBasicTypes?), double offsetValueAnc0 = default(double), double anchorAreaRedByThread = default(double), double anchorDiamRedByThread = default(double), double sAncMax = default(double), double sAncMin = default(double), bool areStandOffAnchors = default(bool), double nb = default(double), double nsb = default(double), DataShearForceTransferMethodsCIBasicTypes? shearForceTransfer = default(DataShearForceTransferMethodsCIBasicTypes?), DataThreadTypeCIBasicTypes? threadType = default(DataThreadTypeCIBasicTypes?), double threadReductionFactor = default(double), double coeffK2CountersunkAnchors = default(double), double nrks = default(double), double gammaMcEN = default(double), double gammaCEN = default(double), double nrkc = default(double), double nrkp = default(double), double coeffK2PullOut = default(double), double nrkcb = default(double), double gammaMsTensionEN = default(double), double gammaMsShearEN = default(double), double coeffK6 = default(double), double coeffK7 = default(double), double vrks0 = default(double), double vrkc = default(double), double vrkcp = default(double), double integralNormalForce = default(double), double integralShearForce = default(double), bool applyConeBreakoutCheck = default(bool), double bearingCoeffAlphaB0 = default(double), double bearingCoeffAlphaB1 = default(double), double bearingCoeffK1 = default(double), double punchingResistance = default(double), double connectorHeadDiameter = default(double), double distanceE1EN = default(double), double distanceE2EN = default(double), double spacingP1EN = default(double), double spacingP2EN = default(double), double nnpSNIP = default(double), double gammaNpSNIP = default(double), double gammaBtSNIP = default(double), double gammaNcSNIP = default(double), double mns0SNIP = default(double), double mnsSNIP = default(double), double phiBSNIP = default(double), double gammaVcpSNIP = default(double), double rbaSNIP = default(double), double coeffK0SNIP = default(double), double cCrNSNIP = default(double), double sCrNSNIP = default(double), double coeffK3EdgeFailureSNIP = default(double), double gammaVcSNIP = default(double), double coeffPryOutKSNIP = default(double), DataAnchorTensileCalculationAUSCIBasicTypes? anchorTensileCalculationAUS = default(DataAnchorTensileCalculationAUSCIBasicTypes?), double s = default(double), double z = default(double), double ze = default(double), double fy = default(double), double fu = default(double), double aw = default(double), double factorAlphaA = default(double), double constantAplhaB = default(double), double lambdaN = default(double), double ds = default(double), double varIs = default(double), double r = default(double), double coeffKf = default(double), double le = default(double), double factorEta = default(double), double lambda = default(double), double factorKsi = default(double), double factorAlphaC = default(double), double factorKe = default(double), double nc = default(double), double ns = default(double), double nt = default(double), double lgap = default(double), double basePlateTh = default(double), double interactionAxialLoadBending = default(double), double coeffN = default(double), double fe = default(double), double e = default(double), double lambdaSlenderness = default(double), double av = default(double), double phiLRFD = default(double), double omega = default(double), double basePlateContactTh = default(double), double lcStandOff = default(double), double connectorE = default(double), bool fcrStandOffFstEq = default(bool), double fcr = default(double), double plasticSectionModulus = default(double), double elasticSectionModulus = default(double), bool bendingResistanceLimitReached = default(bool), double coeffK2StandOffEN = default(double), double standOffNcr = default(double), double standOffLambda = default(double), double standOffKappa = default(double), double standOffPhi = default(double), double standOffAlpha = default(double), double wpl = default(double), double boltElongation = default(double), double tnbIS = default(double), double gammaMbIS = default(double), double gammaM0IS = default(double), double bearingResistanceAnchor = default(double), double bearingForceAnhor = default(double), double criticalPlateThicknessAnchor = default(double), int id = default(int), string name = default(string), bool checkStatus = default(bool), bool limitCheckStatus = default(bool), int loadCaseId = default(int), string loadCase = default(string), double maxUnityCheck = default(double), string form = default(string))
        {
            this.BoltTensionResistance = boltTensionResistance;
            this.BoltPunchingResistance = boltPunchingResistance;
            this.BoltTensionForce = boltTensionForce;
            this.BoltShearResistance = boltShearResistance;
            this.BoltShearResistanceAnchor = boltShearResistanceAnchor;
            this.BoltShearResistanceAnchorLeverArm = boltShearResistanceAnchorLeverArm;
            this.AnchorStiffness = anchorStiffness;
            this.ConcretePryOutfailure = concretePryOutfailure;
            this.ConcretePryOutfailureResistance = concretePryOutfailureResistance;
            this.ConcreteEdgefailure = concreteEdgefailure;
            this.ConcreteEdgeFailureResistance = concreteEdgeFailureResistance;
            this.BoltShearResistanceTension = boltShearResistanceTension;
            this.BoltBearingResistance = boltBearingResistance;
            this.BoltBearingResistancesByPlateID = boltBearingResistancesByPlateID;
            this.BoltShearForce = boltShearForce;
            this.NumberOfShearPlanes = numberOfShearPlanes;
            this.BoltShearForces = boltShearForces;
            this.ShearForcesInShearPlanes = shearForcesInShearPlanes;
            this.Angle = angle;
            this.ConeBreakoutResistance = coneBreakoutResistance;
            this.UnityCheckTension = unityCheckTension;
            this.UnityCheckTensionMax = unityCheckTensionMax;
            this.UnityCheckTensionRes = unityCheckTensionRes;
            this.UnityCheckTensionBreakout = unityCheckTensionBreakout;
            this.UnityCheckShear = unityCheckShear;
            this.UnityCheckShearMax = unityCheckShearMax;
            this.UnityCheckShearRes = unityCheckShearRes;
            this.InteractionTensionShear = interactionTensionShear;
            this.InteractionTensionShearSteel = interactionTensionShearSteel;
            this.InteractionTensionShearSteelBasic = interactionTensionShearSteelBasic;
            this.InteractionTensionShearConcrete = interactionTensionShearConcrete;
            this.InteractionTensionShearSteelConcrete = interactionTensionShearSteelConcrete;
            this.InteractionTensionShearAnchor = interactionTensionShearAnchor;
            this.BoltAssemblyName = boltAssemblyName;
            this.BoltTensionForceLoadcase = boltTensionForceLoadcase;
            this.BoltShearForceLoadcase = boltShearForceLoadcase;
            this.BoltInteractionLoadcase = boltInteractionLoadcase;
            this.BoltTensionForceLoadcaseId = boltTensionForceLoadcaseId;
            this.BoltShearForceLoadcaseId = boltShearForceLoadcaseId;
            this.BoltInteractionLoadcaseId = boltInteractionLoadcaseId;
            this.ForcesAllLoadCases = forcesAllLoadCases;
            this.ElementAxisY = elementAxisY;
            this.ElementAxisZ = elementAxisZ;
            this.IsDetailingStatusOK = isDetailingStatusOK;
            this.IsDetailingStatusForReportOK = isDetailingStatusForReportOK;
            this.IsBoltInBending = isBoltInBending;
            this.Anchor = anchor;
            this.Heff = heff;
            this.UnityCheckBearing = unityCheckBearing;
            this.AnchorShear = anchorShear;
            this.SlottedHole = slottedHole;
            this.StiffnessAnchorOK = stiffnessAnchorOK;
            this.PullOutResistance = pullOutResistance;
            this.BearingAreaPullOut = bearingAreaPullOut;
            this.CrackedConcrete = crackedConcrete;
            this.CodeType = codeType;
            this.ConnectorGripLength = connectorGripLength;
            this.FillerPlatesPackTh = fillerPlatesPackTh;
            this.FireTemperature = fireTemperature;
            this.FireDesign = fireDesign;
            this.KbTheta = kbTheta;
            this.K2EN = k2EN;
            this.AlphaVEN = alphaVEN;
            this.BetaPEN = betaPEN;
            this.PlateThicknessForPunching = plateThicknessForPunching;
            this.PlateFuForPunching = plateFuForPunching;
            this.BoltHeadOrNutDimension = boltHeadOrNutDimension;
            this.GammaM2EN = gammaM2EN;
            this.GammaMfi = gammaMfi;
            this.DFbrd = dFbrd;
            this.ThFbrd = thFbrd;
            this.K1 = k1;
            this.Kt = kt;
            this.AlphaB = alphaB;
            this.BoltPreloadingForce = boltPreloadingForce;
            this.GammaM3EN = gammaM3EN;
            this.KsEN = ksEN;
            this.NumberOfFrictionSurfaces = numberOfFrictionSurfaces;
            this.Acn = acn;
            this.Ac0 = ac0;
            this.N0rkc = n0rkc;
            this.Psis = psis;
            this.GammaC = gammaC;
            this.GammaInstN = gammaInstN;
            this.GammaInstV = gammaInstV;
            this.Nrkc0 = nrkc0;
            this.NrkcCp = nrkcCp;
            this.Vrks = vrks;
            this.VrksK = vrksK;
            this.VrksGammaMs = vrksGammaMs;
            this.VrkGammaMc = vrkGammaMc;
            this.VrksAs = vrksAs;
            this.VrksFuk = vrksFuk;
            this.Grouting = grouting;
            this.VrksMrks = vrksMrks;
            this.VrksAlfaM = vrksAlfaM;
            this.VrksL = vrksL;
            this.InteractionBetaN = interactionBetaN;
            this.InteractionBetaV = interactionBetaV;
            this.InteractionAlfa = interactionAlfa;
            this.V0rkc = v0rkc;
            this.A0cv = a0cv;
            this.DecreaseFtrd = decreaseFtrd;
            this.CompressionResistance = compressionResistance;
            this.MomentResistance = momentResistance;
            this.UnityCheckCompression = unityCheckCompression;
            this.UnityCheckBending = unityCheckBending;
            this.BoltMomentForce = boltMomentForce;
            this.BearingResistance = bearingResistance;
            this.CriticalTensionPreloaded = criticalTensionPreloaded;
            this.CriticalShearPreloaded = criticalShearPreloaded;
            this.AlphaBEN = alphaBEN;
            this.K1EN = k1EN;
            this.KtEN = ktEN;
            this.IsHorizontalTying = isHorizontalTying;
            this.BoltTensionResistanceCombined = boltTensionResistanceCombined;
            this.Asd = asd;
            this.Ab = ab;
            this.Fnt = fnt;
            this.Fnv = fnv;
            this.Frv = frv;
            this.Fntt = fntt;
            this.BoltTensileShearOmega = boltTensileShearOmega;
            this.BoltTensileShearPhi = boltTensileShearPhi;
            this.BoltTensileShearCombinedPhi = boltTensileShearCombinedPhi;
            this.BoltTensileShearCombinedOmega = boltTensileShearCombinedOmega;
            this.FuBearing = fuBearing;
            this.MassFbrd = massFbrd;
            this.BoltBearingPhi = boltBearingPhi;
            this.BoltBearingOmega = boltBearingOmega;
            this.BoltSlipResPhi = boltSlipResPhi;
            this.BoltSlipResOmega = boltSlipResOmega;
            this.Fc = fc;
            this.Dnom = dnom;
            this.Alength = alength;
            this.Ce = ce;
            this.ReductionFactorTension = reductionFactorTension;
            this.ReductionFactorShear = reductionFactorShear;
            this.SlipResistanceCoeff = slipResistanceCoeff;
            this.LinearInteraction = linearInteraction;
            this.LinearInteractionConcrete = linearInteractionConcrete;
            this.StandOffGap = standOffGap;
            this.BearingCriticalDist = bearingCriticalDist;
            this.BearingForce = bearingForce;
            this.BearingPlateThickness = bearingPlateThickness;
            this.BearingPlateFu = bearingPlateFu;
            this.ConcretePullOutResistance = concretePullOutResistance;
            this.ConcreteShearBreakOutResistance = concreteShearBreakOutResistance;
            this.TearOutResistance = tearOutResistance;
            this.VnsbIS = vnsbIS;
            this.BetaLgIS = betaLgIS;
            this.BetaPacking = betaPacking;
            this.KbIS = kbIS;
            this.VnpbIS = vnpbIS;
            this.PreloadingForceProofStress = preloadingForceProofStress;
            this.GammaMfIS = gammaMfIS;
            this.VnsfIS = vnsfIS;
            this.TnfIS = tnfIS;
            this.BoltHoleBearResRedFactor = boltHoleBearResRedFactor;
            this.PtHK = ptHK;
            this.PsHK = psHK;
            this.PbbHK = pbbHK;
            this.RbnSNIP = rbnSNIP;
            this.PhiNsSNIP = phiNsSNIP;
            this.ConnectorTensileArea = connectorTensileArea;
            this.ConnectorFu = connectorFu;
            this.PhiBoltTensionShear = phiBoltTensionShear;
            this.BoltBearForces = boltBearForces;
            this.ConnectorCoreArea = connectorCoreArea;
            this.ConnectorGrossArea = connectorGrossArea;
            this.ShearReductionFactor = shearReductionFactor;
            this.BoltBearingForce = boltBearingForce;
            this.ConnectorDiameter = connectorDiameter;
            this.BoreHoleDiameter = boreHoleDiameter;
            this.ConnectorEffDiameter = connectorEffDiameter;
            this.ConnectorBoreHole = connectorBoreHole;
            this.BoltMinEdgeDist = boltMinEdgeDist;
            this.BoltMinInterDist = boltMinInterDist;
            this.CriticalPlateThicknessTearOut = criticalPlateThicknessTearOut;
            this.CriticalPlateYieldStrengthTearOut = criticalPlateYieldStrengthTearOut;
            this.CriticalPlateTensileStrengthTearOut = criticalPlateTensileStrengthTearOut;
            this.TearOutDistance = tearOutDistance;
            this.PhiBearing = phiBearing;
            this.ShearPlaneThread = shearPlaneThread;
            this.DetailingChecksBolt = detailingChecksBolt;
            this.ThinPlatesValidityEN = thinPlatesValidityEN;
            this.IsAnyThinPlateInConnectedPlates = isAnyThinPlateInConnectedPlates;
            this.RbtSNIP = rbtSNIP;
            this.RbsSNIP = rbsSNIP;
            this.RbpSNIP = rbpSNIP;
            this.GammaBShearSNIP = gammaBShearSNIP;
            this.GammaBBearingSNIP = gammaBBearingSNIP;
            this.BearingDetailingErrorsSNIP = bearingDetailingErrorsSNIP;
            this.CriticalPlateThickness = criticalPlateThickness;
            this.ConnectorShearArea = connectorShearArea;
            this.ShearPlateThreadCoeff = shearPlateThreadCoeff;
            this.BoltShearForceAngles = boltShearForceAngles;
            this.TearOutForce = tearOutForce;
            this.ShearAreaTearOut = shearAreaTearOut;
            this.CriticalPlateTensileStrength = criticalPlateTensileStrength;
            this.CriticalPlateYieldStrength = criticalPlateYieldStrength;
            this.CriticalPlateBearingStrength = criticalPlateBearingStrength;
            this.PhiU = phiU;
            this.EdgeDistances = edgeDistances;
            this.InterDistances = interDistances;
            this.AreHolesSlotted = areHolesSlotted;
            this.BoltShearType = boltShearType;
            this.UnityCheckShearCalc = unityCheckShearCalc;
            this.UnityCheckTearOut = unityCheckTearOut;
            this.TearOutCoeff = tearOutCoeff;
            this.BearingCoeff = bearingCoeff;
            this.ResidualTensileResistance = residualTensileResistance;
            this.IsFntTableValue = isFntTableValue;
            this.IsFnvTableValue = isFnvTableValue;
            this.PhiTensileShearCombined = phiTensileShearCombined;
            this.TensileStressInInteraction = tensileStressInInteraction;
            this.InteractionCheckOutcome = interactionCheckOutcome;
            this.OmegaTensileShear = omegaTensileShear;
            this.OmegaTensileShearCombined = omegaTensileShearCombined;
            this.OmegaBearing = omegaBearing;
            this.FbtCHN = fbtCHN;
            this.FbvCHN = fbvCHN;
            this.FbcCHN = fbcCHN;
            this.BearingForceBolt = bearingForceBolt;
            this.BearingForceConParts = bearingForceConParts;
            this.CriticalBoltBearingStrength = criticalBoltBearingStrength;
            this.BearingResistanceBolt = bearingResistanceBolt;
            this.BearingResistanceConParts = bearingResistanceConParts;
            this.CriticalPlateThicknessBolt = criticalPlateThicknessBolt;
            this.CriticalPlateThicknessConParts = criticalPlateThicknessConParts;
            this.CriticalPlateBearingStrengthConParts = criticalPlateBearingStrengthConParts;
            this.UnityCheckBearingBolt = unityCheckBearingBolt;
            this.UnityCheckBearingConParts = unityCheckBearingConParts;
            this.ApplyBearingCheck = applyBearingCheck;
            this.SlipCoeff = slipCoeff;
            this.Nti = nti;
            this.CoeffKh = coeffKh;
            this.SlipFactorCs = slipFactorCs;
            this.SlipCoeffKs = slipCoeffKs;
            this.SlipGammaHSNIP = slipGammaHSNIP;
            this.SlipGammaBSNIP = slipGammaBSNIP;
            this.SlipGammaBtensSNIP = slipGammaBtensSNIP;
            this.DesignPreloadStrength = designPreloadStrength;
            this.Qbh = qbh;
            this.BoltPreloadedForce = boltPreloadedForce;
            this.Tb = tb;
            this.ConstDu = constDu;
            this.FillersFactorHf = fillersFactorHf;
            this.CoeffKsc = coeffKsc;
            this.OmegaSlipRes = omegaSlipRes;
            this.PreBoltHoleFactor = preBoltHoleFactor;
            this.IsPreloadedForceTableValue = isPreloadedForceTableValue;
            this.PhiMsTension = phiMsTension;
            this.PhiMsShear = phiMsShear;
            this.PhiBolt = phiBolt;
            this.PhiMc = phiMc;
            this.PsiSn = psiSn;
            this.PsiRen = psiRen;
            this.PsiEcn = psiEcn;
            this.PsiMN = psiMN;
            this.CoeffK1ConeBreakOut = coeffK1ConeBreakOut;
            this.CoeffK1PullOut = coeffK1PullOut;
            this.CoeffK5 = coeffK5;
            this.CoeffK9 = coeffK9;
            this.ConcreteConeCheckInTensionFailed = concreteConeCheckInTensionFailed;
            this.UnityCheckConeTensionRes = unityCheckConeTensionRes;
            this.UnityCheckConcretePullOutRes = unityCheckConcretePullOutRes;
            this.CaMin = caMin;
            this.CaMax = caMax;
            this.EccN = eccN;
            this.Acn0 = acn0;
            this.Fyf = fyf;
            this.Fuf = fuf;
            this.NrkcForce = nrkcForce;
            this.Hemb = hemb;
            this.IsHeffReduced = isHeffReduced;
            this.HeffReduction = heffReduction;
            this.FtAnc = ftAnc;
            this.FtBlowOut = ftBlowOut;
            this.AnchorTypeSize = anchorTypeSize;
            this.Ah = ah;
            this.NblowOut = nblowOut;
            this.SblowOut = sblowOut;
            this.Acnb = acnb;
            this.PsiSnb = psiSnb;
            this.PsiGnb = psiGnb;
            this.PsiEcnb = psiEcnb;
            this.Nrkcb0 = nrkcb0;
            this.EccNb = eccNb;
            this.Acnb0 = acnb0;
            this.CoeffK4 = coeffK4;
            this.C1 = c1;
            this.C2 = c2;
            this.C1blowOut = c1blowOut;
            this.C2blowOut = c2blowOut;
            this.UnityCheckConcreteEdgefailureRes = unityCheckConcreteEdgefailureRes;
            this.ConeBreakoutCheckType = coneBreakoutCheckType;
            this.UnityCheckConcreteShearBreakOutRes = unityCheckConcreteShearBreakOutRes;
            this.ConcreteConeCheckInShearFailed = concreteConeCheckInShearFailed;
            this.Hc = hc;
            this.PsiRev = psiRev;
            this.CoeffAlpha = coeffAlpha;
            this.CoeffBeta = coeffBeta;
            this.Lf = lf;
            this.ShearBreakOutForce = shearBreakOutForce;
            this.ShearBreakOutForceFactor = shearBreakOutForceFactor;
            this.CriticalSegmentShearConeBreakoutForce = criticalSegmentShearConeBreakoutForce;
            this.Acv = acv;
            this.Acv0 = acv0;
            this.EccV = eccV;
            this.SshearBreakout = sshearBreakout;
            this.CaReduction = caReduction;
            this.PsiSv = psiSv;
            this.PsiHv = psiHv;
            this.PsiEcv = psiEcv;
            this.PsiAlphaV = psiAlphaV;
            this.Vrkc0 = vrkc0;
            this.CriticalAvcSegmentIndex = criticalAvcSegmentIndex;
            this.AlphaV = alphaV;
            this.CoeffK8 = coeffK8;
            this.NrkcDefault = nrkcDefault;
            this.UnityCheckPryOutfailureResistanceRes = unityCheckPryOutfailureResistanceRes;
            this.LeverArm = leverArm;
            this.AlphaM = alphaM;
            this.Wel = wel;
            this.Mrks0 = mrks0;
            this.Mrks = mrks;
            this.LeverArmShear = leverArmShear;
            this.IsMortarJoint = isMortarJoint;
            this.GroutTh = groutTh;
            this.LeverArmA3 = leverArmA3;
            this.LeverArmE1 = leverArmE1;
            this.AnchorType = anchorType;
            this.ListOfAncAnchorIDs = listOfAncAnchorIDs;
            this.ListOfAvcAnchorIDs = listOfAvcAnchorIDs;
            this.ListOfBlowOutAnchorIDs = listOfBlowOutAnchorIDs;
            this.BasePlateContactType = basePlateContactType;
            this.Dh = dh;
            this.WasherThickness = washerThickness;
            this.PsiEcNx = psiEcNx;
            this.PsiEcNy = psiEcNy;
            this.EccNx = eccNx;
            this.EccNy = eccNy;
            this.IsCa1ReducedInAvcCalculation = isCa1ReducedInAvcCalculation;
            this.AreBasePlatesAnchorsOfSameType = areBasePlatesAnchorsOfSameType;
            this.IsAnchorInteractingWithAnchorsOfAnotherBasePlate = isAnchorInteractingWithAnchorsOfAnotherBasePlate;
            this.HookLength = hookLength;
            this.PhiS = phiS;
            this.PhiC = phiC;
            this.Phi = phi;
            this.ResFactorSteelTension = resFactorSteelTension;
            this.ResFactorSteelShear = resFactorSteelShear;
            this.ResFactorCrtStrength = resFactorCrtStrength;
            this.PsiEdn = psiEdn;
            this.Anc0 = anc0;
            this.Anc = anc;
            this.Futa = futa;
            this.PsiCn = psiCn;
            this.PsiCp = psiCp;
            this.PsiCv = psiCv;
            this.Avc = avc;
            this.Avc0 = avc0;
            this.Abrg = abrg;
            this.ConnectorDiameterReducedByThread = connectorDiameterReducedByThread;
            this.Nbr = nbr;
            this.CoeffKc = coeffKc;
            this.LambdaA = lambdaA;
            this.Npr = npr;
            this.SideFaceReduction = sideFaceReduction;
            this.Nsbr = nsbr;
            this.ShearBearingLength = shearBearingLength;
            this.SpacingShearBreakout = spacingShearBreakout;
            this.CaNorm = caNorm;
            this.CaPerp = caPerp;
            this.CaPerpMax = caPerpMax;
            this.PsiEdv = psiEdv;
            this.Vbr = vbr;
            this.Ncp = ncp;
            this.CoeffKcp = coeffKcp;
            this.ConnectorFy = connectorFy;
            this.PhiShear = phiShear;
            this.AiscSubcode = aiscSubcode;
            this.OffsetValueAnc0 = offsetValueAnc0;
            this.AnchorAreaRedByThread = anchorAreaRedByThread;
            this.AnchorDiamRedByThread = anchorDiamRedByThread;
            this.SAncMax = sAncMax;
            this.SAncMin = sAncMin;
            this.AreStandOffAnchors = areStandOffAnchors;
            this.Nb = nb;
            this.Nsb = nsb;
            this.ShearForceTransfer = shearForceTransfer;
            this.ThreadType = threadType;
            this.ThreadReductionFactor = threadReductionFactor;
            this.CoeffK2CountersunkAnchors = coeffK2CountersunkAnchors;
            this.Nrks = nrks;
            this.GammaMcEN = gammaMcEN;
            this.GammaCEN = gammaCEN;
            this.Nrkc = nrkc;
            this.Nrkp = nrkp;
            this.CoeffK2PullOut = coeffK2PullOut;
            this.Nrkcb = nrkcb;
            this.GammaMsTensionEN = gammaMsTensionEN;
            this.GammaMsShearEN = gammaMsShearEN;
            this.CoeffK6 = coeffK6;
            this.CoeffK7 = coeffK7;
            this.Vrks0 = vrks0;
            this.Vrkc = vrkc;
            this.Vrkcp = vrkcp;
            this.IntegralNormalForce = integralNormalForce;
            this.IntegralShearForce = integralShearForce;
            this.ApplyConeBreakoutCheck = applyConeBreakoutCheck;
            this.BearingCoeffAlphaB0 = bearingCoeffAlphaB0;
            this.BearingCoeffAlphaB1 = bearingCoeffAlphaB1;
            this.BearingCoeffK1 = bearingCoeffK1;
            this.PunchingResistance = punchingResistance;
            this.ConnectorHeadDiameter = connectorHeadDiameter;
            this.DistanceE1EN = distanceE1EN;
            this.DistanceE2EN = distanceE2EN;
            this.SpacingP1EN = spacingP1EN;
            this.SpacingP2EN = spacingP2EN;
            this.NnpSNIP = nnpSNIP;
            this.GammaNpSNIP = gammaNpSNIP;
            this.GammaBtSNIP = gammaBtSNIP;
            this.GammaNcSNIP = gammaNcSNIP;
            this.Mns0SNIP = mns0SNIP;
            this.MnsSNIP = mnsSNIP;
            this.PhiBSNIP = phiBSNIP;
            this.GammaVcpSNIP = gammaVcpSNIP;
            this.RbaSNIP = rbaSNIP;
            this.CoeffK0SNIP = coeffK0SNIP;
            this.CCrNSNIP = cCrNSNIP;
            this.SCrNSNIP = sCrNSNIP;
            this.CoeffK3EdgeFailureSNIP = coeffK3EdgeFailureSNIP;
            this.GammaVcSNIP = gammaVcSNIP;
            this.CoeffPryOutKSNIP = coeffPryOutKSNIP;
            this.AnchorTensileCalculationAUS = anchorTensileCalculationAUS;
            this.S = s;
            this.Z = z;
            this.Ze = ze;
            this.Fy = fy;
            this.Fu = fu;
            this.Aw = aw;
            this.FactorAlphaA = factorAlphaA;
            this.ConstantAplhaB = constantAplhaB;
            this.LambdaN = lambdaN;
            this.Ds = ds;
            this.Is = varIs;
            this.R = r;
            this.CoeffKf = coeffKf;
            this.Le = le;
            this.FactorEta = factorEta;
            this.Lambda = lambda;
            this.FactorKsi = factorKsi;
            this.FactorAlphaC = factorAlphaC;
            this.FactorKe = factorKe;
            this.Nc = nc;
            this.Ns = ns;
            this.Nt = nt;
            this.Lgap = lgap;
            this.BasePlateTh = basePlateTh;
            this.InteractionAxialLoadBending = interactionAxialLoadBending;
            this.CoeffN = coeffN;
            this.Fe = fe;
            this.E = e;
            this.LambdaSlenderness = lambdaSlenderness;
            this.Av = av;
            this.PhiLRFD = phiLRFD;
            this.Omega = omega;
            this.BasePlateContactTh = basePlateContactTh;
            this.LcStandOff = lcStandOff;
            this.ConnectorE = connectorE;
            this.FcrStandOffFstEq = fcrStandOffFstEq;
            this.Fcr = fcr;
            this.PlasticSectionModulus = plasticSectionModulus;
            this.ElasticSectionModulus = elasticSectionModulus;
            this.BendingResistanceLimitReached = bendingResistanceLimitReached;
            this.CoeffK2StandOffEN = coeffK2StandOffEN;
            this.StandOffNcr = standOffNcr;
            this.StandOffLambda = standOffLambda;
            this.StandOffKappa = standOffKappa;
            this.StandOffPhi = standOffPhi;
            this.StandOffAlpha = standOffAlpha;
            this.Wpl = wpl;
            this.BoltElongation = boltElongation;
            this.TnbIS = tnbIS;
            this.GammaMbIS = gammaMbIS;
            this.GammaM0IS = gammaM0IS;
            this.BearingResistanceAnchor = bearingResistanceAnchor;
            this.BearingForceAnhor = bearingForceAnhor;
            this.CriticalPlateThicknessAnchor = criticalPlateThicknessAnchor;
            this.Id = id;
            this.Name = name;
            this.CheckStatus = checkStatus;
            this.LimitCheckStatus = limitCheckStatus;
            this.LoadCaseId = loadCaseId;
            this.LoadCase = loadCase;
            this.MaxUnityCheck = maxUnityCheck;
            this.Form = form;
        }

        /// <summary>
        /// Gets or Sets BoltTensionResistance
        /// </summary>
        [DataMember(Name = "boltTensionResistance", EmitDefaultValue = false)]
        public double BoltTensionResistance { get; set; }

        /// <summary>
        /// Gets or Sets BoltPunchingResistance
        /// </summary>
        [DataMember(Name = "boltPunchingResistance", EmitDefaultValue = false)]
        public double BoltPunchingResistance { get; set; }

        /// <summary>
        /// Gets or Sets BoltTensionForce
        /// </summary>
        [DataMember(Name = "boltTensionForce", EmitDefaultValue = false)]
        public double BoltTensionForce { get; set; }

        /// <summary>
        /// Gets or Sets BoltShearResistance
        /// </summary>
        [DataMember(Name = "boltShearResistance", EmitDefaultValue = false)]
        public double BoltShearResistance { get; set; }

        /// <summary>
        /// Gets or Sets BoltShearResistanceAnchor
        /// </summary>
        [DataMember(Name = "boltShearResistanceAnchor", EmitDefaultValue = false)]
        public double BoltShearResistanceAnchor { get; set; }

        /// <summary>
        /// Gets or Sets BoltShearResistanceAnchorLeverArm
        /// </summary>
        [DataMember(Name = "boltShearResistanceAnchorLeverArm", EmitDefaultValue = false)]
        public double BoltShearResistanceAnchorLeverArm { get; set; }

        /// <summary>
        /// Gets or Sets AnchorStiffness
        /// </summary>
        [DataMember(Name = "anchorStiffness", EmitDefaultValue = false)]
        public double AnchorStiffness { get; set; }

        /// <summary>
        /// Gets or Sets ConcretePryOutfailure
        /// </summary>
        [DataMember(Name = "concretePryOutfailure", EmitDefaultValue = true)]
        public bool ConcretePryOutfailure { get; set; }

        /// <summary>
        /// Gets or Sets ConcretePryOutfailureResistance
        /// </summary>
        [DataMember(Name = "concretePryOutfailureResistance", EmitDefaultValue = false)]
        public double ConcretePryOutfailureResistance { get; set; }

        /// <summary>
        /// Gets or Sets ConcreteEdgefailure
        /// </summary>
        [DataMember(Name = "concreteEdgefailure", EmitDefaultValue = true)]
        public bool ConcreteEdgefailure { get; set; }

        /// <summary>
        /// Gets or Sets ConcreteEdgeFailureResistance
        /// </summary>
        [DataMember(Name = "concreteEdgeFailureResistance", EmitDefaultValue = false)]
        public double ConcreteEdgeFailureResistance { get; set; }

        /// <summary>
        /// Gets or Sets BoltShearResistanceTension
        /// </summary>
        [DataMember(Name = "boltShearResistanceTension", EmitDefaultValue = false)]
        public double BoltShearResistanceTension { get; set; }

        /// <summary>
        /// Gets or Sets BoltBearingResistance
        /// </summary>
        [DataMember(Name = "boltBearingResistance", EmitDefaultValue = false)]
        public double BoltBearingResistance { get; set; }

        /// <summary>
        /// Gets or Sets BoltBearingResistancesByPlateID
        /// </summary>
        [DataMember(Name = "boltBearingResistancesByPlateID", EmitDefaultValue = true)]
        public Dictionary<string, double> BoltBearingResistancesByPlateID { get; set; }

        /// <summary>
        /// Gets or Sets BoltShearForce
        /// </summary>
        [DataMember(Name = "boltShearForce", EmitDefaultValue = false)]
        public double BoltShearForce { get; set; }

        /// <summary>
        /// Gets or Sets NumberOfShearPlanes
        /// </summary>
        [DataMember(Name = "numberOfShearPlanes", EmitDefaultValue = false)]
        public int NumberOfShearPlanes { get; set; }

        /// <summary>
        /// Gets or Sets BoltShearForces
        /// </summary>
        [DataMember(Name = "boltShearForces", EmitDefaultValue = true)]
        public List<double> BoltShearForces { get; set; }

        /// <summary>
        /// Gets or Sets ShearForcesInShearPlanes
        /// </summary>
        [DataMember(Name = "shearForcesInShearPlanes", EmitDefaultValue = false)]
        public DataAutoDesignShearForcesInShearPlanesCIBasicTypes ShearForcesInShearPlanes { get; set; }

        /// <summary>
        /// Gets or Sets Angle
        /// </summary>
        [DataMember(Name = "angle", EmitDefaultValue = false)]
        public double Angle { get; set; }

        /// <summary>
        /// Gets or Sets ConeBreakoutResistance
        /// </summary>
        [DataMember(Name = "coneBreakoutResistance", EmitDefaultValue = false)]
        public double ConeBreakoutResistance { get; set; }

        /// <summary>
        /// Gets or Sets UnityCheckTension
        /// </summary>
        [DataMember(Name = "unityCheckTension", EmitDefaultValue = false)]
        public double UnityCheckTension { get; set; }

        /// <summary>
        /// Gets or Sets UnityCheckTensionMax
        /// </summary>
        [DataMember(Name = "unityCheckTensionMax", EmitDefaultValue = false)]
        public double UnityCheckTensionMax { get; set; }

        /// <summary>
        /// Gets or Sets UnityCheckTensionRes
        /// </summary>
        [DataMember(Name = "unityCheckTensionRes", EmitDefaultValue = false)]
        public double UnityCheckTensionRes { get; set; }

        /// <summary>
        /// Gets or Sets UnityCheckTensionBreakout
        /// </summary>
        [DataMember(Name = "unityCheckTensionBreakout", EmitDefaultValue = false)]
        public double UnityCheckTensionBreakout { get; set; }

        /// <summary>
        /// Gets or Sets UnityCheckShear
        /// </summary>
        [DataMember(Name = "unityCheckShear", EmitDefaultValue = false)]
        public double UnityCheckShear { get; set; }

        /// <summary>
        /// Gets or Sets UnityCheckShearMax
        /// </summary>
        [DataMember(Name = "unityCheckShearMax", EmitDefaultValue = false)]
        public double UnityCheckShearMax { get; set; }

        /// <summary>
        /// Gets or Sets UnityCheckShearRes
        /// </summary>
        [DataMember(Name = "unityCheckShearRes", EmitDefaultValue = false)]
        public double UnityCheckShearRes { get; set; }

        /// <summary>
        /// Gets or Sets InteractionTensionShear
        /// </summary>
        [DataMember(Name = "interactionTensionShear", EmitDefaultValue = false)]
        public double InteractionTensionShear { get; set; }

        /// <summary>
        /// Gets or Sets InteractionTensionShearSteel
        /// </summary>
        [DataMember(Name = "interactionTensionShearSteel", EmitDefaultValue = false)]
        public double InteractionTensionShearSteel { get; set; }

        /// <summary>
        /// Gets or Sets InteractionTensionShearSteelBasic
        /// </summary>
        [DataMember(Name = "interactionTensionShearSteelBasic", EmitDefaultValue = false)]
        public double InteractionTensionShearSteelBasic { get; set; }

        /// <summary>
        /// Gets or Sets InteractionTensionShearConcrete
        /// </summary>
        [DataMember(Name = "interactionTensionShearConcrete", EmitDefaultValue = false)]
        public double InteractionTensionShearConcrete { get; set; }

        /// <summary>
        /// Gets or Sets InteractionTensionShearSteelConcrete
        /// </summary>
        [DataMember(Name = "interactionTensionShearSteelConcrete", EmitDefaultValue = false)]
        public double InteractionTensionShearSteelConcrete { get; set; }

        /// <summary>
        /// Gets or Sets InteractionTensionShearAnchor
        /// </summary>
        [DataMember(Name = "interactionTensionShearAnchor", EmitDefaultValue = false)]
        public double InteractionTensionShearAnchor { get; set; }

        /// <summary>
        /// Gets or Sets BoltAssemblyName
        /// </summary>
        [DataMember(Name = "boltAssemblyName", EmitDefaultValue = true)]
        public string BoltAssemblyName { get; set; }

        /// <summary>
        /// Gets or Sets BoltTensionForceLoadcase
        /// </summary>
        [DataMember(Name = "boltTensionForceLoadcase", EmitDefaultValue = true)]
        public string BoltTensionForceLoadcase { get; set; }

        /// <summary>
        /// Gets or Sets BoltShearForceLoadcase
        /// </summary>
        [DataMember(Name = "boltShearForceLoadcase", EmitDefaultValue = true)]
        public string BoltShearForceLoadcase { get; set; }

        /// <summary>
        /// Gets or Sets BoltInteractionLoadcase
        /// </summary>
        [DataMember(Name = "boltInteractionLoadcase", EmitDefaultValue = true)]
        public string BoltInteractionLoadcase { get; set; }

        /// <summary>
        /// Gets or Sets BoltTensionForceLoadcaseId
        /// </summary>
        [DataMember(Name = "boltTensionForceLoadcaseId", EmitDefaultValue = false)]
        public int BoltTensionForceLoadcaseId { get; set; }

        /// <summary>
        /// Gets or Sets BoltShearForceLoadcaseId
        /// </summary>
        [DataMember(Name = "boltShearForceLoadcaseId", EmitDefaultValue = false)]
        public int BoltShearForceLoadcaseId { get; set; }

        /// <summary>
        /// Gets or Sets BoltInteractionLoadcaseId
        /// </summary>
        [DataMember(Name = "boltInteractionLoadcaseId", EmitDefaultValue = false)]
        public int BoltInteractionLoadcaseId { get; set; }

        /// <summary>
        /// Gets or Sets ForcesAllLoadCases
        /// </summary>
        [DataMember(Name = "forcesAllLoadCases", EmitDefaultValue = true)]
        public Dictionary<string, List<float>> ForcesAllLoadCases { get; set; }

        /// <summary>
        /// Gets or Sets ElementAxisY
        /// </summary>
        [DataMember(Name = "elementAxisY", EmitDefaultValue = false)]
        public string ElementAxisY { get; set; }

        /// <summary>
        /// Gets or Sets ElementAxisZ
        /// </summary>
        [DataMember(Name = "elementAxisZ", EmitDefaultValue = false)]
        public string ElementAxisZ { get; set; }

        /// <summary>
        /// Gets or Sets IsDetailingStatusOK
        /// </summary>
        [DataMember(Name = "isDetailingStatusOK", EmitDefaultValue = true)]
        public bool IsDetailingStatusOK { get; set; }

        /// <summary>
        /// Gets or Sets IsDetailingStatusForReportOK
        /// </summary>
        [DataMember(Name = "isDetailingStatusForReportOK", EmitDefaultValue = true)]
        public bool IsDetailingStatusForReportOK { get; set; }

        /// <summary>
        /// Gets or Sets IsBoltInBending
        /// </summary>
        [DataMember(Name = "isBoltInBending", EmitDefaultValue = true)]
        public bool IsBoltInBending { get; set; }

        /// <summary>
        /// Gets or Sets Anchor
        /// </summary>
        [DataMember(Name = "anchor", EmitDefaultValue = true)]
        public bool Anchor { get; set; }

        /// <summary>
        /// Gets or Sets Heff
        /// </summary>
        [DataMember(Name = "heff", EmitDefaultValue = false)]
        public double Heff { get; set; }

        /// <summary>
        /// Gets or Sets UnityCheckBearing
        /// </summary>
        [DataMember(Name = "unityCheckBearing", EmitDefaultValue = false)]
        public double UnityCheckBearing { get; set; }

        /// <summary>
        /// Gets or Sets AnchorShear
        /// </summary>
        [DataMember(Name = "anchorShear", EmitDefaultValue = true)]
        public bool AnchorShear { get; set; }

        /// <summary>
        /// Gets or Sets SlottedHole
        /// </summary>
        [DataMember(Name = "slottedHole", EmitDefaultValue = true)]
        public bool SlottedHole { get; set; }

        /// <summary>
        /// Gets or Sets StiffnessAnchorOK
        /// </summary>
        [DataMember(Name = "stiffnessAnchorOK", EmitDefaultValue = true)]
        public bool StiffnessAnchorOK { get; set; }

        /// <summary>
        /// Gets or Sets PullOutResistance
        /// </summary>
        [DataMember(Name = "pullOutResistance", EmitDefaultValue = false)]
        public double PullOutResistance { get; set; }

        /// <summary>
        /// Gets or Sets BearingAreaPullOut
        /// </summary>
        [DataMember(Name = "bearingAreaPullOut", EmitDefaultValue = false)]
        public double BearingAreaPullOut { get; set; }

        /// <summary>
        /// Gets or Sets CrackedConcrete
        /// </summary>
        [DataMember(Name = "crackedConcrete", EmitDefaultValue = true)]
        public bool CrackedConcrete { get; set; }

        /// <summary>
        /// Gets or Sets ConnectorGripLength
        /// </summary>
        [DataMember(Name = "connectorGripLength", EmitDefaultValue = false)]
        public double ConnectorGripLength { get; set; }

        /// <summary>
        /// Gets or Sets FillerPlatesPackTh
        /// </summary>
        [DataMember(Name = "fillerPlatesPackTh", EmitDefaultValue = false)]
        public double FillerPlatesPackTh { get; set; }

        /// <summary>
        /// Gets or Sets FireTemperature
        /// </summary>
        [DataMember(Name = "fireTemperature", EmitDefaultValue = false)]
        public double FireTemperature { get; set; }

        /// <summary>
        /// Gets or Sets FireDesign
        /// </summary>
        [DataMember(Name = "fireDesign", EmitDefaultValue = true)]
        public bool FireDesign { get; set; }

        /// <summary>
        /// Gets or Sets KbTheta
        /// </summary>
        [DataMember(Name = "kbTheta", EmitDefaultValue = false)]
        public double KbTheta { get; set; }

        /// <summary>
        /// Gets or Sets K2EN
        /// </summary>
        [DataMember(Name = "k2_EN", EmitDefaultValue = false)]
        public double K2EN { get; set; }

        /// <summary>
        /// Gets or Sets AlphaVEN
        /// </summary>
        [DataMember(Name = "alpha_v_EN", EmitDefaultValue = false)]
        public double AlphaVEN { get; set; }

        /// <summary>
        /// Gets or Sets BetaPEN
        /// </summary>
        [DataMember(Name = "beta_p_EN", EmitDefaultValue = false)]
        public double BetaPEN { get; set; }

        /// <summary>
        /// Gets or Sets PlateThicknessForPunching
        /// </summary>
        [DataMember(Name = "plateThicknessForPunching", EmitDefaultValue = false)]
        public double PlateThicknessForPunching { get; set; }

        /// <summary>
        /// Gets or Sets PlateFuForPunching
        /// </summary>
        [DataMember(Name = "plateFuForPunching", EmitDefaultValue = false)]
        public double PlateFuForPunching { get; set; }

        /// <summary>
        /// Gets or Sets BoltHeadOrNutDimension
        /// </summary>
        [DataMember(Name = "boltHeadOrNutDimension", EmitDefaultValue = false)]
        public double BoltHeadOrNutDimension { get; set; }

        /// <summary>
        /// Gets or Sets GammaM2EN
        /// </summary>
        [DataMember(Name = "gamma_M2_EN", EmitDefaultValue = false)]
        public double GammaM2EN { get; set; }

        /// <summary>
        /// Gets or Sets GammaMfi
        /// </summary>
        [DataMember(Name = "gammaMfi", EmitDefaultValue = false)]
        public double GammaMfi { get; set; }

        /// <summary>
        /// Gets or Sets DFbrd
        /// </summary>
        [DataMember(Name = "d_fbrd", EmitDefaultValue = false)]
        public double DFbrd { get; set; }

        /// <summary>
        /// Gets or Sets ThFbrd
        /// </summary>
        [DataMember(Name = "th_fbrd", EmitDefaultValue = false)]
        public double ThFbrd { get; set; }

        /// <summary>
        /// Gets or Sets K1
        /// </summary>
        [DataMember(Name = "k1", EmitDefaultValue = false)]
        public double K1 { get; set; }

        /// <summary>
        /// Gets or Sets Kt
        /// </summary>
        [DataMember(Name = "kt", EmitDefaultValue = false)]
        public double Kt { get; set; }

        /// <summary>
        /// Gets or Sets AlphaB
        /// </summary>
        [DataMember(Name = "alpha_b", EmitDefaultValue = false)]
        public double AlphaB { get; set; }

        /// <summary>
        /// Gets or Sets BoltPreloadingForce
        /// </summary>
        [DataMember(Name = "boltPreloadingForce", EmitDefaultValue = false)]
        public double BoltPreloadingForce { get; set; }

        /// <summary>
        /// Gets or Sets GammaM3EN
        /// </summary>
        [DataMember(Name = "gamma_M3_EN", EmitDefaultValue = false)]
        public double GammaM3EN { get; set; }

        /// <summary>
        /// Gets or Sets KsEN
        /// </summary>
        [DataMember(Name = "ks_EN", EmitDefaultValue = false)]
        public double KsEN { get; set; }

        /// <summary>
        /// Gets or Sets NumberOfFrictionSurfaces
        /// </summary>
        [DataMember(Name = "numberOfFrictionSurfaces", EmitDefaultValue = false)]
        public int NumberOfFrictionSurfaces { get; set; }

        /// <summary>
        /// Gets or Sets Acn
        /// </summary>
        [DataMember(Name = "acn", EmitDefaultValue = false)]
        public double Acn { get; set; }

        /// <summary>
        /// Gets or Sets Ac0
        /// </summary>
        [DataMember(Name = "ac0", EmitDefaultValue = false)]
        public double Ac0 { get; set; }

        /// <summary>
        /// Gets or Sets N0rkc
        /// </summary>
        [DataMember(Name = "n0rkc", EmitDefaultValue = false)]
        public double N0rkc { get; set; }

        /// <summary>
        /// Gets or Sets Psis
        /// </summary>
        [DataMember(Name = "psis", EmitDefaultValue = false)]
        public double Psis { get; set; }

        /// <summary>
        /// Gets or Sets GammaC
        /// </summary>
        [DataMember(Name = "gammaC", EmitDefaultValue = false)]
        public double GammaC { get; set; }

        /// <summary>
        /// Gets or Sets GammaInstN
        /// </summary>
        [DataMember(Name = "gammaInstN", EmitDefaultValue = false)]
        public double GammaInstN { get; set; }

        /// <summary>
        /// Gets or Sets GammaInstV
        /// </summary>
        [DataMember(Name = "gammaInstV", EmitDefaultValue = false)]
        public double GammaInstV { get; set; }

        /// <summary>
        /// Gets or Sets Nrkc0
        /// </summary>
        [DataMember(Name = "nrkc0", EmitDefaultValue = false)]
        public double Nrkc0 { get; set; }

        /// <summary>
        /// Gets or Sets NrkcCp
        /// </summary>
        [DataMember(Name = "nrkc_cp", EmitDefaultValue = false)]
        public double NrkcCp { get; set; }

        /// <summary>
        /// Gets or Sets Vrks
        /// </summary>
        [DataMember(Name = "vrks", EmitDefaultValue = false)]
        public double Vrks { get; set; }

        /// <summary>
        /// Gets or Sets VrksK
        /// </summary>
        [DataMember(Name = "vrks_k", EmitDefaultValue = false)]
        public double VrksK { get; set; }

        /// <summary>
        /// Gets or Sets VrksGammaMs
        /// </summary>
        [DataMember(Name = "vrks_gammaMs", EmitDefaultValue = false)]
        public double VrksGammaMs { get; set; }

        /// <summary>
        /// Gets or Sets VrkGammaMc
        /// </summary>
        [DataMember(Name = "vrk_gammaMc", EmitDefaultValue = false)]
        public double VrkGammaMc { get; set; }

        /// <summary>
        /// Gets or Sets VrksAs
        /// </summary>
        [DataMember(Name = "vrks_as", EmitDefaultValue = false)]
        public double VrksAs { get; set; }

        /// <summary>
        /// Gets or Sets VrksFuk
        /// </summary>
        [DataMember(Name = "vrks_fuk", EmitDefaultValue = false)]
        public double VrksFuk { get; set; }

        /// <summary>
        /// Gets or Sets Grouting
        /// </summary>
        [DataMember(Name = "grouting", EmitDefaultValue = true)]
        public bool Grouting { get; set; }

        /// <summary>
        /// Gets or Sets VrksMrks
        /// </summary>
        [DataMember(Name = "vrks_Mrks", EmitDefaultValue = false)]
        public double VrksMrks { get; set; }

        /// <summary>
        /// Gets or Sets VrksAlfaM
        /// </summary>
        [DataMember(Name = "vrks_alfaM", EmitDefaultValue = false)]
        public double VrksAlfaM { get; set; }

        /// <summary>
        /// Gets or Sets VrksL
        /// </summary>
        [DataMember(Name = "vrks_l", EmitDefaultValue = false)]
        public double VrksL { get; set; }

        /// <summary>
        /// Gets or Sets InteractionBetaN
        /// </summary>
        [DataMember(Name = "interaction_BetaN", EmitDefaultValue = false)]
        public double InteractionBetaN { get; set; }

        /// <summary>
        /// Gets or Sets InteractionBetaV
        /// </summary>
        [DataMember(Name = "interaction_BetaV", EmitDefaultValue = false)]
        public double InteractionBetaV { get; set; }

        /// <summary>
        /// Gets or Sets InteractionAlfa
        /// </summary>
        [DataMember(Name = "interaction_Alfa", EmitDefaultValue = false)]
        public double InteractionAlfa { get; set; }

        /// <summary>
        /// Gets or Sets V0rkc
        /// </summary>
        [DataMember(Name = "v0rkc", EmitDefaultValue = false)]
        public double V0rkc { get; set; }

        /// <summary>
        /// Gets or Sets A0cv
        /// </summary>
        [DataMember(Name = "a0cv", EmitDefaultValue = false)]
        public double A0cv { get; set; }

        /// <summary>
        /// Gets or Sets DecreaseFtrd
        /// </summary>
        [DataMember(Name = "decreaseFtrd", EmitDefaultValue = false)]
        public double DecreaseFtrd { get; set; }

        /// <summary>
        /// Gets or Sets CompressionResistance
        /// </summary>
        [DataMember(Name = "compressionResistance", EmitDefaultValue = false)]
        public double CompressionResistance { get; set; }

        /// <summary>
        /// Gets or Sets MomentResistance
        /// </summary>
        [DataMember(Name = "momentResistance", EmitDefaultValue = false)]
        public double MomentResistance { get; set; }

        /// <summary>
        /// Gets or Sets UnityCheckCompression
        /// </summary>
        [DataMember(Name = "unityCheckCompression", EmitDefaultValue = false)]
        public double UnityCheckCompression { get; set; }

        /// <summary>
        /// Gets or Sets UnityCheckBending
        /// </summary>
        [DataMember(Name = "unityCheckBending", EmitDefaultValue = false)]
        public double UnityCheckBending { get; set; }

        /// <summary>
        /// Gets or Sets BoltMomentForce
        /// </summary>
        [DataMember(Name = "boltMomentForce", EmitDefaultValue = false)]
        public double BoltMomentForce { get; set; }

        /// <summary>
        /// Gets or Sets BearingResistance
        /// </summary>
        [DataMember(Name = "bearingResistance", EmitDefaultValue = false)]
        public double BearingResistance { get; set; }

        /// <summary>
        /// Gets or Sets CriticalTensionPreloaded
        /// </summary>
        [DataMember(Name = "criticalTensionPreloaded", EmitDefaultValue = false)]
        public double CriticalTensionPreloaded { get; set; }

        /// <summary>
        /// Gets or Sets CriticalShearPreloaded
        /// </summary>
        [DataMember(Name = "criticalShearPreloaded", EmitDefaultValue = false)]
        public double CriticalShearPreloaded { get; set; }

        /// <summary>
        /// Gets or Sets AlphaBEN
        /// </summary>
        [DataMember(Name = "alpha_b_EN", EmitDefaultValue = false)]
        public double AlphaBEN { get; set; }

        /// <summary>
        /// Gets or Sets K1EN
        /// </summary>
        [DataMember(Name = "k1_EN", EmitDefaultValue = false)]
        public double K1EN { get; set; }

        /// <summary>
        /// Gets or Sets KtEN
        /// </summary>
        [DataMember(Name = "kt_EN", EmitDefaultValue = false)]
        public double KtEN { get; set; }

        /// <summary>
        /// Gets or Sets IsHorizontalTying
        /// </summary>
        [DataMember(Name = "isHorizontalTying", EmitDefaultValue = true)]
        public bool IsHorizontalTying { get; set; }

        /// <summary>
        /// Gets or Sets BoltTensionResistanceCombined
        /// </summary>
        [DataMember(Name = "boltTensionResistanceCombined", EmitDefaultValue = false)]
        public double BoltTensionResistanceCombined { get; set; }

        /// <summary>
        /// Gets or Sets Asd
        /// </summary>
        [DataMember(Name = "asd", EmitDefaultValue = true)]
        public bool Asd { get; set; }

        /// <summary>
        /// Gets or Sets Ab
        /// </summary>
        [DataMember(Name = "ab", EmitDefaultValue = false)]
        public double Ab { get; set; }

        /// <summary>
        /// Gets or Sets Fnt
        /// </summary>
        [DataMember(Name = "fnt", EmitDefaultValue = false)]
        public double Fnt { get; set; }

        /// <summary>
        /// Gets or Sets Fnv
        /// </summary>
        [DataMember(Name = "fnv", EmitDefaultValue = false)]
        public double Fnv { get; set; }

        /// <summary>
        /// Gets or Sets Frv
        /// </summary>
        [DataMember(Name = "frv", EmitDefaultValue = false)]
        public double Frv { get; set; }

        /// <summary>
        /// Gets or Sets Fntt
        /// </summary>
        [DataMember(Name = "fntt", EmitDefaultValue = false)]
        public double Fntt { get; set; }

        /// <summary>
        /// Gets or Sets BoltTensileShearOmega
        /// </summary>
        [DataMember(Name = "boltTensileShear_Omega", EmitDefaultValue = false)]
        public double BoltTensileShearOmega { get; set; }

        /// <summary>
        /// Gets or Sets BoltTensileShearPhi
        /// </summary>
        [DataMember(Name = "boltTensileShear_Phi", EmitDefaultValue = false)]
        public double BoltTensileShearPhi { get; set; }

        /// <summary>
        /// Gets or Sets BoltTensileShearCombinedPhi
        /// </summary>
        [DataMember(Name = "boltTensileShearCombined_Phi", EmitDefaultValue = false)]
        public double BoltTensileShearCombinedPhi { get; set; }

        /// <summary>
        /// Gets or Sets BoltTensileShearCombinedOmega
        /// </summary>
        [DataMember(Name = "boltTensileShearCombined_Omega", EmitDefaultValue = false)]
        public double BoltTensileShearCombinedOmega { get; set; }

        /// <summary>
        /// Gets or Sets FuBearing
        /// </summary>
        [DataMember(Name = "fu_bearing", EmitDefaultValue = false)]
        public double FuBearing { get; set; }

        /// <summary>
        /// Gets or Sets MassFbrd
        /// </summary>
        [DataMember(Name = "mass_fbrd", EmitDefaultValue = false)]
        public double MassFbrd { get; set; }

        /// <summary>
        /// Gets or Sets BoltBearingPhi
        /// </summary>
        [DataMember(Name = "boltBearing_Phi", EmitDefaultValue = false)]
        public double BoltBearingPhi { get; set; }

        /// <summary>
        /// Gets or Sets BoltBearingOmega
        /// </summary>
        [DataMember(Name = "boltBearing_Omega", EmitDefaultValue = false)]
        public double BoltBearingOmega { get; set; }

        /// <summary>
        /// Gets or Sets BoltSlipResPhi
        /// </summary>
        [DataMember(Name = "boltSlipRes_Phi", EmitDefaultValue = false)]
        public double BoltSlipResPhi { get; set; }

        /// <summary>
        /// Gets or Sets BoltSlipResOmega
        /// </summary>
        [DataMember(Name = "boltSlipRes_Omega", EmitDefaultValue = false)]
        public double BoltSlipResOmega { get; set; }

        /// <summary>
        /// Gets or Sets Fc
        /// </summary>
        [DataMember(Name = "fc", EmitDefaultValue = false)]
        public double Fc { get; set; }

        /// <summary>
        /// Gets or Sets Dnom
        /// </summary>
        [DataMember(Name = "dnom", EmitDefaultValue = false)]
        public double Dnom { get; set; }

        /// <summary>
        /// Gets or Sets Alength
        /// </summary>
        [DataMember(Name = "alength", EmitDefaultValue = false)]
        public double Alength { get; set; }

        /// <summary>
        /// Gets or Sets Ce
        /// </summary>
        [DataMember(Name = "ce", EmitDefaultValue = false)]
        public double Ce { get; set; }

        /// <summary>
        /// Gets or Sets ReductionFactorTension
        /// </summary>
        [DataMember(Name = "reductionFactorTension", EmitDefaultValue = false)]
        public double ReductionFactorTension { get; set; }

        /// <summary>
        /// Gets or Sets ReductionFactorShear
        /// </summary>
        [DataMember(Name = "reductionFactorShear", EmitDefaultValue = false)]
        public double ReductionFactorShear { get; set; }

        /// <summary>
        /// Gets or Sets SlipResistanceCoeff
        /// </summary>
        [DataMember(Name = "slipResistanceCoeff", EmitDefaultValue = false)]
        public double SlipResistanceCoeff { get; set; }

        /// <summary>
        /// Gets or Sets LinearInteraction
        /// </summary>
        [DataMember(Name = "linearInteraction", EmitDefaultValue = false)]
        public double LinearInteraction { get; set; }

        /// <summary>
        /// Gets or Sets LinearInteractionConcrete
        /// </summary>
        [DataMember(Name = "linearInteractionConcrete", EmitDefaultValue = false)]
        public double LinearInteractionConcrete { get; set; }

        /// <summary>
        /// Gets or Sets StandOffGap
        /// </summary>
        [DataMember(Name = "standOffGap", EmitDefaultValue = false)]
        public double StandOffGap { get; set; }

        /// <summary>
        /// Gets or Sets BearingCriticalDist
        /// </summary>
        [DataMember(Name = "bearingCriticalDist", EmitDefaultValue = false)]
        public double BearingCriticalDist { get; set; }

        /// <summary>
        /// Gets or Sets BearingForce
        /// </summary>
        [DataMember(Name = "bearingForce", EmitDefaultValue = false)]
        public double BearingForce { get; set; }

        /// <summary>
        /// Gets or Sets BearingPlateThickness
        /// </summary>
        [DataMember(Name = "bearingPlateThickness", EmitDefaultValue = false)]
        public double BearingPlateThickness { get; set; }

        /// <summary>
        /// Gets or Sets BearingPlateFu
        /// </summary>
        [DataMember(Name = "bearingPlateFu", EmitDefaultValue = false)]
        public double BearingPlateFu { get; set; }

        /// <summary>
        /// Gets or Sets ConcretePullOutResistance
        /// </summary>
        [DataMember(Name = "concretePullOutResistance", EmitDefaultValue = false)]
        public double ConcretePullOutResistance { get; set; }

        /// <summary>
        /// Gets or Sets ConcreteShearBreakOutResistance
        /// </summary>
        [DataMember(Name = "concreteShearBreakOutResistance", EmitDefaultValue = false)]
        public double ConcreteShearBreakOutResistance { get; set; }

        /// <summary>
        /// Gets or Sets TearOutResistance
        /// </summary>
        [DataMember(Name = "tearOutResistance", EmitDefaultValue = false)]
        public double TearOutResistance { get; set; }

        /// <summary>
        /// Gets or Sets VnsbIS
        /// </summary>
        [DataMember(Name = "vnsb_IS", EmitDefaultValue = false)]
        public double VnsbIS { get; set; }

        /// <summary>
        /// Gets or Sets BetaLgIS
        /// </summary>
        [DataMember(Name = "betaLg_IS", EmitDefaultValue = false)]
        public double BetaLgIS { get; set; }

        /// <summary>
        /// Gets or Sets BetaPacking
        /// </summary>
        [DataMember(Name = "betaPacking", EmitDefaultValue = false)]
        public double BetaPacking { get; set; }

        /// <summary>
        /// Gets or Sets KbIS
        /// </summary>
        [DataMember(Name = "kb_IS", EmitDefaultValue = false)]
        public double KbIS { get; set; }

        /// <summary>
        /// Gets or Sets VnpbIS
        /// </summary>
        [DataMember(Name = "vnpb_IS", EmitDefaultValue = false)]
        public double VnpbIS { get; set; }

        /// <summary>
        /// Gets or Sets PreloadingForceProofStress
        /// </summary>
        [DataMember(Name = "preloadingForceProofStress", EmitDefaultValue = false)]
        public double PreloadingForceProofStress { get; set; }

        /// <summary>
        /// Gets or Sets GammaMfIS
        /// </summary>
        [DataMember(Name = "gammaMf_IS", EmitDefaultValue = false)]
        public double GammaMfIS { get; set; }

        /// <summary>
        /// Gets or Sets VnsfIS
        /// </summary>
        [DataMember(Name = "vnsf_IS", EmitDefaultValue = false)]
        public double VnsfIS { get; set; }

        /// <summary>
        /// Gets or Sets TnfIS
        /// </summary>
        [DataMember(Name = "tnf_IS", EmitDefaultValue = false)]
        public double TnfIS { get; set; }

        /// <summary>
        /// Gets or Sets BoltHoleBearResRedFactor
        /// </summary>
        [DataMember(Name = "boltHoleBearResRedFactor", EmitDefaultValue = false)]
        public double BoltHoleBearResRedFactor { get; set; }

        /// <summary>
        /// Gets or Sets PtHK
        /// </summary>
        [DataMember(Name = "pt_HK", EmitDefaultValue = false)]
        public double PtHK { get; set; }

        /// <summary>
        /// Gets or Sets PsHK
        /// </summary>
        [DataMember(Name = "ps_HK", EmitDefaultValue = false)]
        public double PsHK { get; set; }

        /// <summary>
        /// Gets or Sets PbbHK
        /// </summary>
        [DataMember(Name = "pbb_HK", EmitDefaultValue = false)]
        public double PbbHK { get; set; }

        /// <summary>
        /// Gets or Sets RbnSNIP
        /// </summary>
        [DataMember(Name = "rbn_SNIP", EmitDefaultValue = false)]
        public double RbnSNIP { get; set; }

        /// <summary>
        /// Gets or Sets PhiNsSNIP
        /// </summary>
        [DataMember(Name = "phiNsSNIP", EmitDefaultValue = false)]
        public double PhiNsSNIP { get; set; }

        /// <summary>
        /// Gets or Sets ConnectorTensileArea
        /// </summary>
        [DataMember(Name = "connectorTensileArea", EmitDefaultValue = false)]
        public double ConnectorTensileArea { get; set; }

        /// <summary>
        /// Gets or Sets ConnectorFu
        /// </summary>
        [DataMember(Name = "connectorFu", EmitDefaultValue = false)]
        public double ConnectorFu { get; set; }

        /// <summary>
        /// Gets or Sets PhiBoltTensionShear
        /// </summary>
        [DataMember(Name = "phiBoltTensionShear", EmitDefaultValue = false)]
        public double PhiBoltTensionShear { get; set; }

        /// <summary>
        /// Gets or Sets BoltBearForces
        /// </summary>
        [DataMember(Name = "boltBearForces", EmitDefaultValue = true)]
        public List<double> BoltBearForces { get; set; }

        /// <summary>
        /// Gets or Sets ConnectorCoreArea
        /// </summary>
        [DataMember(Name = "connectorCoreArea", EmitDefaultValue = false)]
        public double ConnectorCoreArea { get; set; }

        /// <summary>
        /// Gets or Sets ConnectorGrossArea
        /// </summary>
        [DataMember(Name = "connectorGrossArea", EmitDefaultValue = false)]
        public double ConnectorGrossArea { get; set; }

        /// <summary>
        /// Gets or Sets ShearReductionFactor
        /// </summary>
        [DataMember(Name = "shearReductionFactor", EmitDefaultValue = false)]
        public double ShearReductionFactor { get; set; }

        /// <summary>
        /// Gets or Sets BoltBearingForce
        /// </summary>
        [DataMember(Name = "boltBearingForce", EmitDefaultValue = false)]
        public double BoltBearingForce { get; set; }

        /// <summary>
        /// Gets or Sets ConnectorDiameter
        /// </summary>
        [DataMember(Name = "connectorDiameter", EmitDefaultValue = false)]
        public double ConnectorDiameter { get; set; }

        /// <summary>
        /// Gets or Sets BoreHoleDiameter
        /// </summary>
        [DataMember(Name = "boreHoleDiameter", EmitDefaultValue = false)]
        public double BoreHoleDiameter { get; set; }

        /// <summary>
        /// Gets or Sets ConnectorEffDiameter
        /// </summary>
        [DataMember(Name = "connectorEffDiameter", EmitDefaultValue = false)]
        public double ConnectorEffDiameter { get; set; }

        /// <summary>
        /// Gets or Sets ConnectorBoreHole
        /// </summary>
        [DataMember(Name = "connectorBoreHole", EmitDefaultValue = false)]
        public double ConnectorBoreHole { get; set; }

        /// <summary>
        /// Gets or Sets BoltMinEdgeDist
        /// </summary>
        [DataMember(Name = "boltMinEdgeDist", EmitDefaultValue = false)]
        public double BoltMinEdgeDist { get; set; }

        /// <summary>
        /// Gets or Sets BoltMinInterDist
        /// </summary>
        [DataMember(Name = "boltMinInterDist", EmitDefaultValue = false)]
        public double BoltMinInterDist { get; set; }

        /// <summary>
        /// Gets or Sets CriticalPlateThicknessTearOut
        /// </summary>
        [DataMember(Name = "criticalPlateThicknessTearOut", EmitDefaultValue = false)]
        public double CriticalPlateThicknessTearOut { get; set; }

        /// <summary>
        /// Gets or Sets CriticalPlateYieldStrengthTearOut
        /// </summary>
        [DataMember(Name = "criticalPlateYieldStrengthTearOut", EmitDefaultValue = false)]
        public double CriticalPlateYieldStrengthTearOut { get; set; }

        /// <summary>
        /// Gets or Sets CriticalPlateTensileStrengthTearOut
        /// </summary>
        [DataMember(Name = "criticalPlateTensileStrengthTearOut", EmitDefaultValue = false)]
        public double CriticalPlateTensileStrengthTearOut { get; set; }

        /// <summary>
        /// Gets or Sets TearOutDistance
        /// </summary>
        [DataMember(Name = "tearOutDistance", EmitDefaultValue = false)]
        public double TearOutDistance { get; set; }

        /// <summary>
        /// Gets or Sets PhiBearing
        /// </summary>
        [DataMember(Name = "phiBearing", EmitDefaultValue = false)]
        public double PhiBearing { get; set; }

        /// <summary>
        /// Gets or Sets ShearPlaneThread
        /// </summary>
        [DataMember(Name = "shearPlaneThread", EmitDefaultValue = true)]
        public bool ShearPlaneThread { get; set; }

        /// <summary>
        /// Gets or Sets DetailingChecksBolt
        /// </summary>
        [DataMember(Name = "detailingChecksBolt", EmitDefaultValue = false)]
        public DataDetailingDetailingChecksBoltCIBasicTypes DetailingChecksBolt { get; set; }

        /// <summary>
        /// Gets or Sets ThinPlatesValidityEN
        /// </summary>
        [DataMember(Name = "thinPlatesValidityEN", EmitDefaultValue = true)]
        public List<DataThinPlateValidityCIBasicTypes> ThinPlatesValidityEN { get; set; }

        /// <summary>
        /// Gets or Sets IsAnyThinPlateInConnectedPlates
        /// </summary>
        [DataMember(Name = "isAnyThinPlateInConnectedPlates", EmitDefaultValue = true)]
        public bool IsAnyThinPlateInConnectedPlates { get; set; }

        /// <summary>
        /// Gets or Sets RbtSNIP
        /// </summary>
        [DataMember(Name = "rbt_SNIP", EmitDefaultValue = false)]
        public double RbtSNIP { get; set; }

        /// <summary>
        /// Gets or Sets RbsSNIP
        /// </summary>
        [DataMember(Name = "rbs_SNIP", EmitDefaultValue = false)]
        public double RbsSNIP { get; set; }

        /// <summary>
        /// Gets or Sets RbpSNIP
        /// </summary>
        [DataMember(Name = "rbp_SNIP", EmitDefaultValue = false)]
        public double RbpSNIP { get; set; }

        /// <summary>
        /// Gets or Sets GammaBShearSNIP
        /// </summary>
        [DataMember(Name = "gammaB_ShearSNIP", EmitDefaultValue = false)]
        public double GammaBShearSNIP { get; set; }

        /// <summary>
        /// Gets or Sets GammaBBearingSNIP
        /// </summary>
        [DataMember(Name = "gammaB_BearingSNIP", EmitDefaultValue = false)]
        public double GammaBBearingSNIP { get; set; }

        /// <summary>
        /// Gets or Sets BearingDetailingErrorsSNIP
        /// </summary>
        [DataMember(Name = "bearingDetailingErrorsSNIP", EmitDefaultValue = false)]
        public DataDetailingDetailingChecksBoltCIBasicTypes BearingDetailingErrorsSNIP { get; set; }

        /// <summary>
        /// Gets or Sets CriticalPlateThickness
        /// </summary>
        [DataMember(Name = "criticalPlateThickness", EmitDefaultValue = false)]
        public double CriticalPlateThickness { get; set; }

        /// <summary>
        /// Gets or Sets ConnectorShearArea
        /// </summary>
        [DataMember(Name = "connectorShearArea", EmitDefaultValue = false)]
        public double ConnectorShearArea { get; set; }

        /// <summary>
        /// Gets or Sets ShearPlateThreadCoeff
        /// </summary>
        [DataMember(Name = "shearPlateThreadCoeff", EmitDefaultValue = false)]
        public double ShearPlateThreadCoeff { get; set; }

        /// <summary>
        /// Gets or Sets BoltShearForceAngles
        /// </summary>
        [DataMember(Name = "boltShearForceAngles", EmitDefaultValue = true)]
        public List<double> BoltShearForceAngles { get; set; }

        /// <summary>
        /// Gets or Sets TearOutForce
        /// </summary>
        [DataMember(Name = "tearOutForce", EmitDefaultValue = false)]
        public double TearOutForce { get; set; }

        /// <summary>
        /// Gets or Sets ShearAreaTearOut
        /// </summary>
        [DataMember(Name = "shearAreaTearOut", EmitDefaultValue = false)]
        public double ShearAreaTearOut { get; set; }

        /// <summary>
        /// Gets or Sets CriticalPlateTensileStrength
        /// </summary>
        [DataMember(Name = "criticalPlateTensileStrength", EmitDefaultValue = false)]
        public double CriticalPlateTensileStrength { get; set; }

        /// <summary>
        /// Gets or Sets CriticalPlateYieldStrength
        /// </summary>
        [DataMember(Name = "criticalPlateYieldStrength", EmitDefaultValue = false)]
        public double CriticalPlateYieldStrength { get; set; }

        /// <summary>
        /// Gets or Sets CriticalPlateBearingStrength
        /// </summary>
        [DataMember(Name = "criticalPlateBearingStrength", EmitDefaultValue = false)]
        public double CriticalPlateBearingStrength { get; set; }

        /// <summary>
        /// Gets or Sets PhiU
        /// </summary>
        [DataMember(Name = "phiU", EmitDefaultValue = false)]
        public double PhiU { get; set; }

        /// <summary>
        /// Gets or Sets EdgeDistances
        /// </summary>
        [DataMember(Name = "edgeDistances", EmitDefaultValue = true)]
        public List<double> EdgeDistances { get; set; }

        /// <summary>
        /// Gets or Sets InterDistances
        /// </summary>
        [DataMember(Name = "interDistances", EmitDefaultValue = true)]
        public List<double> InterDistances { get; set; }

        /// <summary>
        /// Gets or Sets AreHolesSlotted
        /// </summary>
        [DataMember(Name = "areHolesSlotted", EmitDefaultValue = true)]
        public bool AreHolesSlotted { get; set; }

        /// <summary>
        /// Gets or Sets UnityCheckShearCalc
        /// </summary>
        [DataMember(Name = "unityCheckShearCalc", EmitDefaultValue = false)]
        public double UnityCheckShearCalc { get; set; }

        /// <summary>
        /// Gets or Sets UnityCheckTearOut
        /// </summary>
        [DataMember(Name = "unityCheckTearOut", EmitDefaultValue = false)]
        public double UnityCheckTearOut { get; set; }

        /// <summary>
        /// Gets or Sets TearOutCoeff
        /// </summary>
        [DataMember(Name = "tearOutCoeff", EmitDefaultValue = false)]
        public double TearOutCoeff { get; set; }

        /// <summary>
        /// Gets or Sets BearingCoeff
        /// </summary>
        [DataMember(Name = "bearingCoeff", EmitDefaultValue = false)]
        public double BearingCoeff { get; set; }

        /// <summary>
        /// Gets or Sets ResidualTensileResistance
        /// </summary>
        [DataMember(Name = "residualTensileResistance", EmitDefaultValue = false)]
        public double ResidualTensileResistance { get; set; }

        /// <summary>
        /// Gets or Sets IsFntTableValue
        /// </summary>
        [DataMember(Name = "isFntTableValue", EmitDefaultValue = true)]
        public bool IsFntTableValue { get; set; }

        /// <summary>
        /// Gets or Sets IsFnvTableValue
        /// </summary>
        [DataMember(Name = "isFnvTableValue", EmitDefaultValue = true)]
        public bool IsFnvTableValue { get; set; }

        /// <summary>
        /// Gets or Sets PhiTensileShearCombined
        /// </summary>
        [DataMember(Name = "phiTensileShearCombined", EmitDefaultValue = false)]
        public double PhiTensileShearCombined { get; set; }

        /// <summary>
        /// Gets or Sets TensileStressInInteraction
        /// </summary>
        [DataMember(Name = "tensileStressInInteraction", EmitDefaultValue = false)]
        public double TensileStressInInteraction { get; set; }

        /// <summary>
        /// Gets or Sets OmegaTensileShear
        /// </summary>
        [DataMember(Name = "omegaTensileShear", EmitDefaultValue = false)]
        public double OmegaTensileShear { get; set; }

        /// <summary>
        /// Gets or Sets OmegaTensileShearCombined
        /// </summary>
        [DataMember(Name = "omegaTensileShearCombined", EmitDefaultValue = false)]
        public double OmegaTensileShearCombined { get; set; }

        /// <summary>
        /// Gets or Sets OmegaBearing
        /// </summary>
        [DataMember(Name = "omegaBearing", EmitDefaultValue = false)]
        public double OmegaBearing { get; set; }

        /// <summary>
        /// Gets or Sets FbtCHN
        /// </summary>
        [DataMember(Name = "fbt_CHN", EmitDefaultValue = false)]
        public double FbtCHN { get; set; }

        /// <summary>
        /// Gets or Sets FbvCHN
        /// </summary>
        [DataMember(Name = "fbv_CHN", EmitDefaultValue = false)]
        public double FbvCHN { get; set; }

        /// <summary>
        /// Gets or Sets FbcCHN
        /// </summary>
        [DataMember(Name = "fbc_CHN", EmitDefaultValue = false)]
        public double FbcCHN { get; set; }

        /// <summary>
        /// Gets or Sets BearingForceBolt
        /// </summary>
        [DataMember(Name = "bearingForce_Bolt", EmitDefaultValue = false)]
        public double BearingForceBolt { get; set; }

        /// <summary>
        /// Gets or Sets BearingForceConParts
        /// </summary>
        [DataMember(Name = "bearingForce_ConParts", EmitDefaultValue = false)]
        public double BearingForceConParts { get; set; }

        /// <summary>
        /// Gets or Sets CriticalBoltBearingStrength
        /// </summary>
        [DataMember(Name = "criticalBoltBearingStrength", EmitDefaultValue = false)]
        public double CriticalBoltBearingStrength { get; set; }

        /// <summary>
        /// Gets or Sets BearingResistanceBolt
        /// </summary>
        [DataMember(Name = "bearingResistance_Bolt", EmitDefaultValue = false)]
        public double BearingResistanceBolt { get; set; }

        /// <summary>
        /// Gets or Sets BearingResistanceConParts
        /// </summary>
        [DataMember(Name = "bearingResistance_ConParts", EmitDefaultValue = false)]
        public double BearingResistanceConParts { get; set; }

        /// <summary>
        /// Gets or Sets CriticalPlateThicknessBolt
        /// </summary>
        [DataMember(Name = "criticalPlateThickness_Bolt", EmitDefaultValue = false)]
        public double CriticalPlateThicknessBolt { get; set; }

        /// <summary>
        /// Gets or Sets CriticalPlateThicknessConParts
        /// </summary>
        [DataMember(Name = "criticalPlateThickness_ConParts", EmitDefaultValue = false)]
        public double CriticalPlateThicknessConParts { get; set; }

        /// <summary>
        /// Gets or Sets CriticalPlateBearingStrengthConParts
        /// </summary>
        [DataMember(Name = "criticalPlateBearingStrength_ConParts", EmitDefaultValue = false)]
        public double CriticalPlateBearingStrengthConParts { get; set; }

        /// <summary>
        /// Gets or Sets UnityCheckBearingBolt
        /// </summary>
        [DataMember(Name = "unityCheckBearing_Bolt", EmitDefaultValue = false)]
        public double UnityCheckBearingBolt { get; set; }

        /// <summary>
        /// Gets or Sets UnityCheckBearingConParts
        /// </summary>
        [DataMember(Name = "unityCheckBearing_ConParts", EmitDefaultValue = false)]
        public double UnityCheckBearingConParts { get; set; }

        /// <summary>
        /// Gets or Sets ApplyBearingCheck
        /// </summary>
        [DataMember(Name = "applyBearingCheck", EmitDefaultValue = true)]
        public bool ApplyBearingCheck { get; set; }

        /// <summary>
        /// Gets or Sets SlipCoeff
        /// </summary>
        [DataMember(Name = "slipCoeff", EmitDefaultValue = false)]
        public double SlipCoeff { get; set; }

        /// <summary>
        /// Gets or Sets Nti
        /// </summary>
        [DataMember(Name = "nti", EmitDefaultValue = false)]
        public double Nti { get; set; }

        /// <summary>
        /// Gets or Sets CoeffKh
        /// </summary>
        [DataMember(Name = "coeffKh", EmitDefaultValue = false)]
        public double CoeffKh { get; set; }

        /// <summary>
        /// Gets or Sets SlipFactorCs
        /// </summary>
        [DataMember(Name = "slipFactorCs", EmitDefaultValue = false)]
        public double SlipFactorCs { get; set; }

        /// <summary>
        /// Gets or Sets SlipCoeffKs
        /// </summary>
        [DataMember(Name = "slipCoeffKs", EmitDefaultValue = false)]
        public double SlipCoeffKs { get; set; }

        /// <summary>
        /// Gets or Sets SlipGammaHSNIP
        /// </summary>
        [DataMember(Name = "slipGammaH_SNIP", EmitDefaultValue = false)]
        public double SlipGammaHSNIP { get; set; }

        /// <summary>
        /// Gets or Sets SlipGammaBSNIP
        /// </summary>
        [DataMember(Name = "slipGammaB_SNIP", EmitDefaultValue = false)]
        public double SlipGammaBSNIP { get; set; }

        /// <summary>
        /// Gets or Sets SlipGammaBtensSNIP
        /// </summary>
        [DataMember(Name = "slipGammaBtens_SNIP", EmitDefaultValue = false)]
        public double SlipGammaBtensSNIP { get; set; }

        /// <summary>
        /// Gets or Sets DesignPreloadStrength
        /// </summary>
        [DataMember(Name = "designPreloadStrength", EmitDefaultValue = false)]
        public double DesignPreloadStrength { get; set; }

        /// <summary>
        /// Gets or Sets Qbh
        /// </summary>
        [DataMember(Name = "qbh", EmitDefaultValue = false)]
        public double Qbh { get; set; }

        /// <summary>
        /// Gets or Sets BoltPreloadedForce
        /// </summary>
        [DataMember(Name = "boltPreloadedForce", EmitDefaultValue = false)]
        public double BoltPreloadedForce { get; set; }

        /// <summary>
        /// Gets or Sets Tb
        /// </summary>
        [DataMember(Name = "tb", EmitDefaultValue = false)]
        public double Tb { get; set; }

        /// <summary>
        /// Gets or Sets ConstDu
        /// </summary>
        [DataMember(Name = "constDu", EmitDefaultValue = false)]
        public double ConstDu { get; set; }

        /// <summary>
        /// Gets or Sets FillersFactorHf
        /// </summary>
        [DataMember(Name = "fillersFactorHf", EmitDefaultValue = false)]
        public double FillersFactorHf { get; set; }

        /// <summary>
        /// Gets or Sets CoeffKsc
        /// </summary>
        [DataMember(Name = "coeffKsc", EmitDefaultValue = false)]
        public double CoeffKsc { get; set; }

        /// <summary>
        /// Gets or Sets OmegaSlipRes
        /// </summary>
        [DataMember(Name = "omegaSlipRes", EmitDefaultValue = false)]
        public double OmegaSlipRes { get; set; }

        /// <summary>
        /// Gets or Sets PreBoltHoleFactor
        /// </summary>
        [DataMember(Name = "preBoltHoleFactor", EmitDefaultValue = false)]
        public double PreBoltHoleFactor { get; set; }

        /// <summary>
        /// Gets or Sets IsPreloadedForceTableValue
        /// </summary>
        [DataMember(Name = "isPreloadedForceTableValue", EmitDefaultValue = true)]
        public bool IsPreloadedForceTableValue { get; set; }

        /// <summary>
        /// Gets or Sets PhiMsTension
        /// </summary>
        [DataMember(Name = "phiMsTension", EmitDefaultValue = false)]
        public double PhiMsTension { get; set; }

        /// <summary>
        /// Gets or Sets PhiMsShear
        /// </summary>
        [DataMember(Name = "phiMsShear", EmitDefaultValue = false)]
        public double PhiMsShear { get; set; }

        /// <summary>
        /// Gets or Sets PhiBolt
        /// </summary>
        [DataMember(Name = "phiBolt", EmitDefaultValue = false)]
        public double PhiBolt { get; set; }

        /// <summary>
        /// Gets or Sets PhiMc
        /// </summary>
        [DataMember(Name = "phiMc", EmitDefaultValue = false)]
        public double PhiMc { get; set; }

        /// <summary>
        /// Gets or Sets PsiSn
        /// </summary>
        [DataMember(Name = "psiSn", EmitDefaultValue = false)]
        public double PsiSn { get; set; }

        /// <summary>
        /// Gets or Sets PsiRen
        /// </summary>
        [DataMember(Name = "psiRen", EmitDefaultValue = false)]
        public double PsiRen { get; set; }

        /// <summary>
        /// Gets or Sets PsiEcn
        /// </summary>
        [DataMember(Name = "psiEcn", EmitDefaultValue = false)]
        public double PsiEcn { get; set; }

        /// <summary>
        /// Gets or Sets PsiMN
        /// </summary>
        [DataMember(Name = "psiMN", EmitDefaultValue = false)]
        public double PsiMN { get; set; }

        /// <summary>
        /// Gets or Sets CoeffK1ConeBreakOut
        /// </summary>
        [DataMember(Name = "coeffK1ConeBreakOut", EmitDefaultValue = false)]
        public double CoeffK1ConeBreakOut { get; set; }

        /// <summary>
        /// Gets or Sets CoeffK1PullOut
        /// </summary>
        [DataMember(Name = "coeffK1PullOut", EmitDefaultValue = false)]
        public double CoeffK1PullOut { get; set; }

        /// <summary>
        /// Gets or Sets CoeffK5
        /// </summary>
        [DataMember(Name = "coeffK5", EmitDefaultValue = false)]
        public double CoeffK5 { get; set; }

        /// <summary>
        /// Gets or Sets CoeffK9
        /// </summary>
        [DataMember(Name = "coeffK9", EmitDefaultValue = false)]
        public double CoeffK9 { get; set; }

        /// <summary>
        /// Gets or Sets ConcreteConeCheckInTensionFailed
        /// </summary>
        [DataMember(Name = "concreteConeCheckInTensionFailed", EmitDefaultValue = true)]
        public bool ConcreteConeCheckInTensionFailed { get; set; }

        /// <summary>
        /// Gets or Sets UnityCheckConeTensionRes
        /// </summary>
        [DataMember(Name = "unityCheckConeTensionRes", EmitDefaultValue = false)]
        public double UnityCheckConeTensionRes { get; set; }

        /// <summary>
        /// Gets or Sets UnityCheckConcretePullOutRes
        /// </summary>
        [DataMember(Name = "unityCheckConcretePullOutRes", EmitDefaultValue = false)]
        public double UnityCheckConcretePullOutRes { get; set; }

        /// <summary>
        /// Gets or Sets CaMin
        /// </summary>
        [DataMember(Name = "caMin", EmitDefaultValue = false)]
        public double CaMin { get; set; }

        /// <summary>
        /// Gets or Sets CaMax
        /// </summary>
        [DataMember(Name = "caMax", EmitDefaultValue = false)]
        public double CaMax { get; set; }

        /// <summary>
        /// Gets or Sets EccN
        /// </summary>
        [DataMember(Name = "eccN", EmitDefaultValue = false)]
        public double EccN { get; set; }

        /// <summary>
        /// Gets or Sets Acn0
        /// </summary>
        [DataMember(Name = "acn0", EmitDefaultValue = false)]
        public double Acn0 { get; set; }

        /// <summary>
        /// Gets or Sets Fyf
        /// </summary>
        [DataMember(Name = "fyf", EmitDefaultValue = false)]
        public double Fyf { get; set; }

        /// <summary>
        /// Gets or Sets Fuf
        /// </summary>
        [DataMember(Name = "fuf", EmitDefaultValue = false)]
        public double Fuf { get; set; }

        /// <summary>
        /// Gets or Sets NrkcForce
        /// </summary>
        [DataMember(Name = "nrkcForce", EmitDefaultValue = false)]
        public double NrkcForce { get; set; }

        /// <summary>
        /// Gets or Sets Hemb
        /// </summary>
        [DataMember(Name = "hemb", EmitDefaultValue = false)]
        public double Hemb { get; set; }

        /// <summary>
        /// Gets or Sets IsHeffReduced
        /// </summary>
        [DataMember(Name = "isHeffReduced", EmitDefaultValue = true)]
        public bool IsHeffReduced { get; set; }

        /// <summary>
        /// Gets or Sets HeffReduction
        /// </summary>
        [DataMember(Name = "heffReduction", EmitDefaultValue = false)]
        public double HeffReduction { get; set; }

        /// <summary>
        /// Gets or Sets FtAnc
        /// </summary>
        [DataMember(Name = "ftAnc", EmitDefaultValue = false)]
        public double FtAnc { get; set; }

        /// <summary>
        /// Gets or Sets FtBlowOut
        /// </summary>
        [DataMember(Name = "ftBlowOut", EmitDefaultValue = false)]
        public double FtBlowOut { get; set; }

        /// <summary>
        /// Gets or Sets AnchorTypeSize
        /// </summary>
        [DataMember(Name = "anchorTypeSize", EmitDefaultValue = false)]
        public double AnchorTypeSize { get; set; }

        /// <summary>
        /// Gets or Sets Ah
        /// </summary>
        [DataMember(Name = "ah", EmitDefaultValue = false)]
        public double Ah { get; set; }

        /// <summary>
        /// Gets or Sets NblowOut
        /// </summary>
        [DataMember(Name = "nblowOut", EmitDefaultValue = false)]
        public double NblowOut { get; set; }

        /// <summary>
        /// Gets or Sets SblowOut
        /// </summary>
        [DataMember(Name = "sblowOut", EmitDefaultValue = false)]
        public double SblowOut { get; set; }

        /// <summary>
        /// Gets or Sets Acnb
        /// </summary>
        [DataMember(Name = "acnb", EmitDefaultValue = false)]
        public double Acnb { get; set; }

        /// <summary>
        /// Gets or Sets PsiSnb
        /// </summary>
        [DataMember(Name = "psiSnb", EmitDefaultValue = false)]
        public double PsiSnb { get; set; }

        /// <summary>
        /// Gets or Sets PsiGnb
        /// </summary>
        [DataMember(Name = "psiGnb", EmitDefaultValue = false)]
        public double PsiGnb { get; set; }

        /// <summary>
        /// Gets or Sets PsiEcnb
        /// </summary>
        [DataMember(Name = "psiEcnb", EmitDefaultValue = false)]
        public double PsiEcnb { get; set; }

        /// <summary>
        /// Gets or Sets Nrkcb0
        /// </summary>
        [DataMember(Name = "nrkcb0", EmitDefaultValue = false)]
        public double Nrkcb0 { get; set; }

        /// <summary>
        /// Gets or Sets EccNb
        /// </summary>
        [DataMember(Name = "eccNb", EmitDefaultValue = false)]
        public double EccNb { get; set; }

        /// <summary>
        /// Gets or Sets Acnb0
        /// </summary>
        [DataMember(Name = "acnb0", EmitDefaultValue = false)]
        public double Acnb0 { get; set; }

        /// <summary>
        /// Gets or Sets CoeffK4
        /// </summary>
        [DataMember(Name = "coeffK4", EmitDefaultValue = false)]
        public double CoeffK4 { get; set; }

        /// <summary>
        /// Gets or Sets C1
        /// </summary>
        [DataMember(Name = "c1", EmitDefaultValue = false)]
        public double C1 { get; set; }

        /// <summary>
        /// Gets or Sets C2
        /// </summary>
        [DataMember(Name = "c2", EmitDefaultValue = false)]
        public double C2 { get; set; }

        /// <summary>
        /// Gets or Sets C1blowOut
        /// </summary>
        [DataMember(Name = "c1blowOut", EmitDefaultValue = false)]
        public double C1blowOut { get; set; }

        /// <summary>
        /// Gets or Sets C2blowOut
        /// </summary>
        [DataMember(Name = "c2blowOut", EmitDefaultValue = false)]
        public double C2blowOut { get; set; }

        /// <summary>
        /// Gets or Sets UnityCheckConcreteEdgefailureRes
        /// </summary>
        [DataMember(Name = "unityCheckConcreteEdgefailureRes", EmitDefaultValue = false)]
        public double UnityCheckConcreteEdgefailureRes { get; set; }

        /// <summary>
        /// Gets or Sets UnityCheckConcreteShearBreakOutRes
        /// </summary>
        [DataMember(Name = "unityCheckConcreteShearBreakOutRes", EmitDefaultValue = false)]
        public double UnityCheckConcreteShearBreakOutRes { get; set; }

        /// <summary>
        /// Gets or Sets ConcreteConeCheckInShearFailed
        /// </summary>
        [DataMember(Name = "concreteConeCheckInShearFailed", EmitDefaultValue = true)]
        public bool ConcreteConeCheckInShearFailed { get; set; }

        /// <summary>
        /// Gets or Sets Hc
        /// </summary>
        [DataMember(Name = "hc", EmitDefaultValue = false)]
        public double Hc { get; set; }

        /// <summary>
        /// Gets or Sets PsiRev
        /// </summary>
        [DataMember(Name = "psiRev", EmitDefaultValue = false)]
        public double PsiRev { get; set; }

        /// <summary>
        /// Gets or Sets CoeffAlpha
        /// </summary>
        [DataMember(Name = "coeffAlpha", EmitDefaultValue = false)]
        public double CoeffAlpha { get; set; }

        /// <summary>
        /// Gets or Sets CoeffBeta
        /// </summary>
        [DataMember(Name = "coeffBeta", EmitDefaultValue = false)]
        public double CoeffBeta { get; set; }

        /// <summary>
        /// Gets or Sets Lf
        /// </summary>
        [DataMember(Name = "lf", EmitDefaultValue = false)]
        public double Lf { get; set; }

        /// <summary>
        /// Gets or Sets ShearBreakOutForce
        /// </summary>
        [DataMember(Name = "shearBreakOutForce", EmitDefaultValue = false)]
        public double ShearBreakOutForce { get; set; }

        /// <summary>
        /// Gets or Sets ShearBreakOutForceFactor
        /// </summary>
        [DataMember(Name = "shearBreakOutForceFactor", EmitDefaultValue = false)]
        public double ShearBreakOutForceFactor { get; set; }

        /// <summary>
        /// Gets or Sets CriticalSegmentShearConeBreakoutForce
        /// </summary>
        [DataMember(Name = "criticalSegmentShearConeBreakoutForce", EmitDefaultValue = false)]
        public double CriticalSegmentShearConeBreakoutForce { get; set; }

        /// <summary>
        /// Gets or Sets Acv
        /// </summary>
        [DataMember(Name = "acv", EmitDefaultValue = false)]
        public double Acv { get; set; }

        /// <summary>
        /// Gets or Sets Acv0
        /// </summary>
        [DataMember(Name = "acv0", EmitDefaultValue = false)]
        public double Acv0 { get; set; }

        /// <summary>
        /// Gets or Sets EccV
        /// </summary>
        [DataMember(Name = "eccV", EmitDefaultValue = false)]
        public double EccV { get; set; }

        /// <summary>
        /// Gets or Sets SshearBreakout
        /// </summary>
        [DataMember(Name = "sshearBreakout", EmitDefaultValue = false)]
        public double SshearBreakout { get; set; }

        /// <summary>
        /// Gets or Sets CaReduction
        /// </summary>
        [DataMember(Name = "caReduction", EmitDefaultValue = false)]
        public double CaReduction { get; set; }

        /// <summary>
        /// Gets or Sets PsiSv
        /// </summary>
        [DataMember(Name = "psiSv", EmitDefaultValue = false)]
        public double PsiSv { get; set; }

        /// <summary>
        /// Gets or Sets PsiHv
        /// </summary>
        [DataMember(Name = "psiHv", EmitDefaultValue = false)]
        public double PsiHv { get; set; }

        /// <summary>
        /// Gets or Sets PsiEcv
        /// </summary>
        [DataMember(Name = "psiEcv", EmitDefaultValue = false)]
        public double PsiEcv { get; set; }

        /// <summary>
        /// Gets or Sets PsiAlphaV
        /// </summary>
        [DataMember(Name = "psiAlphaV", EmitDefaultValue = false)]
        public double PsiAlphaV { get; set; }

        /// <summary>
        /// Gets or Sets Vrkc0
        /// </summary>
        [DataMember(Name = "vrkc0", EmitDefaultValue = false)]
        public double Vrkc0 { get; set; }

        /// <summary>
        /// Gets or Sets CriticalAvcSegmentIndex
        /// </summary>
        [DataMember(Name = "criticalAvcSegmentIndex", EmitDefaultValue = false)]
        public int CriticalAvcSegmentIndex { get; set; }

        /// <summary>
        /// Gets or Sets AlphaV
        /// </summary>
        [DataMember(Name = "alphaV", EmitDefaultValue = false)]
        public double AlphaV { get; set; }

        /// <summary>
        /// Gets or Sets CoeffK8
        /// </summary>
        [DataMember(Name = "coeffK8", EmitDefaultValue = false)]
        public double CoeffK8 { get; set; }

        /// <summary>
        /// Gets or Sets NrkcDefault
        /// </summary>
        [DataMember(Name = "nrkcDefault", EmitDefaultValue = false)]
        public double NrkcDefault { get; set; }

        /// <summary>
        /// Gets or Sets UnityCheckPryOutfailureResistanceRes
        /// </summary>
        [DataMember(Name = "unityCheckPryOutfailureResistanceRes", EmitDefaultValue = false)]
        public double UnityCheckPryOutfailureResistanceRes { get; set; }

        /// <summary>
        /// Gets or Sets LeverArm
        /// </summary>
        [DataMember(Name = "leverArm", EmitDefaultValue = false)]
        public double LeverArm { get; set; }

        /// <summary>
        /// Gets or Sets AlphaM
        /// </summary>
        [DataMember(Name = "alphaM", EmitDefaultValue = false)]
        public double AlphaM { get; set; }

        /// <summary>
        /// Gets or Sets Wel
        /// </summary>
        [DataMember(Name = "wel", EmitDefaultValue = false)]
        public double Wel { get; set; }

        /// <summary>
        /// Gets or Sets Mrks0
        /// </summary>
        [DataMember(Name = "mrks0", EmitDefaultValue = false)]
        public double Mrks0 { get; set; }

        /// <summary>
        /// Gets or Sets Mrks
        /// </summary>
        [DataMember(Name = "mrks", EmitDefaultValue = false)]
        public double Mrks { get; set; }

        /// <summary>
        /// Gets or Sets LeverArmShear
        /// </summary>
        [DataMember(Name = "leverArmShear", EmitDefaultValue = false)]
        public double LeverArmShear { get; set; }

        /// <summary>
        /// Gets or Sets IsMortarJoint
        /// </summary>
        [DataMember(Name = "isMortarJoint", EmitDefaultValue = true)]
        public bool IsMortarJoint { get; set; }

        /// <summary>
        /// Gets or Sets GroutTh
        /// </summary>
        [DataMember(Name = "groutTh", EmitDefaultValue = false)]
        public double GroutTh { get; set; }

        /// <summary>
        /// Gets or Sets LeverArmA3
        /// </summary>
        [DataMember(Name = "leverArmA3", EmitDefaultValue = false)]
        public double LeverArmA3 { get; set; }

        /// <summary>
        /// Gets or Sets LeverArmE1
        /// </summary>
        [DataMember(Name = "leverArmE1", EmitDefaultValue = false)]
        public double LeverArmE1 { get; set; }

        /// <summary>
        /// Gets or Sets ListOfAncAnchorIDs
        /// </summary>
        [DataMember(Name = "listOfAncAnchorIDs", EmitDefaultValue = true)]
        public List<int> ListOfAncAnchorIDs { get; set; }

        /// <summary>
        /// Gets or Sets ListOfAvcAnchorIDs
        /// </summary>
        [DataMember(Name = "listOfAvcAnchorIDs", EmitDefaultValue = true)]
        public List<int> ListOfAvcAnchorIDs { get; set; }

        /// <summary>
        /// Gets or Sets ListOfBlowOutAnchorIDs
        /// </summary>
        [DataMember(Name = "listOfBlowOutAnchorIDs", EmitDefaultValue = true)]
        public List<int> ListOfBlowOutAnchorIDs { get; set; }

        /// <summary>
        /// Gets or Sets Dh
        /// </summary>
        [DataMember(Name = "dh", EmitDefaultValue = false)]
        public double Dh { get; set; }

        /// <summary>
        /// Gets or Sets WasherThickness
        /// </summary>
        [DataMember(Name = "washerThickness", EmitDefaultValue = false)]
        public double WasherThickness { get; set; }

        /// <summary>
        /// Gets or Sets PsiEcNx
        /// </summary>
        [DataMember(Name = "psiEcNx", EmitDefaultValue = false)]
        public double PsiEcNx { get; set; }

        /// <summary>
        /// Gets or Sets PsiEcNy
        /// </summary>
        [DataMember(Name = "psiEcNy", EmitDefaultValue = false)]
        public double PsiEcNy { get; set; }

        /// <summary>
        /// Gets or Sets EccNx
        /// </summary>
        [DataMember(Name = "eccNx", EmitDefaultValue = false)]
        public double EccNx { get; set; }

        /// <summary>
        /// Gets or Sets EccNy
        /// </summary>
        [DataMember(Name = "eccNy", EmitDefaultValue = false)]
        public double EccNy { get; set; }

        /// <summary>
        /// Gets or Sets IsCa1ReducedInAvcCalculation
        /// </summary>
        [DataMember(Name = "isCa1ReducedInAvcCalculation", EmitDefaultValue = true)]
        public bool IsCa1ReducedInAvcCalculation { get; set; }

        /// <summary>
        /// Gets or Sets AreBasePlatesAnchorsOfSameType
        /// </summary>
        [DataMember(Name = "areBasePlatesAnchorsOfSameType", EmitDefaultValue = true)]
        public bool AreBasePlatesAnchorsOfSameType { get; set; }

        /// <summary>
        /// Gets or Sets IsAnchorInteractingWithAnchorsOfAnotherBasePlate
        /// </summary>
        [DataMember(Name = "isAnchorInteractingWithAnchorsOfAnotherBasePlate", EmitDefaultValue = true)]
        public bool IsAnchorInteractingWithAnchorsOfAnotherBasePlate { get; set; }

        /// <summary>
        /// Gets or Sets HookLength
        /// </summary>
        [DataMember(Name = "hookLength", EmitDefaultValue = false)]
        public double HookLength { get; set; }

        /// <summary>
        /// Gets or Sets PhiS
        /// </summary>
        [DataMember(Name = "phiS", EmitDefaultValue = false)]
        public double PhiS { get; set; }

        /// <summary>
        /// Gets or Sets PhiC
        /// </summary>
        [DataMember(Name = "phiC", EmitDefaultValue = false)]
        public double PhiC { get; set; }

        /// <summary>
        /// Gets or Sets Phi
        /// </summary>
        [DataMember(Name = "phi", EmitDefaultValue = false)]
        public double Phi { get; set; }

        /// <summary>
        /// Gets or Sets ResFactorSteelTension
        /// </summary>
        [DataMember(Name = "resFactorSteelTension", EmitDefaultValue = false)]
        public double ResFactorSteelTension { get; set; }

        /// <summary>
        /// Gets or Sets ResFactorSteelShear
        /// </summary>
        [DataMember(Name = "resFactorSteelShear", EmitDefaultValue = false)]
        public double ResFactorSteelShear { get; set; }

        /// <summary>
        /// Gets or Sets ResFactorCrtStrength
        /// </summary>
        [DataMember(Name = "resFactorCrtStrength", EmitDefaultValue = false)]
        public double ResFactorCrtStrength { get; set; }

        /// <summary>
        /// Gets or Sets PsiEdn
        /// </summary>
        [DataMember(Name = "psiEdn", EmitDefaultValue = false)]
        public double PsiEdn { get; set; }

        /// <summary>
        /// Gets or Sets Anc0
        /// </summary>
        [DataMember(Name = "anc0", EmitDefaultValue = false)]
        public double Anc0 { get; set; }

        /// <summary>
        /// Gets or Sets Anc
        /// </summary>
        [DataMember(Name = "anc", EmitDefaultValue = false)]
        public double Anc { get; set; }

        /// <summary>
        /// Gets or Sets Futa
        /// </summary>
        [DataMember(Name = "futa", EmitDefaultValue = false)]
        public double Futa { get; set; }

        /// <summary>
        /// Gets or Sets PsiCn
        /// </summary>
        [DataMember(Name = "psiCn", EmitDefaultValue = false)]
        public double PsiCn { get; set; }

        /// <summary>
        /// Gets or Sets PsiCp
        /// </summary>
        [DataMember(Name = "psiCp", EmitDefaultValue = false)]
        public double PsiCp { get; set; }

        /// <summary>
        /// Gets or Sets PsiCv
        /// </summary>
        [DataMember(Name = "psiCv", EmitDefaultValue = false)]
        public double PsiCv { get; set; }

        /// <summary>
        /// Gets or Sets Avc
        /// </summary>
        [DataMember(Name = "avc", EmitDefaultValue = false)]
        public double Avc { get; set; }

        /// <summary>
        /// Gets or Sets Avc0
        /// </summary>
        [DataMember(Name = "avc0", EmitDefaultValue = false)]
        public double Avc0 { get; set; }

        /// <summary>
        /// Gets or Sets Abrg
        /// </summary>
        [DataMember(Name = "abrg", EmitDefaultValue = false)]
        public double Abrg { get; set; }

        /// <summary>
        /// Gets or Sets ConnectorDiameterReducedByThread
        /// </summary>
        [DataMember(Name = "connectorDiameterReducedByThread", EmitDefaultValue = false)]
        public double ConnectorDiameterReducedByThread { get; set; }

        /// <summary>
        /// Gets or Sets Nbr
        /// </summary>
        [DataMember(Name = "nbr", EmitDefaultValue = false)]
        public double Nbr { get; set; }

        /// <summary>
        /// Gets or Sets CoeffKc
        /// </summary>
        [DataMember(Name = "coeffKc", EmitDefaultValue = false)]
        public double CoeffKc { get; set; }

        /// <summary>
        /// Gets or Sets LambdaA
        /// </summary>
        [DataMember(Name = "lambdaA", EmitDefaultValue = false)]
        public double LambdaA { get; set; }

        /// <summary>
        /// Gets or Sets Npr
        /// </summary>
        [DataMember(Name = "npr", EmitDefaultValue = false)]
        public double Npr { get; set; }

        /// <summary>
        /// Gets or Sets SideFaceReduction
        /// </summary>
        [DataMember(Name = "sideFaceReduction", EmitDefaultValue = false)]
        public double SideFaceReduction { get; set; }

        /// <summary>
        /// Gets or Sets Nsbr
        /// </summary>
        [DataMember(Name = "nsbr", EmitDefaultValue = false)]
        public double Nsbr { get; set; }

        /// <summary>
        /// Gets or Sets ShearBearingLength
        /// </summary>
        [DataMember(Name = "shearBearingLength", EmitDefaultValue = false)]
        public double ShearBearingLength { get; set; }

        /// <summary>
        /// Gets or Sets SpacingShearBreakout
        /// </summary>
        [DataMember(Name = "spacingShearBreakout", EmitDefaultValue = false)]
        public double SpacingShearBreakout { get; set; }

        /// <summary>
        /// Gets or Sets CaNorm
        /// </summary>
        [DataMember(Name = "caNorm", EmitDefaultValue = false)]
        public double CaNorm { get; set; }

        /// <summary>
        /// Gets or Sets CaPerp
        /// </summary>
        [DataMember(Name = "caPerp", EmitDefaultValue = false)]
        public double CaPerp { get; set; }

        /// <summary>
        /// Gets or Sets CaPerpMax
        /// </summary>
        [DataMember(Name = "caPerpMax", EmitDefaultValue = false)]
        public double CaPerpMax { get; set; }

        /// <summary>
        /// Gets or Sets PsiEdv
        /// </summary>
        [DataMember(Name = "psiEdv", EmitDefaultValue = false)]
        public double PsiEdv { get; set; }

        /// <summary>
        /// Gets or Sets Vbr
        /// </summary>
        [DataMember(Name = "vbr", EmitDefaultValue = false)]
        public double Vbr { get; set; }

        /// <summary>
        /// Gets or Sets Ncp
        /// </summary>
        [DataMember(Name = "ncp", EmitDefaultValue = false)]
        public double Ncp { get; set; }

        /// <summary>
        /// Gets or Sets CoeffKcp
        /// </summary>
        [DataMember(Name = "coeffKcp", EmitDefaultValue = false)]
        public double CoeffKcp { get; set; }

        /// <summary>
        /// Gets or Sets ConnectorFy
        /// </summary>
        [DataMember(Name = "connectorFy", EmitDefaultValue = false)]
        public double ConnectorFy { get; set; }

        /// <summary>
        /// Gets or Sets PhiShear
        /// </summary>
        [DataMember(Name = "phiShear", EmitDefaultValue = false)]
        public double PhiShear { get; set; }

        /// <summary>
        /// Gets or Sets OffsetValueAnc0
        /// </summary>
        [DataMember(Name = "offsetValueAnc0", EmitDefaultValue = false)]
        public double OffsetValueAnc0 { get; set; }

        /// <summary>
        /// Gets or Sets AnchorAreaRedByThread
        /// </summary>
        [DataMember(Name = "anchorAreaRedByThread", EmitDefaultValue = false)]
        public double AnchorAreaRedByThread { get; set; }

        /// <summary>
        /// Gets or Sets AnchorDiamRedByThread
        /// </summary>
        [DataMember(Name = "anchorDiamRedByThread", EmitDefaultValue = false)]
        public double AnchorDiamRedByThread { get; set; }

        /// <summary>
        /// Gets or Sets SAncMax
        /// </summary>
        [DataMember(Name = "s_AncMax", EmitDefaultValue = false)]
        public double SAncMax { get; set; }

        /// <summary>
        /// Gets or Sets SAncMin
        /// </summary>
        [DataMember(Name = "s_AncMin", EmitDefaultValue = false)]
        public double SAncMin { get; set; }

        /// <summary>
        /// Gets or Sets AreStandOffAnchors
        /// </summary>
        [DataMember(Name = "areStandOffAnchors", EmitDefaultValue = true)]
        public bool AreStandOffAnchors { get; set; }

        /// <summary>
        /// Gets or Sets Nb
        /// </summary>
        [DataMember(Name = "nb", EmitDefaultValue = false)]
        public double Nb { get; set; }

        /// <summary>
        /// Gets or Sets Nsb
        /// </summary>
        [DataMember(Name = "nsb", EmitDefaultValue = false)]
        public double Nsb { get; set; }

        /// <summary>
        /// Gets or Sets ThreadReductionFactor
        /// </summary>
        [DataMember(Name = "threadReductionFactor", EmitDefaultValue = false)]
        public double ThreadReductionFactor { get; set; }

        /// <summary>
        /// Gets or Sets CoeffK2CountersunkAnchors
        /// </summary>
        [DataMember(Name = "coeffK2CountersunkAnchors", EmitDefaultValue = false)]
        public double CoeffK2CountersunkAnchors { get; set; }

        /// <summary>
        /// Gets or Sets Nrks
        /// </summary>
        [DataMember(Name = "nrks", EmitDefaultValue = false)]
        public double Nrks { get; set; }

        /// <summary>
        /// Gets or Sets GammaMcEN
        /// </summary>
        [DataMember(Name = "gammaMc_EN", EmitDefaultValue = false)]
        public double GammaMcEN { get; set; }

        /// <summary>
        /// Gets or Sets GammaCEN
        /// </summary>
        [DataMember(Name = "gammaC_EN", EmitDefaultValue = false)]
        public double GammaCEN { get; set; }

        /// <summary>
        /// Gets or Sets Nrkc
        /// </summary>
        [DataMember(Name = "nrkc", EmitDefaultValue = false)]
        public double Nrkc { get; set; }

        /// <summary>
        /// Gets or Sets Nrkp
        /// </summary>
        [DataMember(Name = "nrkp", EmitDefaultValue = false)]
        public double Nrkp { get; set; }

        /// <summary>
        /// Gets or Sets CoeffK2PullOut
        /// </summary>
        [DataMember(Name = "coeffK2PullOut", EmitDefaultValue = false)]
        public double CoeffK2PullOut { get; set; }

        /// <summary>
        /// Gets or Sets Nrkcb
        /// </summary>
        [DataMember(Name = "nrkcb", EmitDefaultValue = false)]
        public double Nrkcb { get; set; }

        /// <summary>
        /// Gets or Sets GammaMsTensionEN
        /// </summary>
        [DataMember(Name = "gammaMsTension_EN", EmitDefaultValue = false)]
        public double GammaMsTensionEN { get; set; }

        /// <summary>
        /// Gets or Sets GammaMsShearEN
        /// </summary>
        [DataMember(Name = "gammaMsShear_EN", EmitDefaultValue = false)]
        public double GammaMsShearEN { get; set; }

        /// <summary>
        /// Gets or Sets CoeffK6
        /// </summary>
        [DataMember(Name = "coeffK6", EmitDefaultValue = false)]
        public double CoeffK6 { get; set; }

        /// <summary>
        /// Gets or Sets CoeffK7
        /// </summary>
        [DataMember(Name = "coeffK7", EmitDefaultValue = false)]
        public double CoeffK7 { get; set; }

        /// <summary>
        /// Gets or Sets Vrks0
        /// </summary>
        [DataMember(Name = "vrks0", EmitDefaultValue = false)]
        public double Vrks0 { get; set; }

        /// <summary>
        /// Gets or Sets Vrkc
        /// </summary>
        [DataMember(Name = "vrkc", EmitDefaultValue = false)]
        public double Vrkc { get; set; }

        /// <summary>
        /// Gets or Sets Vrkcp
        /// </summary>
        [DataMember(Name = "vrkcp", EmitDefaultValue = false)]
        public double Vrkcp { get; set; }

        /// <summary>
        /// Gets or Sets IntegralNormalForce
        /// </summary>
        [DataMember(Name = "integralNormalForce", EmitDefaultValue = false)]
        public double IntegralNormalForce { get; set; }

        /// <summary>
        /// Gets or Sets IntegralShearForce
        /// </summary>
        [DataMember(Name = "integralShearForce", EmitDefaultValue = false)]
        public double IntegralShearForce { get; set; }

        /// <summary>
        /// Gets or Sets ApplyConeBreakoutCheck
        /// </summary>
        [DataMember(Name = "applyConeBreakoutCheck", EmitDefaultValue = true)]
        public bool ApplyConeBreakoutCheck { get; set; }

        /// <summary>
        /// Gets or Sets BearingCoeffAlphaB0
        /// </summary>
        [DataMember(Name = "bearingCoeff_AlphaB0", EmitDefaultValue = false)]
        public double BearingCoeffAlphaB0 { get; set; }

        /// <summary>
        /// Gets or Sets BearingCoeffAlphaB1
        /// </summary>
        [DataMember(Name = "bearingCoeff_AlphaB1", EmitDefaultValue = false)]
        public double BearingCoeffAlphaB1 { get; set; }

        /// <summary>
        /// Gets or Sets BearingCoeffK1
        /// </summary>
        [DataMember(Name = "bearingCoeff_K1", EmitDefaultValue = false)]
        public double BearingCoeffK1 { get; set; }

        /// <summary>
        /// Gets or Sets PunchingResistance
        /// </summary>
        [DataMember(Name = "punchingResistance", EmitDefaultValue = false)]
        public double PunchingResistance { get; set; }

        /// <summary>
        /// Gets or Sets ConnectorHeadDiameter
        /// </summary>
        [DataMember(Name = "connectorHeadDiameter", EmitDefaultValue = false)]
        public double ConnectorHeadDiameter { get; set; }

        /// <summary>
        /// Gets or Sets DistanceE1EN
        /// </summary>
        [DataMember(Name = "distance_e1_EN", EmitDefaultValue = false)]
        public double DistanceE1EN { get; set; }

        /// <summary>
        /// Gets or Sets DistanceE2EN
        /// </summary>
        [DataMember(Name = "distance_e2_EN", EmitDefaultValue = false)]
        public double DistanceE2EN { get; set; }

        /// <summary>
        /// Gets or Sets SpacingP1EN
        /// </summary>
        [DataMember(Name = "spacing_p1_EN", EmitDefaultValue = false)]
        public double SpacingP1EN { get; set; }

        /// <summary>
        /// Gets or Sets SpacingP2EN
        /// </summary>
        [DataMember(Name = "spacing_p2_EN", EmitDefaultValue = false)]
        public double SpacingP2EN { get; set; }

        /// <summary>
        /// Gets or Sets NnpSNIP
        /// </summary>
        [DataMember(Name = "nnp_SNIP", EmitDefaultValue = false)]
        public double NnpSNIP { get; set; }

        /// <summary>
        /// Gets or Sets GammaNpSNIP
        /// </summary>
        [DataMember(Name = "gammaNp_SNIP", EmitDefaultValue = false)]
        public double GammaNpSNIP { get; set; }

        /// <summary>
        /// Gets or Sets GammaBtSNIP
        /// </summary>
        [DataMember(Name = "gammaBt_SNIP", EmitDefaultValue = false)]
        public double GammaBtSNIP { get; set; }

        /// <summary>
        /// Gets or Sets GammaNcSNIP
        /// </summary>
        [DataMember(Name = "gammaNc_SNIP", EmitDefaultValue = false)]
        public double GammaNcSNIP { get; set; }

        /// <summary>
        /// Gets or Sets Mns0SNIP
        /// </summary>
        [DataMember(Name = "mns0_SNIP", EmitDefaultValue = false)]
        public double Mns0SNIP { get; set; }

        /// <summary>
        /// Gets or Sets MnsSNIP
        /// </summary>
        [DataMember(Name = "mnsSNIP", EmitDefaultValue = false)]
        public double MnsSNIP { get; set; }

        /// <summary>
        /// Gets or Sets PhiBSNIP
        /// </summary>
        [DataMember(Name = "phiB_SNIP", EmitDefaultValue = false)]
        public double PhiBSNIP { get; set; }

        /// <summary>
        /// Gets or Sets GammaVcpSNIP
        /// </summary>
        [DataMember(Name = "gammaVcpSNIP", EmitDefaultValue = false)]
        public double GammaVcpSNIP { get; set; }

        /// <summary>
        /// Gets or Sets RbaSNIP
        /// </summary>
        [DataMember(Name = "rba_SNIP", EmitDefaultValue = false)]
        public double RbaSNIP { get; set; }

        /// <summary>
        /// Gets or Sets CoeffK0SNIP
        /// </summary>
        [DataMember(Name = "coeffK0SNIP", EmitDefaultValue = false)]
        public double CoeffK0SNIP { get; set; }

        /// <summary>
        /// Gets or Sets CCrNSNIP
        /// </summary>
        [DataMember(Name = "cCrN_SNIP", EmitDefaultValue = false)]
        public double CCrNSNIP { get; set; }

        /// <summary>
        /// Gets or Sets SCrNSNIP
        /// </summary>
        [DataMember(Name = "sCrN_SNIP", EmitDefaultValue = false)]
        public double SCrNSNIP { get; set; }

        /// <summary>
        /// Gets or Sets CoeffK3EdgeFailureSNIP
        /// </summary>
        [DataMember(Name = "coeffK3EdgeFailure_SNIP", EmitDefaultValue = false)]
        public double CoeffK3EdgeFailureSNIP { get; set; }

        /// <summary>
        /// Gets or Sets GammaVcSNIP
        /// </summary>
        [DataMember(Name = "gammaVc_SNIP", EmitDefaultValue = false)]
        public double GammaVcSNIP { get; set; }

        /// <summary>
        /// Gets or Sets CoeffPryOutKSNIP
        /// </summary>
        [DataMember(Name = "coeffPryOutK_SNIP", EmitDefaultValue = false)]
        public double CoeffPryOutKSNIP { get; set; }

        /// <summary>
        /// Gets or Sets S
        /// </summary>
        [DataMember(Name = "s", EmitDefaultValue = false)]
        public double S { get; set; }

        /// <summary>
        /// Gets or Sets Z
        /// </summary>
        [DataMember(Name = "z", EmitDefaultValue = false)]
        public double Z { get; set; }

        /// <summary>
        /// Gets or Sets Ze
        /// </summary>
        [DataMember(Name = "ze", EmitDefaultValue = false)]
        public double Ze { get; set; }

        /// <summary>
        /// Gets or Sets Fy
        /// </summary>
        [DataMember(Name = "fy", EmitDefaultValue = false)]
        public double Fy { get; set; }

        /// <summary>
        /// Gets or Sets Fu
        /// </summary>
        [DataMember(Name = "fu", EmitDefaultValue = false)]
        public double Fu { get; set; }

        /// <summary>
        /// Gets or Sets Aw
        /// </summary>
        [DataMember(Name = "aw", EmitDefaultValue = false)]
        public double Aw { get; set; }

        /// <summary>
        /// Gets or Sets FactorAlphaA
        /// </summary>
        [DataMember(Name = "factorAlphaA", EmitDefaultValue = false)]
        public double FactorAlphaA { get; set; }

        /// <summary>
        /// Gets or Sets ConstantAplhaB
        /// </summary>
        [DataMember(Name = "constantAplhaB", EmitDefaultValue = false)]
        public double ConstantAplhaB { get; set; }

        /// <summary>
        /// Gets or Sets LambdaN
        /// </summary>
        [DataMember(Name = "lambdaN", EmitDefaultValue = false)]
        public double LambdaN { get; set; }

        /// <summary>
        /// Gets or Sets Ds
        /// </summary>
        [DataMember(Name = "ds", EmitDefaultValue = false)]
        public double Ds { get; set; }

        /// <summary>
        /// Gets or Sets Is
        /// </summary>
        [DataMember(Name = "is", EmitDefaultValue = false)]
        public double Is { get; set; }

        /// <summary>
        /// Gets or Sets R
        /// </summary>
        [DataMember(Name = "r", EmitDefaultValue = false)]
        public double R { get; set; }

        /// <summary>
        /// Gets or Sets CoeffKf
        /// </summary>
        [DataMember(Name = "coeffKf", EmitDefaultValue = false)]
        public double CoeffKf { get; set; }

        /// <summary>
        /// Gets or Sets Le
        /// </summary>
        [DataMember(Name = "le", EmitDefaultValue = false)]
        public double Le { get; set; }

        /// <summary>
        /// Gets or Sets FactorEta
        /// </summary>
        [DataMember(Name = "factorEta", EmitDefaultValue = false)]
        public double FactorEta { get; set; }

        /// <summary>
        /// Gets or Sets Lambda
        /// </summary>
        [DataMember(Name = "lambda", EmitDefaultValue = false)]
        public double Lambda { get; set; }

        /// <summary>
        /// Gets or Sets FactorKsi
        /// </summary>
        [DataMember(Name = "factorKsi", EmitDefaultValue = false)]
        public double FactorKsi { get; set; }

        /// <summary>
        /// Gets or Sets FactorAlphaC
        /// </summary>
        [DataMember(Name = "factorAlphaC", EmitDefaultValue = false)]
        public double FactorAlphaC { get; set; }

        /// <summary>
        /// Gets or Sets FactorKe
        /// </summary>
        [DataMember(Name = "factorKe", EmitDefaultValue = false)]
        public double FactorKe { get; set; }

        /// <summary>
        /// Gets or Sets Nc
        /// </summary>
        [DataMember(Name = "nc", EmitDefaultValue = false)]
        public double Nc { get; set; }

        /// <summary>
        /// Gets or Sets Ns
        /// </summary>
        [DataMember(Name = "ns", EmitDefaultValue = false)]
        public double Ns { get; set; }

        /// <summary>
        /// Gets or Sets Nt
        /// </summary>
        [DataMember(Name = "nt", EmitDefaultValue = false)]
        public double Nt { get; set; }

        /// <summary>
        /// Gets or Sets Lgap
        /// </summary>
        [DataMember(Name = "lgap", EmitDefaultValue = false)]
        public double Lgap { get; set; }

        /// <summary>
        /// Gets or Sets BasePlateTh
        /// </summary>
        [DataMember(Name = "basePlateTh", EmitDefaultValue = false)]
        public double BasePlateTh { get; set; }

        /// <summary>
        /// Gets or Sets InteractionAxialLoadBending
        /// </summary>
        [DataMember(Name = "interactionAxialLoadBending", EmitDefaultValue = false)]
        public double InteractionAxialLoadBending { get; set; }

        /// <summary>
        /// Gets or Sets CoeffN
        /// </summary>
        [DataMember(Name = "coeffN", EmitDefaultValue = false)]
        public double CoeffN { get; set; }

        /// <summary>
        /// Gets or Sets Fe
        /// </summary>
        [DataMember(Name = "fe", EmitDefaultValue = false)]
        public double Fe { get; set; }

        /// <summary>
        /// Gets or Sets E
        /// </summary>
        [DataMember(Name = "e", EmitDefaultValue = false)]
        public double E { get; set; }

        /// <summary>
        /// Gets or Sets LambdaSlenderness
        /// </summary>
        [DataMember(Name = "lambdaSlenderness", EmitDefaultValue = false)]
        public double LambdaSlenderness { get; set; }

        /// <summary>
        /// Gets or Sets Av
        /// </summary>
        [DataMember(Name = "av", EmitDefaultValue = false)]
        public double Av { get; set; }

        /// <summary>
        /// Gets or Sets PhiLRFD
        /// </summary>
        [DataMember(Name = "phiLRFD", EmitDefaultValue = false)]
        public double PhiLRFD { get; set; }

        /// <summary>
        /// Gets or Sets Omega
        /// </summary>
        [DataMember(Name = "omega", EmitDefaultValue = false)]
        public double Omega { get; set; }

        /// <summary>
        /// Gets or Sets BasePlateContactTh
        /// </summary>
        [DataMember(Name = "basePlateContactTh", EmitDefaultValue = false)]
        public double BasePlateContactTh { get; set; }

        /// <summary>
        /// Gets or Sets LcStandOff
        /// </summary>
        [DataMember(Name = "lcStandOff", EmitDefaultValue = false)]
        public double LcStandOff { get; set; }

        /// <summary>
        /// Gets or Sets ConnectorE
        /// </summary>
        [DataMember(Name = "connectorE", EmitDefaultValue = false)]
        public double ConnectorE { get; set; }

        /// <summary>
        /// Gets or Sets FcrStandOffFstEq
        /// </summary>
        [DataMember(Name = "fcrStandOffFstEq", EmitDefaultValue = true)]
        public bool FcrStandOffFstEq { get; set; }

        /// <summary>
        /// Gets or Sets Fcr
        /// </summary>
        [DataMember(Name = "fcr", EmitDefaultValue = false)]
        public double Fcr { get; set; }

        /// <summary>
        /// Gets or Sets PlasticSectionModulus
        /// </summary>
        [DataMember(Name = "plasticSectionModulus", EmitDefaultValue = false)]
        public double PlasticSectionModulus { get; set; }

        /// <summary>
        /// Gets or Sets ElasticSectionModulus
        /// </summary>
        [DataMember(Name = "elasticSectionModulus", EmitDefaultValue = false)]
        public double ElasticSectionModulus { get; set; }

        /// <summary>
        /// Gets or Sets BendingResistanceLimitReached
        /// </summary>
        [DataMember(Name = "bendingResistanceLimitReached", EmitDefaultValue = true)]
        public bool BendingResistanceLimitReached { get; set; }

        /// <summary>
        /// Gets or Sets CoeffK2StandOffEN
        /// </summary>
        [DataMember(Name = "coeffK2StandOff_EN", EmitDefaultValue = false)]
        public double CoeffK2StandOffEN { get; set; }

        /// <summary>
        /// Gets or Sets StandOffNcr
        /// </summary>
        [DataMember(Name = "standOffNcr", EmitDefaultValue = false)]
        public double StandOffNcr { get; set; }

        /// <summary>
        /// Gets or Sets StandOffLambda
        /// </summary>
        [DataMember(Name = "standOffLambda", EmitDefaultValue = false)]
        public double StandOffLambda { get; set; }

        /// <summary>
        /// Gets or Sets StandOffKappa
        /// </summary>
        [DataMember(Name = "standOffKappa", EmitDefaultValue = false)]
        public double StandOffKappa { get; set; }

        /// <summary>
        /// Gets or Sets StandOffPhi
        /// </summary>
        [DataMember(Name = "standOffPhi", EmitDefaultValue = false)]
        public double StandOffPhi { get; set; }

        /// <summary>
        /// Gets or Sets StandOffAlpha
        /// </summary>
        [DataMember(Name = "standOffAlpha", EmitDefaultValue = false)]
        public double StandOffAlpha { get; set; }

        /// <summary>
        /// Gets or Sets Wpl
        /// </summary>
        [DataMember(Name = "wpl", EmitDefaultValue = false)]
        public double Wpl { get; set; }

        /// <summary>
        /// Gets or Sets BoltElongation
        /// </summary>
        [DataMember(Name = "boltElongation", EmitDefaultValue = false)]
        public double BoltElongation { get; set; }

        /// <summary>
        /// Gets or Sets TnbIS
        /// </summary>
        [DataMember(Name = "tnb_IS", EmitDefaultValue = false)]
        public double TnbIS { get; set; }

        /// <summary>
        /// Gets or Sets GammaMbIS
        /// </summary>
        [DataMember(Name = "gammaMb_IS", EmitDefaultValue = false)]
        public double GammaMbIS { get; set; }

        /// <summary>
        /// Gets or Sets GammaM0IS
        /// </summary>
        [DataMember(Name = "gammaM0_IS", EmitDefaultValue = false)]
        public double GammaM0IS { get; set; }

        /// <summary>
        /// Gets or Sets BearingResistanceAnchor
        /// </summary>
        [DataMember(Name = "bearingResistance_Anchor", EmitDefaultValue = false)]
        public double BearingResistanceAnchor { get; set; }

        /// <summary>
        /// Gets or Sets BearingForceAnhor
        /// </summary>
        [DataMember(Name = "bearingForce_Anhor", EmitDefaultValue = false)]
        public double BearingForceAnhor { get; set; }

        /// <summary>
        /// Gets or Sets CriticalPlateThicknessAnchor
        /// </summary>
        [DataMember(Name = "criticalPlateThickness_Anchor", EmitDefaultValue = false)]
        public double CriticalPlateThicknessAnchor { get; set; }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public int Id { get; set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name = "name", EmitDefaultValue = true)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets CheckStatus
        /// </summary>
        [DataMember(Name = "checkStatus", EmitDefaultValue = true)]
        public bool CheckStatus { get; set; }

        /// <summary>
        /// Gets or Sets LimitCheckStatus
        /// </summary>
        [DataMember(Name = "limitCheckStatus", EmitDefaultValue = true)]
        public bool LimitCheckStatus { get; set; }

        /// <summary>
        /// Gets or Sets LoadCaseId
        /// </summary>
        [DataMember(Name = "loadCaseId", EmitDefaultValue = false)]
        public int LoadCaseId { get; set; }

        /// <summary>
        /// Gets or Sets LoadCase
        /// </summary>
        [DataMember(Name = "loadCase", EmitDefaultValue = true)]
        public string LoadCase { get; set; }

        /// <summary>
        /// Gets or Sets MaxUnityCheck
        /// </summary>
        [DataMember(Name = "maxUnityCheck", EmitDefaultValue = false)]
        public double MaxUnityCheck { get; set; }

        /// <summary>
        /// Gets or Sets Form
        /// </summary>
        [DataMember(Name = "form", EmitDefaultValue = true)]
        public string Form { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class BoltCheckResDataIdeaStatiCaConnectionChecks {\n");
            sb.Append("  BoltTensionResistance: ").Append(BoltTensionResistance).Append("\n");
            sb.Append("  BoltPunchingResistance: ").Append(BoltPunchingResistance).Append("\n");
            sb.Append("  BoltTensionForce: ").Append(BoltTensionForce).Append("\n");
            sb.Append("  BoltShearResistance: ").Append(BoltShearResistance).Append("\n");
            sb.Append("  BoltShearResistanceAnchor: ").Append(BoltShearResistanceAnchor).Append("\n");
            sb.Append("  BoltShearResistanceAnchorLeverArm: ").Append(BoltShearResistanceAnchorLeverArm).Append("\n");
            sb.Append("  AnchorStiffness: ").Append(AnchorStiffness).Append("\n");
            sb.Append("  ConcretePryOutfailure: ").Append(ConcretePryOutfailure).Append("\n");
            sb.Append("  ConcretePryOutfailureResistance: ").Append(ConcretePryOutfailureResistance).Append("\n");
            sb.Append("  ConcreteEdgefailure: ").Append(ConcreteEdgefailure).Append("\n");
            sb.Append("  ConcreteEdgeFailureResistance: ").Append(ConcreteEdgeFailureResistance).Append("\n");
            sb.Append("  BoltShearResistanceTension: ").Append(BoltShearResistanceTension).Append("\n");
            sb.Append("  BoltBearingResistance: ").Append(BoltBearingResistance).Append("\n");
            sb.Append("  BoltBearingResistancesByPlateID: ").Append(BoltBearingResistancesByPlateID).Append("\n");
            sb.Append("  BoltShearForce: ").Append(BoltShearForce).Append("\n");
            sb.Append("  NumberOfShearPlanes: ").Append(NumberOfShearPlanes).Append("\n");
            sb.Append("  BoltShearForces: ").Append(BoltShearForces).Append("\n");
            sb.Append("  ShearForcesInShearPlanes: ").Append(ShearForcesInShearPlanes).Append("\n");
            sb.Append("  Angle: ").Append(Angle).Append("\n");
            sb.Append("  ConeBreakoutResistance: ").Append(ConeBreakoutResistance).Append("\n");
            sb.Append("  UnityCheckTension: ").Append(UnityCheckTension).Append("\n");
            sb.Append("  UnityCheckTensionMax: ").Append(UnityCheckTensionMax).Append("\n");
            sb.Append("  UnityCheckTensionRes: ").Append(UnityCheckTensionRes).Append("\n");
            sb.Append("  UnityCheckTensionBreakout: ").Append(UnityCheckTensionBreakout).Append("\n");
            sb.Append("  UnityCheckShear: ").Append(UnityCheckShear).Append("\n");
            sb.Append("  UnityCheckShearMax: ").Append(UnityCheckShearMax).Append("\n");
            sb.Append("  UnityCheckShearRes: ").Append(UnityCheckShearRes).Append("\n");
            sb.Append("  InteractionTensionShear: ").Append(InteractionTensionShear).Append("\n");
            sb.Append("  InteractionTensionShearSteel: ").Append(InteractionTensionShearSteel).Append("\n");
            sb.Append("  InteractionTensionShearSteelBasic: ").Append(InteractionTensionShearSteelBasic).Append("\n");
            sb.Append("  InteractionTensionShearConcrete: ").Append(InteractionTensionShearConcrete).Append("\n");
            sb.Append("  InteractionTensionShearSteelConcrete: ").Append(InteractionTensionShearSteelConcrete).Append("\n");
            sb.Append("  InteractionTensionShearAnchor: ").Append(InteractionTensionShearAnchor).Append("\n");
            sb.Append("  BoltAssemblyName: ").Append(BoltAssemblyName).Append("\n");
            sb.Append("  BoltTensionForceLoadcase: ").Append(BoltTensionForceLoadcase).Append("\n");
            sb.Append("  BoltShearForceLoadcase: ").Append(BoltShearForceLoadcase).Append("\n");
            sb.Append("  BoltInteractionLoadcase: ").Append(BoltInteractionLoadcase).Append("\n");
            sb.Append("  BoltTensionForceLoadcaseId: ").Append(BoltTensionForceLoadcaseId).Append("\n");
            sb.Append("  BoltShearForceLoadcaseId: ").Append(BoltShearForceLoadcaseId).Append("\n");
            sb.Append("  BoltInteractionLoadcaseId: ").Append(BoltInteractionLoadcaseId).Append("\n");
            sb.Append("  ForcesAllLoadCases: ").Append(ForcesAllLoadCases).Append("\n");
            sb.Append("  ElementAxisY: ").Append(ElementAxisY).Append("\n");
            sb.Append("  ElementAxisZ: ").Append(ElementAxisZ).Append("\n");
            sb.Append("  IsDetailingStatusOK: ").Append(IsDetailingStatusOK).Append("\n");
            sb.Append("  IsDetailingStatusForReportOK: ").Append(IsDetailingStatusForReportOK).Append("\n");
            sb.Append("  IsBoltInBending: ").Append(IsBoltInBending).Append("\n");
            sb.Append("  Anchor: ").Append(Anchor).Append("\n");
            sb.Append("  Heff: ").Append(Heff).Append("\n");
            sb.Append("  UnityCheckBearing: ").Append(UnityCheckBearing).Append("\n");
            sb.Append("  AnchorShear: ").Append(AnchorShear).Append("\n");
            sb.Append("  SlottedHole: ").Append(SlottedHole).Append("\n");
            sb.Append("  StiffnessAnchorOK: ").Append(StiffnessAnchorOK).Append("\n");
            sb.Append("  PullOutResistance: ").Append(PullOutResistance).Append("\n");
            sb.Append("  BearingAreaPullOut: ").Append(BearingAreaPullOut).Append("\n");
            sb.Append("  CrackedConcrete: ").Append(CrackedConcrete).Append("\n");
            sb.Append("  CodeType: ").Append(CodeType).Append("\n");
            sb.Append("  ConnectorGripLength: ").Append(ConnectorGripLength).Append("\n");
            sb.Append("  FillerPlatesPackTh: ").Append(FillerPlatesPackTh).Append("\n");
            sb.Append("  FireTemperature: ").Append(FireTemperature).Append("\n");
            sb.Append("  FireDesign: ").Append(FireDesign).Append("\n");
            sb.Append("  KbTheta: ").Append(KbTheta).Append("\n");
            sb.Append("  K2EN: ").Append(K2EN).Append("\n");
            sb.Append("  AlphaVEN: ").Append(AlphaVEN).Append("\n");
            sb.Append("  BetaPEN: ").Append(BetaPEN).Append("\n");
            sb.Append("  PlateThicknessForPunching: ").Append(PlateThicknessForPunching).Append("\n");
            sb.Append("  PlateFuForPunching: ").Append(PlateFuForPunching).Append("\n");
            sb.Append("  BoltHeadOrNutDimension: ").Append(BoltHeadOrNutDimension).Append("\n");
            sb.Append("  GammaM2EN: ").Append(GammaM2EN).Append("\n");
            sb.Append("  GammaMfi: ").Append(GammaMfi).Append("\n");
            sb.Append("  DFbrd: ").Append(DFbrd).Append("\n");
            sb.Append("  ThFbrd: ").Append(ThFbrd).Append("\n");
            sb.Append("  K1: ").Append(K1).Append("\n");
            sb.Append("  Kt: ").Append(Kt).Append("\n");
            sb.Append("  AlphaB: ").Append(AlphaB).Append("\n");
            sb.Append("  BoltPreloadingForce: ").Append(BoltPreloadingForce).Append("\n");
            sb.Append("  GammaM3EN: ").Append(GammaM3EN).Append("\n");
            sb.Append("  KsEN: ").Append(KsEN).Append("\n");
            sb.Append("  NumberOfFrictionSurfaces: ").Append(NumberOfFrictionSurfaces).Append("\n");
            sb.Append("  Acn: ").Append(Acn).Append("\n");
            sb.Append("  Ac0: ").Append(Ac0).Append("\n");
            sb.Append("  N0rkc: ").Append(N0rkc).Append("\n");
            sb.Append("  Psis: ").Append(Psis).Append("\n");
            sb.Append("  GammaC: ").Append(GammaC).Append("\n");
            sb.Append("  GammaInstN: ").Append(GammaInstN).Append("\n");
            sb.Append("  GammaInstV: ").Append(GammaInstV).Append("\n");
            sb.Append("  Nrkc0: ").Append(Nrkc0).Append("\n");
            sb.Append("  NrkcCp: ").Append(NrkcCp).Append("\n");
            sb.Append("  Vrks: ").Append(Vrks).Append("\n");
            sb.Append("  VrksK: ").Append(VrksK).Append("\n");
            sb.Append("  VrksGammaMs: ").Append(VrksGammaMs).Append("\n");
            sb.Append("  VrkGammaMc: ").Append(VrkGammaMc).Append("\n");
            sb.Append("  VrksAs: ").Append(VrksAs).Append("\n");
            sb.Append("  VrksFuk: ").Append(VrksFuk).Append("\n");
            sb.Append("  Grouting: ").Append(Grouting).Append("\n");
            sb.Append("  VrksMrks: ").Append(VrksMrks).Append("\n");
            sb.Append("  VrksAlfaM: ").Append(VrksAlfaM).Append("\n");
            sb.Append("  VrksL: ").Append(VrksL).Append("\n");
            sb.Append("  InteractionBetaN: ").Append(InteractionBetaN).Append("\n");
            sb.Append("  InteractionBetaV: ").Append(InteractionBetaV).Append("\n");
            sb.Append("  InteractionAlfa: ").Append(InteractionAlfa).Append("\n");
            sb.Append("  V0rkc: ").Append(V0rkc).Append("\n");
            sb.Append("  A0cv: ").Append(A0cv).Append("\n");
            sb.Append("  DecreaseFtrd: ").Append(DecreaseFtrd).Append("\n");
            sb.Append("  CompressionResistance: ").Append(CompressionResistance).Append("\n");
            sb.Append("  MomentResistance: ").Append(MomentResistance).Append("\n");
            sb.Append("  UnityCheckCompression: ").Append(UnityCheckCompression).Append("\n");
            sb.Append("  UnityCheckBending: ").Append(UnityCheckBending).Append("\n");
            sb.Append("  BoltMomentForce: ").Append(BoltMomentForce).Append("\n");
            sb.Append("  BearingResistance: ").Append(BearingResistance).Append("\n");
            sb.Append("  CriticalTensionPreloaded: ").Append(CriticalTensionPreloaded).Append("\n");
            sb.Append("  CriticalShearPreloaded: ").Append(CriticalShearPreloaded).Append("\n");
            sb.Append("  AlphaBEN: ").Append(AlphaBEN).Append("\n");
            sb.Append("  K1EN: ").Append(K1EN).Append("\n");
            sb.Append("  KtEN: ").Append(KtEN).Append("\n");
            sb.Append("  IsHorizontalTying: ").Append(IsHorizontalTying).Append("\n");
            sb.Append("  BoltTensionResistanceCombined: ").Append(BoltTensionResistanceCombined).Append("\n");
            sb.Append("  Asd: ").Append(Asd).Append("\n");
            sb.Append("  Ab: ").Append(Ab).Append("\n");
            sb.Append("  Fnt: ").Append(Fnt).Append("\n");
            sb.Append("  Fnv: ").Append(Fnv).Append("\n");
            sb.Append("  Frv: ").Append(Frv).Append("\n");
            sb.Append("  Fntt: ").Append(Fntt).Append("\n");
            sb.Append("  BoltTensileShearOmega: ").Append(BoltTensileShearOmega).Append("\n");
            sb.Append("  BoltTensileShearPhi: ").Append(BoltTensileShearPhi).Append("\n");
            sb.Append("  BoltTensileShearCombinedPhi: ").Append(BoltTensileShearCombinedPhi).Append("\n");
            sb.Append("  BoltTensileShearCombinedOmega: ").Append(BoltTensileShearCombinedOmega).Append("\n");
            sb.Append("  FuBearing: ").Append(FuBearing).Append("\n");
            sb.Append("  MassFbrd: ").Append(MassFbrd).Append("\n");
            sb.Append("  BoltBearingPhi: ").Append(BoltBearingPhi).Append("\n");
            sb.Append("  BoltBearingOmega: ").Append(BoltBearingOmega).Append("\n");
            sb.Append("  BoltSlipResPhi: ").Append(BoltSlipResPhi).Append("\n");
            sb.Append("  BoltSlipResOmega: ").Append(BoltSlipResOmega).Append("\n");
            sb.Append("  Fc: ").Append(Fc).Append("\n");
            sb.Append("  Dnom: ").Append(Dnom).Append("\n");
            sb.Append("  Alength: ").Append(Alength).Append("\n");
            sb.Append("  Ce: ").Append(Ce).Append("\n");
            sb.Append("  ReductionFactorTension: ").Append(ReductionFactorTension).Append("\n");
            sb.Append("  ReductionFactorShear: ").Append(ReductionFactorShear).Append("\n");
            sb.Append("  SlipResistanceCoeff: ").Append(SlipResistanceCoeff).Append("\n");
            sb.Append("  LinearInteraction: ").Append(LinearInteraction).Append("\n");
            sb.Append("  LinearInteractionConcrete: ").Append(LinearInteractionConcrete).Append("\n");
            sb.Append("  StandOffGap: ").Append(StandOffGap).Append("\n");
            sb.Append("  BearingCriticalDist: ").Append(BearingCriticalDist).Append("\n");
            sb.Append("  BearingForce: ").Append(BearingForce).Append("\n");
            sb.Append("  BearingPlateThickness: ").Append(BearingPlateThickness).Append("\n");
            sb.Append("  BearingPlateFu: ").Append(BearingPlateFu).Append("\n");
            sb.Append("  ConcretePullOutResistance: ").Append(ConcretePullOutResistance).Append("\n");
            sb.Append("  ConcreteShearBreakOutResistance: ").Append(ConcreteShearBreakOutResistance).Append("\n");
            sb.Append("  TearOutResistance: ").Append(TearOutResistance).Append("\n");
            sb.Append("  VnsbIS: ").Append(VnsbIS).Append("\n");
            sb.Append("  BetaLgIS: ").Append(BetaLgIS).Append("\n");
            sb.Append("  BetaPacking: ").Append(BetaPacking).Append("\n");
            sb.Append("  KbIS: ").Append(KbIS).Append("\n");
            sb.Append("  VnpbIS: ").Append(VnpbIS).Append("\n");
            sb.Append("  PreloadingForceProofStress: ").Append(PreloadingForceProofStress).Append("\n");
            sb.Append("  GammaMfIS: ").Append(GammaMfIS).Append("\n");
            sb.Append("  VnsfIS: ").Append(VnsfIS).Append("\n");
            sb.Append("  TnfIS: ").Append(TnfIS).Append("\n");
            sb.Append("  BoltHoleBearResRedFactor: ").Append(BoltHoleBearResRedFactor).Append("\n");
            sb.Append("  PtHK: ").Append(PtHK).Append("\n");
            sb.Append("  PsHK: ").Append(PsHK).Append("\n");
            sb.Append("  PbbHK: ").Append(PbbHK).Append("\n");
            sb.Append("  RbnSNIP: ").Append(RbnSNIP).Append("\n");
            sb.Append("  PhiNsSNIP: ").Append(PhiNsSNIP).Append("\n");
            sb.Append("  ConnectorTensileArea: ").Append(ConnectorTensileArea).Append("\n");
            sb.Append("  ConnectorFu: ").Append(ConnectorFu).Append("\n");
            sb.Append("  PhiBoltTensionShear: ").Append(PhiBoltTensionShear).Append("\n");
            sb.Append("  BoltBearForces: ").Append(BoltBearForces).Append("\n");
            sb.Append("  ConnectorCoreArea: ").Append(ConnectorCoreArea).Append("\n");
            sb.Append("  ConnectorGrossArea: ").Append(ConnectorGrossArea).Append("\n");
            sb.Append("  ShearReductionFactor: ").Append(ShearReductionFactor).Append("\n");
            sb.Append("  BoltBearingForce: ").Append(BoltBearingForce).Append("\n");
            sb.Append("  ConnectorDiameter: ").Append(ConnectorDiameter).Append("\n");
            sb.Append("  BoreHoleDiameter: ").Append(BoreHoleDiameter).Append("\n");
            sb.Append("  ConnectorEffDiameter: ").Append(ConnectorEffDiameter).Append("\n");
            sb.Append("  ConnectorBoreHole: ").Append(ConnectorBoreHole).Append("\n");
            sb.Append("  BoltMinEdgeDist: ").Append(BoltMinEdgeDist).Append("\n");
            sb.Append("  BoltMinInterDist: ").Append(BoltMinInterDist).Append("\n");
            sb.Append("  CriticalPlateThicknessTearOut: ").Append(CriticalPlateThicknessTearOut).Append("\n");
            sb.Append("  CriticalPlateYieldStrengthTearOut: ").Append(CriticalPlateYieldStrengthTearOut).Append("\n");
            sb.Append("  CriticalPlateTensileStrengthTearOut: ").Append(CriticalPlateTensileStrengthTearOut).Append("\n");
            sb.Append("  TearOutDistance: ").Append(TearOutDistance).Append("\n");
            sb.Append("  PhiBearing: ").Append(PhiBearing).Append("\n");
            sb.Append("  ShearPlaneThread: ").Append(ShearPlaneThread).Append("\n");
            sb.Append("  DetailingChecksBolt: ").Append(DetailingChecksBolt).Append("\n");
            sb.Append("  ThinPlatesValidityEN: ").Append(ThinPlatesValidityEN).Append("\n");
            sb.Append("  IsAnyThinPlateInConnectedPlates: ").Append(IsAnyThinPlateInConnectedPlates).Append("\n");
            sb.Append("  RbtSNIP: ").Append(RbtSNIP).Append("\n");
            sb.Append("  RbsSNIP: ").Append(RbsSNIP).Append("\n");
            sb.Append("  RbpSNIP: ").Append(RbpSNIP).Append("\n");
            sb.Append("  GammaBShearSNIP: ").Append(GammaBShearSNIP).Append("\n");
            sb.Append("  GammaBBearingSNIP: ").Append(GammaBBearingSNIP).Append("\n");
            sb.Append("  BearingDetailingErrorsSNIP: ").Append(BearingDetailingErrorsSNIP).Append("\n");
            sb.Append("  CriticalPlateThickness: ").Append(CriticalPlateThickness).Append("\n");
            sb.Append("  ConnectorShearArea: ").Append(ConnectorShearArea).Append("\n");
            sb.Append("  ShearPlateThreadCoeff: ").Append(ShearPlateThreadCoeff).Append("\n");
            sb.Append("  BoltShearForceAngles: ").Append(BoltShearForceAngles).Append("\n");
            sb.Append("  TearOutForce: ").Append(TearOutForce).Append("\n");
            sb.Append("  ShearAreaTearOut: ").Append(ShearAreaTearOut).Append("\n");
            sb.Append("  CriticalPlateTensileStrength: ").Append(CriticalPlateTensileStrength).Append("\n");
            sb.Append("  CriticalPlateYieldStrength: ").Append(CriticalPlateYieldStrength).Append("\n");
            sb.Append("  CriticalPlateBearingStrength: ").Append(CriticalPlateBearingStrength).Append("\n");
            sb.Append("  PhiU: ").Append(PhiU).Append("\n");
            sb.Append("  EdgeDistances: ").Append(EdgeDistances).Append("\n");
            sb.Append("  InterDistances: ").Append(InterDistances).Append("\n");
            sb.Append("  AreHolesSlotted: ").Append(AreHolesSlotted).Append("\n");
            sb.Append("  BoltShearType: ").Append(BoltShearType).Append("\n");
            sb.Append("  UnityCheckShearCalc: ").Append(UnityCheckShearCalc).Append("\n");
            sb.Append("  UnityCheckTearOut: ").Append(UnityCheckTearOut).Append("\n");
            sb.Append("  TearOutCoeff: ").Append(TearOutCoeff).Append("\n");
            sb.Append("  BearingCoeff: ").Append(BearingCoeff).Append("\n");
            sb.Append("  ResidualTensileResistance: ").Append(ResidualTensileResistance).Append("\n");
            sb.Append("  IsFntTableValue: ").Append(IsFntTableValue).Append("\n");
            sb.Append("  IsFnvTableValue: ").Append(IsFnvTableValue).Append("\n");
            sb.Append("  PhiTensileShearCombined: ").Append(PhiTensileShearCombined).Append("\n");
            sb.Append("  TensileStressInInteraction: ").Append(TensileStressInInteraction).Append("\n");
            sb.Append("  InteractionCheckOutcome: ").Append(InteractionCheckOutcome).Append("\n");
            sb.Append("  OmegaTensileShear: ").Append(OmegaTensileShear).Append("\n");
            sb.Append("  OmegaTensileShearCombined: ").Append(OmegaTensileShearCombined).Append("\n");
            sb.Append("  OmegaBearing: ").Append(OmegaBearing).Append("\n");
            sb.Append("  FbtCHN: ").Append(FbtCHN).Append("\n");
            sb.Append("  FbvCHN: ").Append(FbvCHN).Append("\n");
            sb.Append("  FbcCHN: ").Append(FbcCHN).Append("\n");
            sb.Append("  BearingForceBolt: ").Append(BearingForceBolt).Append("\n");
            sb.Append("  BearingForceConParts: ").Append(BearingForceConParts).Append("\n");
            sb.Append("  CriticalBoltBearingStrength: ").Append(CriticalBoltBearingStrength).Append("\n");
            sb.Append("  BearingResistanceBolt: ").Append(BearingResistanceBolt).Append("\n");
            sb.Append("  BearingResistanceConParts: ").Append(BearingResistanceConParts).Append("\n");
            sb.Append("  CriticalPlateThicknessBolt: ").Append(CriticalPlateThicknessBolt).Append("\n");
            sb.Append("  CriticalPlateThicknessConParts: ").Append(CriticalPlateThicknessConParts).Append("\n");
            sb.Append("  CriticalPlateBearingStrengthConParts: ").Append(CriticalPlateBearingStrengthConParts).Append("\n");
            sb.Append("  UnityCheckBearingBolt: ").Append(UnityCheckBearingBolt).Append("\n");
            sb.Append("  UnityCheckBearingConParts: ").Append(UnityCheckBearingConParts).Append("\n");
            sb.Append("  ApplyBearingCheck: ").Append(ApplyBearingCheck).Append("\n");
            sb.Append("  SlipCoeff: ").Append(SlipCoeff).Append("\n");
            sb.Append("  Nti: ").Append(Nti).Append("\n");
            sb.Append("  CoeffKh: ").Append(CoeffKh).Append("\n");
            sb.Append("  SlipFactorCs: ").Append(SlipFactorCs).Append("\n");
            sb.Append("  SlipCoeffKs: ").Append(SlipCoeffKs).Append("\n");
            sb.Append("  SlipGammaHSNIP: ").Append(SlipGammaHSNIP).Append("\n");
            sb.Append("  SlipGammaBSNIP: ").Append(SlipGammaBSNIP).Append("\n");
            sb.Append("  SlipGammaBtensSNIP: ").Append(SlipGammaBtensSNIP).Append("\n");
            sb.Append("  DesignPreloadStrength: ").Append(DesignPreloadStrength).Append("\n");
            sb.Append("  Qbh: ").Append(Qbh).Append("\n");
            sb.Append("  BoltPreloadedForce: ").Append(BoltPreloadedForce).Append("\n");
            sb.Append("  Tb: ").Append(Tb).Append("\n");
            sb.Append("  ConstDu: ").Append(ConstDu).Append("\n");
            sb.Append("  FillersFactorHf: ").Append(FillersFactorHf).Append("\n");
            sb.Append("  CoeffKsc: ").Append(CoeffKsc).Append("\n");
            sb.Append("  OmegaSlipRes: ").Append(OmegaSlipRes).Append("\n");
            sb.Append("  PreBoltHoleFactor: ").Append(PreBoltHoleFactor).Append("\n");
            sb.Append("  IsPreloadedForceTableValue: ").Append(IsPreloadedForceTableValue).Append("\n");
            sb.Append("  PhiMsTension: ").Append(PhiMsTension).Append("\n");
            sb.Append("  PhiMsShear: ").Append(PhiMsShear).Append("\n");
            sb.Append("  PhiBolt: ").Append(PhiBolt).Append("\n");
            sb.Append("  PhiMc: ").Append(PhiMc).Append("\n");
            sb.Append("  PsiSn: ").Append(PsiSn).Append("\n");
            sb.Append("  PsiRen: ").Append(PsiRen).Append("\n");
            sb.Append("  PsiEcn: ").Append(PsiEcn).Append("\n");
            sb.Append("  PsiMN: ").Append(PsiMN).Append("\n");
            sb.Append("  CoeffK1ConeBreakOut: ").Append(CoeffK1ConeBreakOut).Append("\n");
            sb.Append("  CoeffK1PullOut: ").Append(CoeffK1PullOut).Append("\n");
            sb.Append("  CoeffK5: ").Append(CoeffK5).Append("\n");
            sb.Append("  CoeffK9: ").Append(CoeffK9).Append("\n");
            sb.Append("  ConcreteConeCheckInTensionFailed: ").Append(ConcreteConeCheckInTensionFailed).Append("\n");
            sb.Append("  UnityCheckConeTensionRes: ").Append(UnityCheckConeTensionRes).Append("\n");
            sb.Append("  UnityCheckConcretePullOutRes: ").Append(UnityCheckConcretePullOutRes).Append("\n");
            sb.Append("  CaMin: ").Append(CaMin).Append("\n");
            sb.Append("  CaMax: ").Append(CaMax).Append("\n");
            sb.Append("  EccN: ").Append(EccN).Append("\n");
            sb.Append("  Acn0: ").Append(Acn0).Append("\n");
            sb.Append("  Fyf: ").Append(Fyf).Append("\n");
            sb.Append("  Fuf: ").Append(Fuf).Append("\n");
            sb.Append("  NrkcForce: ").Append(NrkcForce).Append("\n");
            sb.Append("  Hemb: ").Append(Hemb).Append("\n");
            sb.Append("  IsHeffReduced: ").Append(IsHeffReduced).Append("\n");
            sb.Append("  HeffReduction: ").Append(HeffReduction).Append("\n");
            sb.Append("  FtAnc: ").Append(FtAnc).Append("\n");
            sb.Append("  FtBlowOut: ").Append(FtBlowOut).Append("\n");
            sb.Append("  AnchorTypeSize: ").Append(AnchorTypeSize).Append("\n");
            sb.Append("  Ah: ").Append(Ah).Append("\n");
            sb.Append("  NblowOut: ").Append(NblowOut).Append("\n");
            sb.Append("  SblowOut: ").Append(SblowOut).Append("\n");
            sb.Append("  Acnb: ").Append(Acnb).Append("\n");
            sb.Append("  PsiSnb: ").Append(PsiSnb).Append("\n");
            sb.Append("  PsiGnb: ").Append(PsiGnb).Append("\n");
            sb.Append("  PsiEcnb: ").Append(PsiEcnb).Append("\n");
            sb.Append("  Nrkcb0: ").Append(Nrkcb0).Append("\n");
            sb.Append("  EccNb: ").Append(EccNb).Append("\n");
            sb.Append("  Acnb0: ").Append(Acnb0).Append("\n");
            sb.Append("  CoeffK4: ").Append(CoeffK4).Append("\n");
            sb.Append("  C1: ").Append(C1).Append("\n");
            sb.Append("  C2: ").Append(C2).Append("\n");
            sb.Append("  C1blowOut: ").Append(C1blowOut).Append("\n");
            sb.Append("  C2blowOut: ").Append(C2blowOut).Append("\n");
            sb.Append("  UnityCheckConcreteEdgefailureRes: ").Append(UnityCheckConcreteEdgefailureRes).Append("\n");
            sb.Append("  ConeBreakoutCheckType: ").Append(ConeBreakoutCheckType).Append("\n");
            sb.Append("  UnityCheckConcreteShearBreakOutRes: ").Append(UnityCheckConcreteShearBreakOutRes).Append("\n");
            sb.Append("  ConcreteConeCheckInShearFailed: ").Append(ConcreteConeCheckInShearFailed).Append("\n");
            sb.Append("  Hc: ").Append(Hc).Append("\n");
            sb.Append("  PsiRev: ").Append(PsiRev).Append("\n");
            sb.Append("  CoeffAlpha: ").Append(CoeffAlpha).Append("\n");
            sb.Append("  CoeffBeta: ").Append(CoeffBeta).Append("\n");
            sb.Append("  Lf: ").Append(Lf).Append("\n");
            sb.Append("  ShearBreakOutForce: ").Append(ShearBreakOutForce).Append("\n");
            sb.Append("  ShearBreakOutForceFactor: ").Append(ShearBreakOutForceFactor).Append("\n");
            sb.Append("  CriticalSegmentShearConeBreakoutForce: ").Append(CriticalSegmentShearConeBreakoutForce).Append("\n");
            sb.Append("  Acv: ").Append(Acv).Append("\n");
            sb.Append("  Acv0: ").Append(Acv0).Append("\n");
            sb.Append("  EccV: ").Append(EccV).Append("\n");
            sb.Append("  SshearBreakout: ").Append(SshearBreakout).Append("\n");
            sb.Append("  CaReduction: ").Append(CaReduction).Append("\n");
            sb.Append("  PsiSv: ").Append(PsiSv).Append("\n");
            sb.Append("  PsiHv: ").Append(PsiHv).Append("\n");
            sb.Append("  PsiEcv: ").Append(PsiEcv).Append("\n");
            sb.Append("  PsiAlphaV: ").Append(PsiAlphaV).Append("\n");
            sb.Append("  Vrkc0: ").Append(Vrkc0).Append("\n");
            sb.Append("  CriticalAvcSegmentIndex: ").Append(CriticalAvcSegmentIndex).Append("\n");
            sb.Append("  AlphaV: ").Append(AlphaV).Append("\n");
            sb.Append("  CoeffK8: ").Append(CoeffK8).Append("\n");
            sb.Append("  NrkcDefault: ").Append(NrkcDefault).Append("\n");
            sb.Append("  UnityCheckPryOutfailureResistanceRes: ").Append(UnityCheckPryOutfailureResistanceRes).Append("\n");
            sb.Append("  LeverArm: ").Append(LeverArm).Append("\n");
            sb.Append("  AlphaM: ").Append(AlphaM).Append("\n");
            sb.Append("  Wel: ").Append(Wel).Append("\n");
            sb.Append("  Mrks0: ").Append(Mrks0).Append("\n");
            sb.Append("  Mrks: ").Append(Mrks).Append("\n");
            sb.Append("  LeverArmShear: ").Append(LeverArmShear).Append("\n");
            sb.Append("  IsMortarJoint: ").Append(IsMortarJoint).Append("\n");
            sb.Append("  GroutTh: ").Append(GroutTh).Append("\n");
            sb.Append("  LeverArmA3: ").Append(LeverArmA3).Append("\n");
            sb.Append("  LeverArmE1: ").Append(LeverArmE1).Append("\n");
            sb.Append("  AnchorType: ").Append(AnchorType).Append("\n");
            sb.Append("  ListOfAncAnchorIDs: ").Append(ListOfAncAnchorIDs).Append("\n");
            sb.Append("  ListOfAvcAnchorIDs: ").Append(ListOfAvcAnchorIDs).Append("\n");
            sb.Append("  ListOfBlowOutAnchorIDs: ").Append(ListOfBlowOutAnchorIDs).Append("\n");
            sb.Append("  BasePlateContactType: ").Append(BasePlateContactType).Append("\n");
            sb.Append("  Dh: ").Append(Dh).Append("\n");
            sb.Append("  WasherThickness: ").Append(WasherThickness).Append("\n");
            sb.Append("  PsiEcNx: ").Append(PsiEcNx).Append("\n");
            sb.Append("  PsiEcNy: ").Append(PsiEcNy).Append("\n");
            sb.Append("  EccNx: ").Append(EccNx).Append("\n");
            sb.Append("  EccNy: ").Append(EccNy).Append("\n");
            sb.Append("  IsCa1ReducedInAvcCalculation: ").Append(IsCa1ReducedInAvcCalculation).Append("\n");
            sb.Append("  AreBasePlatesAnchorsOfSameType: ").Append(AreBasePlatesAnchorsOfSameType).Append("\n");
            sb.Append("  IsAnchorInteractingWithAnchorsOfAnotherBasePlate: ").Append(IsAnchorInteractingWithAnchorsOfAnotherBasePlate).Append("\n");
            sb.Append("  HookLength: ").Append(HookLength).Append("\n");
            sb.Append("  PhiS: ").Append(PhiS).Append("\n");
            sb.Append("  PhiC: ").Append(PhiC).Append("\n");
            sb.Append("  Phi: ").Append(Phi).Append("\n");
            sb.Append("  ResFactorSteelTension: ").Append(ResFactorSteelTension).Append("\n");
            sb.Append("  ResFactorSteelShear: ").Append(ResFactorSteelShear).Append("\n");
            sb.Append("  ResFactorCrtStrength: ").Append(ResFactorCrtStrength).Append("\n");
            sb.Append("  PsiEdn: ").Append(PsiEdn).Append("\n");
            sb.Append("  Anc0: ").Append(Anc0).Append("\n");
            sb.Append("  Anc: ").Append(Anc).Append("\n");
            sb.Append("  Futa: ").Append(Futa).Append("\n");
            sb.Append("  PsiCn: ").Append(PsiCn).Append("\n");
            sb.Append("  PsiCp: ").Append(PsiCp).Append("\n");
            sb.Append("  PsiCv: ").Append(PsiCv).Append("\n");
            sb.Append("  Avc: ").Append(Avc).Append("\n");
            sb.Append("  Avc0: ").Append(Avc0).Append("\n");
            sb.Append("  Abrg: ").Append(Abrg).Append("\n");
            sb.Append("  ConnectorDiameterReducedByThread: ").Append(ConnectorDiameterReducedByThread).Append("\n");
            sb.Append("  Nbr: ").Append(Nbr).Append("\n");
            sb.Append("  CoeffKc: ").Append(CoeffKc).Append("\n");
            sb.Append("  LambdaA: ").Append(LambdaA).Append("\n");
            sb.Append("  Npr: ").Append(Npr).Append("\n");
            sb.Append("  SideFaceReduction: ").Append(SideFaceReduction).Append("\n");
            sb.Append("  Nsbr: ").Append(Nsbr).Append("\n");
            sb.Append("  ShearBearingLength: ").Append(ShearBearingLength).Append("\n");
            sb.Append("  SpacingShearBreakout: ").Append(SpacingShearBreakout).Append("\n");
            sb.Append("  CaNorm: ").Append(CaNorm).Append("\n");
            sb.Append("  CaPerp: ").Append(CaPerp).Append("\n");
            sb.Append("  CaPerpMax: ").Append(CaPerpMax).Append("\n");
            sb.Append("  PsiEdv: ").Append(PsiEdv).Append("\n");
            sb.Append("  Vbr: ").Append(Vbr).Append("\n");
            sb.Append("  Ncp: ").Append(Ncp).Append("\n");
            sb.Append("  CoeffKcp: ").Append(CoeffKcp).Append("\n");
            sb.Append("  ConnectorFy: ").Append(ConnectorFy).Append("\n");
            sb.Append("  PhiShear: ").Append(PhiShear).Append("\n");
            sb.Append("  AiscSubcode: ").Append(AiscSubcode).Append("\n");
            sb.Append("  OffsetValueAnc0: ").Append(OffsetValueAnc0).Append("\n");
            sb.Append("  AnchorAreaRedByThread: ").Append(AnchorAreaRedByThread).Append("\n");
            sb.Append("  AnchorDiamRedByThread: ").Append(AnchorDiamRedByThread).Append("\n");
            sb.Append("  SAncMax: ").Append(SAncMax).Append("\n");
            sb.Append("  SAncMin: ").Append(SAncMin).Append("\n");
            sb.Append("  AreStandOffAnchors: ").Append(AreStandOffAnchors).Append("\n");
            sb.Append("  Nb: ").Append(Nb).Append("\n");
            sb.Append("  Nsb: ").Append(Nsb).Append("\n");
            sb.Append("  ShearForceTransfer: ").Append(ShearForceTransfer).Append("\n");
            sb.Append("  ThreadType: ").Append(ThreadType).Append("\n");
            sb.Append("  ThreadReductionFactor: ").Append(ThreadReductionFactor).Append("\n");
            sb.Append("  CoeffK2CountersunkAnchors: ").Append(CoeffK2CountersunkAnchors).Append("\n");
            sb.Append("  Nrks: ").Append(Nrks).Append("\n");
            sb.Append("  GammaMcEN: ").Append(GammaMcEN).Append("\n");
            sb.Append("  GammaCEN: ").Append(GammaCEN).Append("\n");
            sb.Append("  Nrkc: ").Append(Nrkc).Append("\n");
            sb.Append("  Nrkp: ").Append(Nrkp).Append("\n");
            sb.Append("  CoeffK2PullOut: ").Append(CoeffK2PullOut).Append("\n");
            sb.Append("  Nrkcb: ").Append(Nrkcb).Append("\n");
            sb.Append("  GammaMsTensionEN: ").Append(GammaMsTensionEN).Append("\n");
            sb.Append("  GammaMsShearEN: ").Append(GammaMsShearEN).Append("\n");
            sb.Append("  CoeffK6: ").Append(CoeffK6).Append("\n");
            sb.Append("  CoeffK7: ").Append(CoeffK7).Append("\n");
            sb.Append("  Vrks0: ").Append(Vrks0).Append("\n");
            sb.Append("  Vrkc: ").Append(Vrkc).Append("\n");
            sb.Append("  Vrkcp: ").Append(Vrkcp).Append("\n");
            sb.Append("  IntegralNormalForce: ").Append(IntegralNormalForce).Append("\n");
            sb.Append("  IntegralShearForce: ").Append(IntegralShearForce).Append("\n");
            sb.Append("  ApplyConeBreakoutCheck: ").Append(ApplyConeBreakoutCheck).Append("\n");
            sb.Append("  BearingCoeffAlphaB0: ").Append(BearingCoeffAlphaB0).Append("\n");
            sb.Append("  BearingCoeffAlphaB1: ").Append(BearingCoeffAlphaB1).Append("\n");
            sb.Append("  BearingCoeffK1: ").Append(BearingCoeffK1).Append("\n");
            sb.Append("  PunchingResistance: ").Append(PunchingResistance).Append("\n");
            sb.Append("  ConnectorHeadDiameter: ").Append(ConnectorHeadDiameter).Append("\n");
            sb.Append("  DistanceE1EN: ").Append(DistanceE1EN).Append("\n");
            sb.Append("  DistanceE2EN: ").Append(DistanceE2EN).Append("\n");
            sb.Append("  SpacingP1EN: ").Append(SpacingP1EN).Append("\n");
            sb.Append("  SpacingP2EN: ").Append(SpacingP2EN).Append("\n");
            sb.Append("  NnpSNIP: ").Append(NnpSNIP).Append("\n");
            sb.Append("  GammaNpSNIP: ").Append(GammaNpSNIP).Append("\n");
            sb.Append("  GammaBtSNIP: ").Append(GammaBtSNIP).Append("\n");
            sb.Append("  GammaNcSNIP: ").Append(GammaNcSNIP).Append("\n");
            sb.Append("  Mns0SNIP: ").Append(Mns0SNIP).Append("\n");
            sb.Append("  MnsSNIP: ").Append(MnsSNIP).Append("\n");
            sb.Append("  PhiBSNIP: ").Append(PhiBSNIP).Append("\n");
            sb.Append("  GammaVcpSNIP: ").Append(GammaVcpSNIP).Append("\n");
            sb.Append("  RbaSNIP: ").Append(RbaSNIP).Append("\n");
            sb.Append("  CoeffK0SNIP: ").Append(CoeffK0SNIP).Append("\n");
            sb.Append("  CCrNSNIP: ").Append(CCrNSNIP).Append("\n");
            sb.Append("  SCrNSNIP: ").Append(SCrNSNIP).Append("\n");
            sb.Append("  CoeffK3EdgeFailureSNIP: ").Append(CoeffK3EdgeFailureSNIP).Append("\n");
            sb.Append("  GammaVcSNIP: ").Append(GammaVcSNIP).Append("\n");
            sb.Append("  CoeffPryOutKSNIP: ").Append(CoeffPryOutKSNIP).Append("\n");
            sb.Append("  AnchorTensileCalculationAUS: ").Append(AnchorTensileCalculationAUS).Append("\n");
            sb.Append("  S: ").Append(S).Append("\n");
            sb.Append("  Z: ").Append(Z).Append("\n");
            sb.Append("  Ze: ").Append(Ze).Append("\n");
            sb.Append("  Fy: ").Append(Fy).Append("\n");
            sb.Append("  Fu: ").Append(Fu).Append("\n");
            sb.Append("  Aw: ").Append(Aw).Append("\n");
            sb.Append("  FactorAlphaA: ").Append(FactorAlphaA).Append("\n");
            sb.Append("  ConstantAplhaB: ").Append(ConstantAplhaB).Append("\n");
            sb.Append("  LambdaN: ").Append(LambdaN).Append("\n");
            sb.Append("  Ds: ").Append(Ds).Append("\n");
            sb.Append("  Is: ").Append(Is).Append("\n");
            sb.Append("  R: ").Append(R).Append("\n");
            sb.Append("  CoeffKf: ").Append(CoeffKf).Append("\n");
            sb.Append("  Le: ").Append(Le).Append("\n");
            sb.Append("  FactorEta: ").Append(FactorEta).Append("\n");
            sb.Append("  Lambda: ").Append(Lambda).Append("\n");
            sb.Append("  FactorKsi: ").Append(FactorKsi).Append("\n");
            sb.Append("  FactorAlphaC: ").Append(FactorAlphaC).Append("\n");
            sb.Append("  FactorKe: ").Append(FactorKe).Append("\n");
            sb.Append("  Nc: ").Append(Nc).Append("\n");
            sb.Append("  Ns: ").Append(Ns).Append("\n");
            sb.Append("  Nt: ").Append(Nt).Append("\n");
            sb.Append("  Lgap: ").Append(Lgap).Append("\n");
            sb.Append("  BasePlateTh: ").Append(BasePlateTh).Append("\n");
            sb.Append("  InteractionAxialLoadBending: ").Append(InteractionAxialLoadBending).Append("\n");
            sb.Append("  CoeffN: ").Append(CoeffN).Append("\n");
            sb.Append("  Fe: ").Append(Fe).Append("\n");
            sb.Append("  E: ").Append(E).Append("\n");
            sb.Append("  LambdaSlenderness: ").Append(LambdaSlenderness).Append("\n");
            sb.Append("  Av: ").Append(Av).Append("\n");
            sb.Append("  PhiLRFD: ").Append(PhiLRFD).Append("\n");
            sb.Append("  Omega: ").Append(Omega).Append("\n");
            sb.Append("  BasePlateContactTh: ").Append(BasePlateContactTh).Append("\n");
            sb.Append("  LcStandOff: ").Append(LcStandOff).Append("\n");
            sb.Append("  ConnectorE: ").Append(ConnectorE).Append("\n");
            sb.Append("  FcrStandOffFstEq: ").Append(FcrStandOffFstEq).Append("\n");
            sb.Append("  Fcr: ").Append(Fcr).Append("\n");
            sb.Append("  PlasticSectionModulus: ").Append(PlasticSectionModulus).Append("\n");
            sb.Append("  ElasticSectionModulus: ").Append(ElasticSectionModulus).Append("\n");
            sb.Append("  BendingResistanceLimitReached: ").Append(BendingResistanceLimitReached).Append("\n");
            sb.Append("  CoeffK2StandOffEN: ").Append(CoeffK2StandOffEN).Append("\n");
            sb.Append("  StandOffNcr: ").Append(StandOffNcr).Append("\n");
            sb.Append("  StandOffLambda: ").Append(StandOffLambda).Append("\n");
            sb.Append("  StandOffKappa: ").Append(StandOffKappa).Append("\n");
            sb.Append("  StandOffPhi: ").Append(StandOffPhi).Append("\n");
            sb.Append("  StandOffAlpha: ").Append(StandOffAlpha).Append("\n");
            sb.Append("  Wpl: ").Append(Wpl).Append("\n");
            sb.Append("  BoltElongation: ").Append(BoltElongation).Append("\n");
            sb.Append("  TnbIS: ").Append(TnbIS).Append("\n");
            sb.Append("  GammaMbIS: ").Append(GammaMbIS).Append("\n");
            sb.Append("  GammaM0IS: ").Append(GammaM0IS).Append("\n");
            sb.Append("  BearingResistanceAnchor: ").Append(BearingResistanceAnchor).Append("\n");
            sb.Append("  BearingForceAnhor: ").Append(BearingForceAnhor).Append("\n");
            sb.Append("  CriticalPlateThicknessAnchor: ").Append(CriticalPlateThicknessAnchor).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  CheckStatus: ").Append(CheckStatus).Append("\n");
            sb.Append("  LimitCheckStatus: ").Append(LimitCheckStatus).Append("\n");
            sb.Append("  LoadCaseId: ").Append(LoadCaseId).Append("\n");
            sb.Append("  LoadCase: ").Append(LoadCase).Append("\n");
            sb.Append("  MaxUnityCheck: ").Append(MaxUnityCheck).Append("\n");
            sb.Append("  Form: ").Append(Form).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
