/**
 * Connection Rest API 1.0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { CutData } from './cutData';
import { PlateData } from './plateData';
import { ReferenceElement } from './referenceElement';

/**
* Provides data of the connected beam
*/
export class BeamData {
    /**
    * Name of the beam
    */
    'name'?: string | null;
    /**
    * Plates of the beam
    */
    'plates'?: Array<PlateData> | null;
    /**
    * Type of cross section
    */
    'crossSectionType'?: string | null;
    /**
    * MPRL name of beam
    */
    'mprlName'?: string | null;
    /**
    * Get or set the identification in the original model  In the case of the imported connection from another application
    */
    'originalModelId'?: string | null;
    /**
    * Cuts on the beam
    */
    'cuts'?: Array<CutData> | null;
    /**
    * Is added beam
    */
    'isAdded'?: boolean;
    /**
    * Added beam lenght
    */
    'addedMemberLength'?: number;
    /**
    * Is negative object
    */
    'isNegativeObject'?: boolean;
    'addedMember'?: ReferenceElement;
    /**
    * Mirror by Y
    */
    'mirrorY'?: boolean;
    /**
    * The reference line of the member is in the center of gravity of the cross-section
    */
    'refLineInCenterOfGravity'?: boolean;
    /**
    * Is beam bearing member
    */
    'isBearingMember'?: boolean;
    /**
    * Automaticali add cut by workplane if it not defined
    */
    'autoAddCutByWorkplane'?: boolean;
    /**
    * Element Id
    */
    'id'?: number;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "name",
            "baseName": "name",
            "type": "string"
        },
        {
            "name": "plates",
            "baseName": "plates",
            "type": "Array<PlateData>"
        },
        {
            "name": "crossSectionType",
            "baseName": "crossSectionType",
            "type": "string"
        },
        {
            "name": "mprlName",
            "baseName": "mprlName",
            "type": "string"
        },
        {
            "name": "originalModelId",
            "baseName": "originalModelId",
            "type": "string"
        },
        {
            "name": "cuts",
            "baseName": "cuts",
            "type": "Array<CutData>"
        },
        {
            "name": "isAdded",
            "baseName": "isAdded",
            "type": "boolean"
        },
        {
            "name": "addedMemberLength",
            "baseName": "addedMemberLength",
            "type": "number"
        },
        {
            "name": "isNegativeObject",
            "baseName": "isNegativeObject",
            "type": "boolean"
        },
        {
            "name": "addedMember",
            "baseName": "addedMember",
            "type": "ReferenceElement"
        },
        {
            "name": "mirrorY",
            "baseName": "mirrorY",
            "type": "boolean"
        },
        {
            "name": "refLineInCenterOfGravity",
            "baseName": "refLineInCenterOfGravity",
            "type": "boolean"
        },
        {
            "name": "isBearingMember",
            "baseName": "isBearingMember",
            "type": "boolean"
        },
        {
            "name": "autoAddCutByWorkplane",
            "baseName": "autoAddCutByWorkplane",
            "type": "boolean"
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "number"
        }    ];

    static getAttributeTypeMap() {
        return BeamData.attributeTypeMap;
    }
}

