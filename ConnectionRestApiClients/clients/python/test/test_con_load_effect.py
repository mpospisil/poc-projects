# coding: utf-8

"""
    Connection Rest API 1.0

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from connection_restapi_client_poc.models.con_load_effect import ConLoadEffect

class TestConLoadEffect(unittest.TestCase):
    """ConLoadEffect unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ConLoadEffect:
        """Test ConLoadEffect
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ConLoadEffect`
        """
        model = ConLoadEffect()
        if include_optional:
            return ConLoadEffect(
                is_percentage = True,
                member_loadings = [
                    connection_restapi_client_poc.models.con_load_effect_member_load.ConLoadEffectMemberLoad(
                        member_id = 56, 
                        position = 'End', 
                        section_load = connection_restapi_client_poc.models.con_load_effect_section_load.ConLoadEffectSectionLoad(
                            n = 1.337, 
                            vy = 1.337, 
                            vz = 1.337, 
                            mx = 1.337, 
                            my = 1.337, 
                            mz = 1.337, ), )
                    ],
                id = 56,
                name = '',
                active = True
            )
        else:
            return ConLoadEffect(
        )
        """

    def testConLoadEffect(self):
        """Test ConLoadEffect"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
