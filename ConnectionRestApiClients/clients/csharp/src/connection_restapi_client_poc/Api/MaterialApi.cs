/*
 * Connection Rest API 1.0
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Mime;
using connection_restapi_client_poc.Client;
using connection_restapi_client_poc.Model;

namespace connection_restapi_client_poc.Api
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IMaterialApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// 
        /// </summary>
        /// <exception cref="connection_restapi_client_poc.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="projectId"></param>
        /// <param name="connectionId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;IdeaStatiCaApiConnectionModelProjBoltAssemblyIdeaStatiCaApi&gt;</returns>
        List<IdeaStatiCaApiConnectionModelProjBoltAssemblyIdeaStatiCaApi> Api1ProjectsProjectIdConnectionsConnectionIdMaterialsBoltAssembliesGet(Guid projectId, int connectionId, int operationIndex = 0);

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="connection_restapi_client_poc.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="projectId"></param>
        /// <param name="connectionId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;IdeaStatiCaApiConnectionModelProjBoltAssemblyIdeaStatiCaApi&gt;</returns>
        ApiResponse<List<IdeaStatiCaApiConnectionModelProjBoltAssemblyIdeaStatiCaApi>> Api1ProjectsProjectIdConnectionsConnectionIdMaterialsBoltAssembliesGetWithHttpInfo(Guid projectId, int connectionId, int operationIndex = 0);
        /// <summary>
        /// 
        /// </summary>
        /// <exception cref="connection_restapi_client_poc.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="projectId"></param>
        /// <param name="connectionId"></param>
        /// <param name="ideaStatiCaApiConnectionModelProjBoltAssemblyIdeaStatiCaApi"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>IdeaStatiCaApiConnectionModelProjBoltAssemblyIdeaStatiCaApi</returns>
        IdeaStatiCaApiConnectionModelProjBoltAssemblyIdeaStatiCaApi Api1ProjectsProjectIdConnectionsConnectionIdMaterialsBoltAssembliesPost(Guid projectId, int connectionId, IdeaStatiCaApiConnectionModelProjBoltAssemblyIdeaStatiCaApi? ideaStatiCaApiConnectionModelProjBoltAssemblyIdeaStatiCaApi = default(IdeaStatiCaApiConnectionModelProjBoltAssemblyIdeaStatiCaApi?), int operationIndex = 0);

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="connection_restapi_client_poc.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="projectId"></param>
        /// <param name="connectionId"></param>
        /// <param name="ideaStatiCaApiConnectionModelProjBoltAssemblyIdeaStatiCaApi"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of IdeaStatiCaApiConnectionModelProjBoltAssemblyIdeaStatiCaApi</returns>
        ApiResponse<IdeaStatiCaApiConnectionModelProjBoltAssemblyIdeaStatiCaApi> Api1ProjectsProjectIdConnectionsConnectionIdMaterialsBoltAssembliesPostWithHttpInfo(Guid projectId, int connectionId, IdeaStatiCaApiConnectionModelProjBoltAssemblyIdeaStatiCaApi? ideaStatiCaApiConnectionModelProjBoltAssemblyIdeaStatiCaApi = default(IdeaStatiCaApiConnectionModelProjBoltAssemblyIdeaStatiCaApi?), int operationIndex = 0);
        /// <summary>
        /// 
        /// </summary>
        /// <exception cref="connection_restapi_client_poc.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="projectId"></param>
        /// <param name="connectionId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;IdeaStatiCaApiConnectionModelProjCrossSectionIdeaStatiCaApi&gt;</returns>
        List<IdeaStatiCaApiConnectionModelProjCrossSectionIdeaStatiCaApi> Api1ProjectsProjectIdConnectionsConnectionIdMaterialsCrossSectionsGet(Guid projectId, int connectionId, int operationIndex = 0);

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="connection_restapi_client_poc.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="projectId"></param>
        /// <param name="connectionId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;IdeaStatiCaApiConnectionModelProjCrossSectionIdeaStatiCaApi&gt;</returns>
        ApiResponse<List<IdeaStatiCaApiConnectionModelProjCrossSectionIdeaStatiCaApi>> Api1ProjectsProjectIdConnectionsConnectionIdMaterialsCrossSectionsGetWithHttpInfo(Guid projectId, int connectionId, int operationIndex = 0);
        /// <summary>
        /// 
        /// </summary>
        /// <exception cref="connection_restapi_client_poc.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="projectId"></param>
        /// <param name="connectionId"></param>
        /// <param name="ideaStatiCaApiConnectionModelProjCrossSectionIdeaStatiCaApi"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>IdeaStatiCaApiConnectionModelProjCrossSectionIdeaStatiCaApi</returns>
        IdeaStatiCaApiConnectionModelProjCrossSectionIdeaStatiCaApi Api1ProjectsProjectIdConnectionsConnectionIdMaterialsCrossSectionsPost(Guid projectId, int connectionId, IdeaStatiCaApiConnectionModelProjCrossSectionIdeaStatiCaApi? ideaStatiCaApiConnectionModelProjCrossSectionIdeaStatiCaApi = default(IdeaStatiCaApiConnectionModelProjCrossSectionIdeaStatiCaApi?), int operationIndex = 0);

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="connection_restapi_client_poc.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="projectId"></param>
        /// <param name="connectionId"></param>
        /// <param name="ideaStatiCaApiConnectionModelProjCrossSectionIdeaStatiCaApi"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of IdeaStatiCaApiConnectionModelProjCrossSectionIdeaStatiCaApi</returns>
        ApiResponse<IdeaStatiCaApiConnectionModelProjCrossSectionIdeaStatiCaApi> Api1ProjectsProjectIdConnectionsConnectionIdMaterialsCrossSectionsPostWithHttpInfo(Guid projectId, int connectionId, IdeaStatiCaApiConnectionModelProjCrossSectionIdeaStatiCaApi? ideaStatiCaApiConnectionModelProjCrossSectionIdeaStatiCaApi = default(IdeaStatiCaApiConnectionModelProjCrossSectionIdeaStatiCaApi?), int operationIndex = 0);
        /// <summary>
        /// 
        /// </summary>
        /// <exception cref="connection_restapi_client_poc.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="projectId"></param>
        /// <param name="connectionId"></param>
        /// <param name="type"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;IdeaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi&gt;</returns>
        List<IdeaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi> Api1ProjectsProjectIdConnectionsConnectionIdMaterialsGet(Guid projectId, int connectionId, IdeaRSWsLibCssServiceMaterialTypeCIBasicTypes? type = default(IdeaRSWsLibCssServiceMaterialTypeCIBasicTypes?), int operationIndex = 0);

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="connection_restapi_client_poc.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="projectId"></param>
        /// <param name="connectionId"></param>
        /// <param name="type"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;IdeaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi&gt;</returns>
        ApiResponse<List<IdeaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi>> Api1ProjectsProjectIdConnectionsConnectionIdMaterialsGetWithHttpInfo(Guid projectId, int connectionId, IdeaRSWsLibCssServiceMaterialTypeCIBasicTypes? type = default(IdeaRSWsLibCssServiceMaterialTypeCIBasicTypes?), int operationIndex = 0);
        /// <summary>
        /// 
        /// </summary>
        /// <exception cref="connection_restapi_client_poc.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="projectId"></param>
        /// <param name="connectionId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;IdeaStatiCaApiConnectionModelProjPinIdeaStatiCaApi&gt;</returns>
        List<IdeaStatiCaApiConnectionModelProjPinIdeaStatiCaApi> Api1ProjectsProjectIdConnectionsConnectionIdMaterialsPinsGet(Guid projectId, int connectionId, int operationIndex = 0);

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="connection_restapi_client_poc.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="projectId"></param>
        /// <param name="connectionId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;IdeaStatiCaApiConnectionModelProjPinIdeaStatiCaApi&gt;</returns>
        ApiResponse<List<IdeaStatiCaApiConnectionModelProjPinIdeaStatiCaApi>> Api1ProjectsProjectIdConnectionsConnectionIdMaterialsPinsGetWithHttpInfo(Guid projectId, int connectionId, int operationIndex = 0);
        /// <summary>
        /// 
        /// </summary>
        /// <exception cref="connection_restapi_client_poc.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="projectId"></param>
        /// <param name="connectionId"></param>
        /// <param name="ideaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>IdeaStatiCaApiConnectionModelProjPinIdeaStatiCaApi</returns>
        IdeaStatiCaApiConnectionModelProjPinIdeaStatiCaApi Api1ProjectsProjectIdConnectionsConnectionIdMaterialsPinsPost(Guid projectId, int connectionId, IdeaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi? ideaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi = default(IdeaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi?), int operationIndex = 0);

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="connection_restapi_client_poc.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="projectId"></param>
        /// <param name="connectionId"></param>
        /// <param name="ideaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of IdeaStatiCaApiConnectionModelProjPinIdeaStatiCaApi</returns>
        ApiResponse<IdeaStatiCaApiConnectionModelProjPinIdeaStatiCaApi> Api1ProjectsProjectIdConnectionsConnectionIdMaterialsPinsPostWithHttpInfo(Guid projectId, int connectionId, IdeaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi? ideaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi = default(IdeaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi?), int operationIndex = 0);
        /// <summary>
        /// 
        /// </summary>
        /// <exception cref="connection_restapi_client_poc.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="projectId"></param>
        /// <param name="connectionId"></param>
        /// <param name="ideaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>IdeaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi</returns>
        IdeaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi Api1ProjectsProjectIdConnectionsConnectionIdMaterialsPost(Guid projectId, int connectionId, IdeaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi? ideaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi = default(IdeaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi?), int operationIndex = 0);

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="connection_restapi_client_poc.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="projectId"></param>
        /// <param name="connectionId"></param>
        /// <param name="ideaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of IdeaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi</returns>
        ApiResponse<IdeaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi> Api1ProjectsProjectIdConnectionsConnectionIdMaterialsPostWithHttpInfo(Guid projectId, int connectionId, IdeaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi? ideaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi = default(IdeaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi?), int operationIndex = 0);
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IMaterialApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="connection_restapi_client_poc.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="projectId"></param>
        /// <param name="connectionId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;IdeaStatiCaApiConnectionModelProjBoltAssemblyIdeaStatiCaApi&gt;</returns>
        System.Threading.Tasks.Task<List<IdeaStatiCaApiConnectionModelProjBoltAssemblyIdeaStatiCaApi>> Api1ProjectsProjectIdConnectionsConnectionIdMaterialsBoltAssembliesGetAsync(Guid projectId, int connectionId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="connection_restapi_client_poc.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="projectId"></param>
        /// <param name="connectionId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;IdeaStatiCaApiConnectionModelProjBoltAssemblyIdeaStatiCaApi&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<List<IdeaStatiCaApiConnectionModelProjBoltAssemblyIdeaStatiCaApi>>> Api1ProjectsProjectIdConnectionsConnectionIdMaterialsBoltAssembliesGetWithHttpInfoAsync(Guid projectId, int connectionId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="connection_restapi_client_poc.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="projectId"></param>
        /// <param name="connectionId"></param>
        /// <param name="ideaStatiCaApiConnectionModelProjBoltAssemblyIdeaStatiCaApi"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of IdeaStatiCaApiConnectionModelProjBoltAssemblyIdeaStatiCaApi</returns>
        System.Threading.Tasks.Task<IdeaStatiCaApiConnectionModelProjBoltAssemblyIdeaStatiCaApi> Api1ProjectsProjectIdConnectionsConnectionIdMaterialsBoltAssembliesPostAsync(Guid projectId, int connectionId, IdeaStatiCaApiConnectionModelProjBoltAssemblyIdeaStatiCaApi? ideaStatiCaApiConnectionModelProjBoltAssemblyIdeaStatiCaApi = default(IdeaStatiCaApiConnectionModelProjBoltAssemblyIdeaStatiCaApi?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="connection_restapi_client_poc.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="projectId"></param>
        /// <param name="connectionId"></param>
        /// <param name="ideaStatiCaApiConnectionModelProjBoltAssemblyIdeaStatiCaApi"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (IdeaStatiCaApiConnectionModelProjBoltAssemblyIdeaStatiCaApi)</returns>
        System.Threading.Tasks.Task<ApiResponse<IdeaStatiCaApiConnectionModelProjBoltAssemblyIdeaStatiCaApi>> Api1ProjectsProjectIdConnectionsConnectionIdMaterialsBoltAssembliesPostWithHttpInfoAsync(Guid projectId, int connectionId, IdeaStatiCaApiConnectionModelProjBoltAssemblyIdeaStatiCaApi? ideaStatiCaApiConnectionModelProjBoltAssemblyIdeaStatiCaApi = default(IdeaStatiCaApiConnectionModelProjBoltAssemblyIdeaStatiCaApi?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="connection_restapi_client_poc.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="projectId"></param>
        /// <param name="connectionId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;IdeaStatiCaApiConnectionModelProjCrossSectionIdeaStatiCaApi&gt;</returns>
        System.Threading.Tasks.Task<List<IdeaStatiCaApiConnectionModelProjCrossSectionIdeaStatiCaApi>> Api1ProjectsProjectIdConnectionsConnectionIdMaterialsCrossSectionsGetAsync(Guid projectId, int connectionId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="connection_restapi_client_poc.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="projectId"></param>
        /// <param name="connectionId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;IdeaStatiCaApiConnectionModelProjCrossSectionIdeaStatiCaApi&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<List<IdeaStatiCaApiConnectionModelProjCrossSectionIdeaStatiCaApi>>> Api1ProjectsProjectIdConnectionsConnectionIdMaterialsCrossSectionsGetWithHttpInfoAsync(Guid projectId, int connectionId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="connection_restapi_client_poc.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="projectId"></param>
        /// <param name="connectionId"></param>
        /// <param name="ideaStatiCaApiConnectionModelProjCrossSectionIdeaStatiCaApi"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of IdeaStatiCaApiConnectionModelProjCrossSectionIdeaStatiCaApi</returns>
        System.Threading.Tasks.Task<IdeaStatiCaApiConnectionModelProjCrossSectionIdeaStatiCaApi> Api1ProjectsProjectIdConnectionsConnectionIdMaterialsCrossSectionsPostAsync(Guid projectId, int connectionId, IdeaStatiCaApiConnectionModelProjCrossSectionIdeaStatiCaApi? ideaStatiCaApiConnectionModelProjCrossSectionIdeaStatiCaApi = default(IdeaStatiCaApiConnectionModelProjCrossSectionIdeaStatiCaApi?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="connection_restapi_client_poc.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="projectId"></param>
        /// <param name="connectionId"></param>
        /// <param name="ideaStatiCaApiConnectionModelProjCrossSectionIdeaStatiCaApi"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (IdeaStatiCaApiConnectionModelProjCrossSectionIdeaStatiCaApi)</returns>
        System.Threading.Tasks.Task<ApiResponse<IdeaStatiCaApiConnectionModelProjCrossSectionIdeaStatiCaApi>> Api1ProjectsProjectIdConnectionsConnectionIdMaterialsCrossSectionsPostWithHttpInfoAsync(Guid projectId, int connectionId, IdeaStatiCaApiConnectionModelProjCrossSectionIdeaStatiCaApi? ideaStatiCaApiConnectionModelProjCrossSectionIdeaStatiCaApi = default(IdeaStatiCaApiConnectionModelProjCrossSectionIdeaStatiCaApi?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="connection_restapi_client_poc.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="projectId"></param>
        /// <param name="connectionId"></param>
        /// <param name="type"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;IdeaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi&gt;</returns>
        System.Threading.Tasks.Task<List<IdeaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi>> Api1ProjectsProjectIdConnectionsConnectionIdMaterialsGetAsync(Guid projectId, int connectionId, IdeaRSWsLibCssServiceMaterialTypeCIBasicTypes? type = default(IdeaRSWsLibCssServiceMaterialTypeCIBasicTypes?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="connection_restapi_client_poc.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="projectId"></param>
        /// <param name="connectionId"></param>
        /// <param name="type"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;IdeaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<List<IdeaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi>>> Api1ProjectsProjectIdConnectionsConnectionIdMaterialsGetWithHttpInfoAsync(Guid projectId, int connectionId, IdeaRSWsLibCssServiceMaterialTypeCIBasicTypes? type = default(IdeaRSWsLibCssServiceMaterialTypeCIBasicTypes?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="connection_restapi_client_poc.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="projectId"></param>
        /// <param name="connectionId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;IdeaStatiCaApiConnectionModelProjPinIdeaStatiCaApi&gt;</returns>
        System.Threading.Tasks.Task<List<IdeaStatiCaApiConnectionModelProjPinIdeaStatiCaApi>> Api1ProjectsProjectIdConnectionsConnectionIdMaterialsPinsGetAsync(Guid projectId, int connectionId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="connection_restapi_client_poc.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="projectId"></param>
        /// <param name="connectionId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;IdeaStatiCaApiConnectionModelProjPinIdeaStatiCaApi&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<List<IdeaStatiCaApiConnectionModelProjPinIdeaStatiCaApi>>> Api1ProjectsProjectIdConnectionsConnectionIdMaterialsPinsGetWithHttpInfoAsync(Guid projectId, int connectionId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="connection_restapi_client_poc.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="projectId"></param>
        /// <param name="connectionId"></param>
        /// <param name="ideaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of IdeaStatiCaApiConnectionModelProjPinIdeaStatiCaApi</returns>
        System.Threading.Tasks.Task<IdeaStatiCaApiConnectionModelProjPinIdeaStatiCaApi> Api1ProjectsProjectIdConnectionsConnectionIdMaterialsPinsPostAsync(Guid projectId, int connectionId, IdeaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi? ideaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi = default(IdeaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="connection_restapi_client_poc.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="projectId"></param>
        /// <param name="connectionId"></param>
        /// <param name="ideaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (IdeaStatiCaApiConnectionModelProjPinIdeaStatiCaApi)</returns>
        System.Threading.Tasks.Task<ApiResponse<IdeaStatiCaApiConnectionModelProjPinIdeaStatiCaApi>> Api1ProjectsProjectIdConnectionsConnectionIdMaterialsPinsPostWithHttpInfoAsync(Guid projectId, int connectionId, IdeaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi? ideaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi = default(IdeaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="connection_restapi_client_poc.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="projectId"></param>
        /// <param name="connectionId"></param>
        /// <param name="ideaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of IdeaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi</returns>
        System.Threading.Tasks.Task<IdeaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi> Api1ProjectsProjectIdConnectionsConnectionIdMaterialsPostAsync(Guid projectId, int connectionId, IdeaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi? ideaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi = default(IdeaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="connection_restapi_client_poc.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="projectId"></param>
        /// <param name="connectionId"></param>
        /// <param name="ideaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (IdeaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi)</returns>
        System.Threading.Tasks.Task<ApiResponse<IdeaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi>> Api1ProjectsProjectIdConnectionsConnectionIdMaterialsPostWithHttpInfoAsync(Guid projectId, int connectionId, IdeaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi? ideaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi = default(IdeaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IMaterialApi : IMaterialApiSync, IMaterialApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class MaterialApi : IMaterialApi
    {
        private connection_restapi_client_poc.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="MaterialApi"/> class.
        /// </summary>
        /// <returns></returns>
        public MaterialApi() : this((string)null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="MaterialApi"/> class.
        /// </summary>
        /// <returns></returns>
        public MaterialApi(string basePath)
        {
            this.Configuration = connection_restapi_client_poc.Client.Configuration.MergeConfigurations(
                connection_restapi_client_poc.Client.GlobalConfiguration.Instance,
                new connection_restapi_client_poc.Client.Configuration { BasePath = basePath }
            );
            this.Client = new connection_restapi_client_poc.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new connection_restapi_client_poc.Client.ApiClient(this.Configuration.BasePath);
            this.ExceptionFactory = connection_restapi_client_poc.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="MaterialApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public MaterialApi(connection_restapi_client_poc.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = connection_restapi_client_poc.Client.Configuration.MergeConfigurations(
                connection_restapi_client_poc.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.Client = new connection_restapi_client_poc.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new connection_restapi_client_poc.Client.ApiClient(this.Configuration.BasePath);
            ExceptionFactory = connection_restapi_client_poc.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="MaterialApi"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        public MaterialApi(connection_restapi_client_poc.Client.ISynchronousClient client, connection_restapi_client_poc.Client.IAsynchronousClient asyncClient, connection_restapi_client_poc.Client.IReadableConfiguration configuration)
        {
            if (client == null) throw new ArgumentNullException("client");
            if (asyncClient == null) throw new ArgumentNullException("asyncClient");
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = connection_restapi_client_poc.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public connection_restapi_client_poc.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public connection_restapi_client_poc.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public string GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public connection_restapi_client_poc.Client.IReadableConfiguration Configuration { get; set; }

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public connection_restapi_client_poc.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        ///  
        /// </summary>
        /// <exception cref="connection_restapi_client_poc.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="projectId"></param>
        /// <param name="connectionId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;IdeaStatiCaApiConnectionModelProjBoltAssemblyIdeaStatiCaApi&gt;</returns>
        public List<IdeaStatiCaApiConnectionModelProjBoltAssemblyIdeaStatiCaApi> Api1ProjectsProjectIdConnectionsConnectionIdMaterialsBoltAssembliesGet(Guid projectId, int connectionId, int operationIndex = 0)
        {
            connection_restapi_client_poc.Client.ApiResponse<List<IdeaStatiCaApiConnectionModelProjBoltAssemblyIdeaStatiCaApi>> localVarResponse = Api1ProjectsProjectIdConnectionsConnectionIdMaterialsBoltAssembliesGetWithHttpInfo(projectId, connectionId);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  
        /// </summary>
        /// <exception cref="connection_restapi_client_poc.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="projectId"></param>
        /// <param name="connectionId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;IdeaStatiCaApiConnectionModelProjBoltAssemblyIdeaStatiCaApi&gt;</returns>
        public connection_restapi_client_poc.Client.ApiResponse<List<IdeaStatiCaApiConnectionModelProjBoltAssemblyIdeaStatiCaApi>> Api1ProjectsProjectIdConnectionsConnectionIdMaterialsBoltAssembliesGetWithHttpInfo(Guid projectId, int connectionId, int operationIndex = 0)
        {
            connection_restapi_client_poc.Client.RequestOptions localVarRequestOptions = new connection_restapi_client_poc.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = connection_restapi_client_poc.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = connection_restapi_client_poc.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("projectId", connection_restapi_client_poc.Client.ClientUtils.ParameterToString(projectId)); // path parameter
            localVarRequestOptions.PathParameters.Add("connectionId", connection_restapi_client_poc.Client.ClientUtils.ParameterToString(connectionId)); // path parameter

            localVarRequestOptions.Operation = "MaterialApi.Api1ProjectsProjectIdConnectionsConnectionIdMaterialsBoltAssembliesGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<List<IdeaStatiCaApiConnectionModelProjBoltAssemblyIdeaStatiCaApi>>("/api/1/projects/{projectId}/connections/{connectionId}/materials/bolt-assemblies", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("Api1ProjectsProjectIdConnectionsConnectionIdMaterialsBoltAssembliesGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        ///  
        /// </summary>
        /// <exception cref="connection_restapi_client_poc.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="projectId"></param>
        /// <param name="connectionId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;IdeaStatiCaApiConnectionModelProjBoltAssemblyIdeaStatiCaApi&gt;</returns>
        public async System.Threading.Tasks.Task<List<IdeaStatiCaApiConnectionModelProjBoltAssemblyIdeaStatiCaApi>> Api1ProjectsProjectIdConnectionsConnectionIdMaterialsBoltAssembliesGetAsync(Guid projectId, int connectionId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            connection_restapi_client_poc.Client.ApiResponse<List<IdeaStatiCaApiConnectionModelProjBoltAssemblyIdeaStatiCaApi>> localVarResponse = await Api1ProjectsProjectIdConnectionsConnectionIdMaterialsBoltAssembliesGetWithHttpInfoAsync(projectId, connectionId, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  
        /// </summary>
        /// <exception cref="connection_restapi_client_poc.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="projectId"></param>
        /// <param name="connectionId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;IdeaStatiCaApiConnectionModelProjBoltAssemblyIdeaStatiCaApi&gt;)</returns>
        public async System.Threading.Tasks.Task<connection_restapi_client_poc.Client.ApiResponse<List<IdeaStatiCaApiConnectionModelProjBoltAssemblyIdeaStatiCaApi>>> Api1ProjectsProjectIdConnectionsConnectionIdMaterialsBoltAssembliesGetWithHttpInfoAsync(Guid projectId, int connectionId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            connection_restapi_client_poc.Client.RequestOptions localVarRequestOptions = new connection_restapi_client_poc.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = connection_restapi_client_poc.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = connection_restapi_client_poc.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("projectId", connection_restapi_client_poc.Client.ClientUtils.ParameterToString(projectId)); // path parameter
            localVarRequestOptions.PathParameters.Add("connectionId", connection_restapi_client_poc.Client.ClientUtils.ParameterToString(connectionId)); // path parameter

            localVarRequestOptions.Operation = "MaterialApi.Api1ProjectsProjectIdConnectionsConnectionIdMaterialsBoltAssembliesGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<List<IdeaStatiCaApiConnectionModelProjBoltAssemblyIdeaStatiCaApi>>("/api/1/projects/{projectId}/connections/{connectionId}/materials/bolt-assemblies", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("Api1ProjectsProjectIdConnectionsConnectionIdMaterialsBoltAssembliesGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        ///  
        /// </summary>
        /// <exception cref="connection_restapi_client_poc.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="projectId"></param>
        /// <param name="connectionId"></param>
        /// <param name="ideaStatiCaApiConnectionModelProjBoltAssemblyIdeaStatiCaApi"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>IdeaStatiCaApiConnectionModelProjBoltAssemblyIdeaStatiCaApi</returns>
        public IdeaStatiCaApiConnectionModelProjBoltAssemblyIdeaStatiCaApi Api1ProjectsProjectIdConnectionsConnectionIdMaterialsBoltAssembliesPost(Guid projectId, int connectionId, IdeaStatiCaApiConnectionModelProjBoltAssemblyIdeaStatiCaApi? ideaStatiCaApiConnectionModelProjBoltAssemblyIdeaStatiCaApi = default(IdeaStatiCaApiConnectionModelProjBoltAssemblyIdeaStatiCaApi?), int operationIndex = 0)
        {
            connection_restapi_client_poc.Client.ApiResponse<IdeaStatiCaApiConnectionModelProjBoltAssemblyIdeaStatiCaApi> localVarResponse = Api1ProjectsProjectIdConnectionsConnectionIdMaterialsBoltAssembliesPostWithHttpInfo(projectId, connectionId, ideaStatiCaApiConnectionModelProjBoltAssemblyIdeaStatiCaApi);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  
        /// </summary>
        /// <exception cref="connection_restapi_client_poc.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="projectId"></param>
        /// <param name="connectionId"></param>
        /// <param name="ideaStatiCaApiConnectionModelProjBoltAssemblyIdeaStatiCaApi"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of IdeaStatiCaApiConnectionModelProjBoltAssemblyIdeaStatiCaApi</returns>
        public connection_restapi_client_poc.Client.ApiResponse<IdeaStatiCaApiConnectionModelProjBoltAssemblyIdeaStatiCaApi> Api1ProjectsProjectIdConnectionsConnectionIdMaterialsBoltAssembliesPostWithHttpInfo(Guid projectId, int connectionId, IdeaStatiCaApiConnectionModelProjBoltAssemblyIdeaStatiCaApi? ideaStatiCaApiConnectionModelProjBoltAssemblyIdeaStatiCaApi = default(IdeaStatiCaApiConnectionModelProjBoltAssemblyIdeaStatiCaApi?), int operationIndex = 0)
        {
            connection_restapi_client_poc.Client.RequestOptions localVarRequestOptions = new connection_restapi_client_poc.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/xml",
                "text/xml",
                "application/*+xml",
                "application/json-patch+json",
                "application/json",
                "text/json",
                "application/*+json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = connection_restapi_client_poc.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = connection_restapi_client_poc.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("projectId", connection_restapi_client_poc.Client.ClientUtils.ParameterToString(projectId)); // path parameter
            localVarRequestOptions.PathParameters.Add("connectionId", connection_restapi_client_poc.Client.ClientUtils.ParameterToString(connectionId)); // path parameter
            localVarRequestOptions.Data = ideaStatiCaApiConnectionModelProjBoltAssemblyIdeaStatiCaApi;

            localVarRequestOptions.Operation = "MaterialApi.Api1ProjectsProjectIdConnectionsConnectionIdMaterialsBoltAssembliesPost";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Post<IdeaStatiCaApiConnectionModelProjBoltAssemblyIdeaStatiCaApi>("/api/1/projects/{projectId}/connections/{connectionId}/materials/bolt-assemblies", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("Api1ProjectsProjectIdConnectionsConnectionIdMaterialsBoltAssembliesPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        ///  
        /// </summary>
        /// <exception cref="connection_restapi_client_poc.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="projectId"></param>
        /// <param name="connectionId"></param>
        /// <param name="ideaStatiCaApiConnectionModelProjBoltAssemblyIdeaStatiCaApi"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of IdeaStatiCaApiConnectionModelProjBoltAssemblyIdeaStatiCaApi</returns>
        public async System.Threading.Tasks.Task<IdeaStatiCaApiConnectionModelProjBoltAssemblyIdeaStatiCaApi> Api1ProjectsProjectIdConnectionsConnectionIdMaterialsBoltAssembliesPostAsync(Guid projectId, int connectionId, IdeaStatiCaApiConnectionModelProjBoltAssemblyIdeaStatiCaApi? ideaStatiCaApiConnectionModelProjBoltAssemblyIdeaStatiCaApi = default(IdeaStatiCaApiConnectionModelProjBoltAssemblyIdeaStatiCaApi?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            connection_restapi_client_poc.Client.ApiResponse<IdeaStatiCaApiConnectionModelProjBoltAssemblyIdeaStatiCaApi> localVarResponse = await Api1ProjectsProjectIdConnectionsConnectionIdMaterialsBoltAssembliesPostWithHttpInfoAsync(projectId, connectionId, ideaStatiCaApiConnectionModelProjBoltAssemblyIdeaStatiCaApi, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  
        /// </summary>
        /// <exception cref="connection_restapi_client_poc.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="projectId"></param>
        /// <param name="connectionId"></param>
        /// <param name="ideaStatiCaApiConnectionModelProjBoltAssemblyIdeaStatiCaApi"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (IdeaStatiCaApiConnectionModelProjBoltAssemblyIdeaStatiCaApi)</returns>
        public async System.Threading.Tasks.Task<connection_restapi_client_poc.Client.ApiResponse<IdeaStatiCaApiConnectionModelProjBoltAssemblyIdeaStatiCaApi>> Api1ProjectsProjectIdConnectionsConnectionIdMaterialsBoltAssembliesPostWithHttpInfoAsync(Guid projectId, int connectionId, IdeaStatiCaApiConnectionModelProjBoltAssemblyIdeaStatiCaApi? ideaStatiCaApiConnectionModelProjBoltAssemblyIdeaStatiCaApi = default(IdeaStatiCaApiConnectionModelProjBoltAssemblyIdeaStatiCaApi?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            connection_restapi_client_poc.Client.RequestOptions localVarRequestOptions = new connection_restapi_client_poc.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/xml", 
                "text/xml", 
                "application/*+xml", 
                "application/json-patch+json", 
                "application/json", 
                "text/json", 
                "application/*+json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = connection_restapi_client_poc.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = connection_restapi_client_poc.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("projectId", connection_restapi_client_poc.Client.ClientUtils.ParameterToString(projectId)); // path parameter
            localVarRequestOptions.PathParameters.Add("connectionId", connection_restapi_client_poc.Client.ClientUtils.ParameterToString(connectionId)); // path parameter
            localVarRequestOptions.Data = ideaStatiCaApiConnectionModelProjBoltAssemblyIdeaStatiCaApi;

            localVarRequestOptions.Operation = "MaterialApi.Api1ProjectsProjectIdConnectionsConnectionIdMaterialsBoltAssembliesPost";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<IdeaStatiCaApiConnectionModelProjBoltAssemblyIdeaStatiCaApi>("/api/1/projects/{projectId}/connections/{connectionId}/materials/bolt-assemblies", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("Api1ProjectsProjectIdConnectionsConnectionIdMaterialsBoltAssembliesPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        ///  
        /// </summary>
        /// <exception cref="connection_restapi_client_poc.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="projectId"></param>
        /// <param name="connectionId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;IdeaStatiCaApiConnectionModelProjCrossSectionIdeaStatiCaApi&gt;</returns>
        public List<IdeaStatiCaApiConnectionModelProjCrossSectionIdeaStatiCaApi> Api1ProjectsProjectIdConnectionsConnectionIdMaterialsCrossSectionsGet(Guid projectId, int connectionId, int operationIndex = 0)
        {
            connection_restapi_client_poc.Client.ApiResponse<List<IdeaStatiCaApiConnectionModelProjCrossSectionIdeaStatiCaApi>> localVarResponse = Api1ProjectsProjectIdConnectionsConnectionIdMaterialsCrossSectionsGetWithHttpInfo(projectId, connectionId);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  
        /// </summary>
        /// <exception cref="connection_restapi_client_poc.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="projectId"></param>
        /// <param name="connectionId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;IdeaStatiCaApiConnectionModelProjCrossSectionIdeaStatiCaApi&gt;</returns>
        public connection_restapi_client_poc.Client.ApiResponse<List<IdeaStatiCaApiConnectionModelProjCrossSectionIdeaStatiCaApi>> Api1ProjectsProjectIdConnectionsConnectionIdMaterialsCrossSectionsGetWithHttpInfo(Guid projectId, int connectionId, int operationIndex = 0)
        {
            connection_restapi_client_poc.Client.RequestOptions localVarRequestOptions = new connection_restapi_client_poc.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = connection_restapi_client_poc.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = connection_restapi_client_poc.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("projectId", connection_restapi_client_poc.Client.ClientUtils.ParameterToString(projectId)); // path parameter
            localVarRequestOptions.PathParameters.Add("connectionId", connection_restapi_client_poc.Client.ClientUtils.ParameterToString(connectionId)); // path parameter

            localVarRequestOptions.Operation = "MaterialApi.Api1ProjectsProjectIdConnectionsConnectionIdMaterialsCrossSectionsGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<List<IdeaStatiCaApiConnectionModelProjCrossSectionIdeaStatiCaApi>>("/api/1/projects/{projectId}/connections/{connectionId}/materials/cross-sections", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("Api1ProjectsProjectIdConnectionsConnectionIdMaterialsCrossSectionsGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        ///  
        /// </summary>
        /// <exception cref="connection_restapi_client_poc.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="projectId"></param>
        /// <param name="connectionId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;IdeaStatiCaApiConnectionModelProjCrossSectionIdeaStatiCaApi&gt;</returns>
        public async System.Threading.Tasks.Task<List<IdeaStatiCaApiConnectionModelProjCrossSectionIdeaStatiCaApi>> Api1ProjectsProjectIdConnectionsConnectionIdMaterialsCrossSectionsGetAsync(Guid projectId, int connectionId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            connection_restapi_client_poc.Client.ApiResponse<List<IdeaStatiCaApiConnectionModelProjCrossSectionIdeaStatiCaApi>> localVarResponse = await Api1ProjectsProjectIdConnectionsConnectionIdMaterialsCrossSectionsGetWithHttpInfoAsync(projectId, connectionId, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  
        /// </summary>
        /// <exception cref="connection_restapi_client_poc.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="projectId"></param>
        /// <param name="connectionId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;IdeaStatiCaApiConnectionModelProjCrossSectionIdeaStatiCaApi&gt;)</returns>
        public async System.Threading.Tasks.Task<connection_restapi_client_poc.Client.ApiResponse<List<IdeaStatiCaApiConnectionModelProjCrossSectionIdeaStatiCaApi>>> Api1ProjectsProjectIdConnectionsConnectionIdMaterialsCrossSectionsGetWithHttpInfoAsync(Guid projectId, int connectionId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            connection_restapi_client_poc.Client.RequestOptions localVarRequestOptions = new connection_restapi_client_poc.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = connection_restapi_client_poc.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = connection_restapi_client_poc.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("projectId", connection_restapi_client_poc.Client.ClientUtils.ParameterToString(projectId)); // path parameter
            localVarRequestOptions.PathParameters.Add("connectionId", connection_restapi_client_poc.Client.ClientUtils.ParameterToString(connectionId)); // path parameter

            localVarRequestOptions.Operation = "MaterialApi.Api1ProjectsProjectIdConnectionsConnectionIdMaterialsCrossSectionsGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<List<IdeaStatiCaApiConnectionModelProjCrossSectionIdeaStatiCaApi>>("/api/1/projects/{projectId}/connections/{connectionId}/materials/cross-sections", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("Api1ProjectsProjectIdConnectionsConnectionIdMaterialsCrossSectionsGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        ///  
        /// </summary>
        /// <exception cref="connection_restapi_client_poc.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="projectId"></param>
        /// <param name="connectionId"></param>
        /// <param name="ideaStatiCaApiConnectionModelProjCrossSectionIdeaStatiCaApi"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>IdeaStatiCaApiConnectionModelProjCrossSectionIdeaStatiCaApi</returns>
        public IdeaStatiCaApiConnectionModelProjCrossSectionIdeaStatiCaApi Api1ProjectsProjectIdConnectionsConnectionIdMaterialsCrossSectionsPost(Guid projectId, int connectionId, IdeaStatiCaApiConnectionModelProjCrossSectionIdeaStatiCaApi? ideaStatiCaApiConnectionModelProjCrossSectionIdeaStatiCaApi = default(IdeaStatiCaApiConnectionModelProjCrossSectionIdeaStatiCaApi?), int operationIndex = 0)
        {
            connection_restapi_client_poc.Client.ApiResponse<IdeaStatiCaApiConnectionModelProjCrossSectionIdeaStatiCaApi> localVarResponse = Api1ProjectsProjectIdConnectionsConnectionIdMaterialsCrossSectionsPostWithHttpInfo(projectId, connectionId, ideaStatiCaApiConnectionModelProjCrossSectionIdeaStatiCaApi);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  
        /// </summary>
        /// <exception cref="connection_restapi_client_poc.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="projectId"></param>
        /// <param name="connectionId"></param>
        /// <param name="ideaStatiCaApiConnectionModelProjCrossSectionIdeaStatiCaApi"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of IdeaStatiCaApiConnectionModelProjCrossSectionIdeaStatiCaApi</returns>
        public connection_restapi_client_poc.Client.ApiResponse<IdeaStatiCaApiConnectionModelProjCrossSectionIdeaStatiCaApi> Api1ProjectsProjectIdConnectionsConnectionIdMaterialsCrossSectionsPostWithHttpInfo(Guid projectId, int connectionId, IdeaStatiCaApiConnectionModelProjCrossSectionIdeaStatiCaApi? ideaStatiCaApiConnectionModelProjCrossSectionIdeaStatiCaApi = default(IdeaStatiCaApiConnectionModelProjCrossSectionIdeaStatiCaApi?), int operationIndex = 0)
        {
            connection_restapi_client_poc.Client.RequestOptions localVarRequestOptions = new connection_restapi_client_poc.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/xml",
                "text/xml",
                "application/*+xml",
                "application/json-patch+json",
                "application/json",
                "text/json",
                "application/*+json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = connection_restapi_client_poc.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = connection_restapi_client_poc.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("projectId", connection_restapi_client_poc.Client.ClientUtils.ParameterToString(projectId)); // path parameter
            localVarRequestOptions.PathParameters.Add("connectionId", connection_restapi_client_poc.Client.ClientUtils.ParameterToString(connectionId)); // path parameter
            localVarRequestOptions.Data = ideaStatiCaApiConnectionModelProjCrossSectionIdeaStatiCaApi;

            localVarRequestOptions.Operation = "MaterialApi.Api1ProjectsProjectIdConnectionsConnectionIdMaterialsCrossSectionsPost";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Post<IdeaStatiCaApiConnectionModelProjCrossSectionIdeaStatiCaApi>("/api/1/projects/{projectId}/connections/{connectionId}/materials/cross-sections", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("Api1ProjectsProjectIdConnectionsConnectionIdMaterialsCrossSectionsPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        ///  
        /// </summary>
        /// <exception cref="connection_restapi_client_poc.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="projectId"></param>
        /// <param name="connectionId"></param>
        /// <param name="ideaStatiCaApiConnectionModelProjCrossSectionIdeaStatiCaApi"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of IdeaStatiCaApiConnectionModelProjCrossSectionIdeaStatiCaApi</returns>
        public async System.Threading.Tasks.Task<IdeaStatiCaApiConnectionModelProjCrossSectionIdeaStatiCaApi> Api1ProjectsProjectIdConnectionsConnectionIdMaterialsCrossSectionsPostAsync(Guid projectId, int connectionId, IdeaStatiCaApiConnectionModelProjCrossSectionIdeaStatiCaApi? ideaStatiCaApiConnectionModelProjCrossSectionIdeaStatiCaApi = default(IdeaStatiCaApiConnectionModelProjCrossSectionIdeaStatiCaApi?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            connection_restapi_client_poc.Client.ApiResponse<IdeaStatiCaApiConnectionModelProjCrossSectionIdeaStatiCaApi> localVarResponse = await Api1ProjectsProjectIdConnectionsConnectionIdMaterialsCrossSectionsPostWithHttpInfoAsync(projectId, connectionId, ideaStatiCaApiConnectionModelProjCrossSectionIdeaStatiCaApi, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  
        /// </summary>
        /// <exception cref="connection_restapi_client_poc.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="projectId"></param>
        /// <param name="connectionId"></param>
        /// <param name="ideaStatiCaApiConnectionModelProjCrossSectionIdeaStatiCaApi"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (IdeaStatiCaApiConnectionModelProjCrossSectionIdeaStatiCaApi)</returns>
        public async System.Threading.Tasks.Task<connection_restapi_client_poc.Client.ApiResponse<IdeaStatiCaApiConnectionModelProjCrossSectionIdeaStatiCaApi>> Api1ProjectsProjectIdConnectionsConnectionIdMaterialsCrossSectionsPostWithHttpInfoAsync(Guid projectId, int connectionId, IdeaStatiCaApiConnectionModelProjCrossSectionIdeaStatiCaApi? ideaStatiCaApiConnectionModelProjCrossSectionIdeaStatiCaApi = default(IdeaStatiCaApiConnectionModelProjCrossSectionIdeaStatiCaApi?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            connection_restapi_client_poc.Client.RequestOptions localVarRequestOptions = new connection_restapi_client_poc.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/xml", 
                "text/xml", 
                "application/*+xml", 
                "application/json-patch+json", 
                "application/json", 
                "text/json", 
                "application/*+json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = connection_restapi_client_poc.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = connection_restapi_client_poc.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("projectId", connection_restapi_client_poc.Client.ClientUtils.ParameterToString(projectId)); // path parameter
            localVarRequestOptions.PathParameters.Add("connectionId", connection_restapi_client_poc.Client.ClientUtils.ParameterToString(connectionId)); // path parameter
            localVarRequestOptions.Data = ideaStatiCaApiConnectionModelProjCrossSectionIdeaStatiCaApi;

            localVarRequestOptions.Operation = "MaterialApi.Api1ProjectsProjectIdConnectionsConnectionIdMaterialsCrossSectionsPost";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<IdeaStatiCaApiConnectionModelProjCrossSectionIdeaStatiCaApi>("/api/1/projects/{projectId}/connections/{connectionId}/materials/cross-sections", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("Api1ProjectsProjectIdConnectionsConnectionIdMaterialsCrossSectionsPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        ///  
        /// </summary>
        /// <exception cref="connection_restapi_client_poc.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="projectId"></param>
        /// <param name="connectionId"></param>
        /// <param name="type"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;IdeaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi&gt;</returns>
        public List<IdeaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi> Api1ProjectsProjectIdConnectionsConnectionIdMaterialsGet(Guid projectId, int connectionId, IdeaRSWsLibCssServiceMaterialTypeCIBasicTypes? type = default(IdeaRSWsLibCssServiceMaterialTypeCIBasicTypes?), int operationIndex = 0)
        {
            connection_restapi_client_poc.Client.ApiResponse<List<IdeaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi>> localVarResponse = Api1ProjectsProjectIdConnectionsConnectionIdMaterialsGetWithHttpInfo(projectId, connectionId, type);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  
        /// </summary>
        /// <exception cref="connection_restapi_client_poc.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="projectId"></param>
        /// <param name="connectionId"></param>
        /// <param name="type"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;IdeaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi&gt;</returns>
        public connection_restapi_client_poc.Client.ApiResponse<List<IdeaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi>> Api1ProjectsProjectIdConnectionsConnectionIdMaterialsGetWithHttpInfo(Guid projectId, int connectionId, IdeaRSWsLibCssServiceMaterialTypeCIBasicTypes? type = default(IdeaRSWsLibCssServiceMaterialTypeCIBasicTypes?), int operationIndex = 0)
        {
            connection_restapi_client_poc.Client.RequestOptions localVarRequestOptions = new connection_restapi_client_poc.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = connection_restapi_client_poc.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = connection_restapi_client_poc.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("projectId", connection_restapi_client_poc.Client.ClientUtils.ParameterToString(projectId)); // path parameter
            localVarRequestOptions.PathParameters.Add("connectionId", connection_restapi_client_poc.Client.ClientUtils.ParameterToString(connectionId)); // path parameter
            if (type != null)
            {
                localVarRequestOptions.QueryParameters.Add(connection_restapi_client_poc.Client.ClientUtils.ParameterToMultiMap("", "type", type));
            }

            localVarRequestOptions.Operation = "MaterialApi.Api1ProjectsProjectIdConnectionsConnectionIdMaterialsGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<List<IdeaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi>>("/api/1/projects/{projectId}/connections/{connectionId}/materials", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("Api1ProjectsProjectIdConnectionsConnectionIdMaterialsGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        ///  
        /// </summary>
        /// <exception cref="connection_restapi_client_poc.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="projectId"></param>
        /// <param name="connectionId"></param>
        /// <param name="type"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;IdeaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi&gt;</returns>
        public async System.Threading.Tasks.Task<List<IdeaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi>> Api1ProjectsProjectIdConnectionsConnectionIdMaterialsGetAsync(Guid projectId, int connectionId, IdeaRSWsLibCssServiceMaterialTypeCIBasicTypes? type = default(IdeaRSWsLibCssServiceMaterialTypeCIBasicTypes?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            connection_restapi_client_poc.Client.ApiResponse<List<IdeaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi>> localVarResponse = await Api1ProjectsProjectIdConnectionsConnectionIdMaterialsGetWithHttpInfoAsync(projectId, connectionId, type, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  
        /// </summary>
        /// <exception cref="connection_restapi_client_poc.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="projectId"></param>
        /// <param name="connectionId"></param>
        /// <param name="type"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;IdeaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi&gt;)</returns>
        public async System.Threading.Tasks.Task<connection_restapi_client_poc.Client.ApiResponse<List<IdeaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi>>> Api1ProjectsProjectIdConnectionsConnectionIdMaterialsGetWithHttpInfoAsync(Guid projectId, int connectionId, IdeaRSWsLibCssServiceMaterialTypeCIBasicTypes? type = default(IdeaRSWsLibCssServiceMaterialTypeCIBasicTypes?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            connection_restapi_client_poc.Client.RequestOptions localVarRequestOptions = new connection_restapi_client_poc.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = connection_restapi_client_poc.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = connection_restapi_client_poc.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("projectId", connection_restapi_client_poc.Client.ClientUtils.ParameterToString(projectId)); // path parameter
            localVarRequestOptions.PathParameters.Add("connectionId", connection_restapi_client_poc.Client.ClientUtils.ParameterToString(connectionId)); // path parameter
            if (type != null)
            {
                localVarRequestOptions.QueryParameters.Add(connection_restapi_client_poc.Client.ClientUtils.ParameterToMultiMap("", "type", type));
            }

            localVarRequestOptions.Operation = "MaterialApi.Api1ProjectsProjectIdConnectionsConnectionIdMaterialsGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<List<IdeaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi>>("/api/1/projects/{projectId}/connections/{connectionId}/materials", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("Api1ProjectsProjectIdConnectionsConnectionIdMaterialsGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        ///  
        /// </summary>
        /// <exception cref="connection_restapi_client_poc.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="projectId"></param>
        /// <param name="connectionId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;IdeaStatiCaApiConnectionModelProjPinIdeaStatiCaApi&gt;</returns>
        public List<IdeaStatiCaApiConnectionModelProjPinIdeaStatiCaApi> Api1ProjectsProjectIdConnectionsConnectionIdMaterialsPinsGet(Guid projectId, int connectionId, int operationIndex = 0)
        {
            connection_restapi_client_poc.Client.ApiResponse<List<IdeaStatiCaApiConnectionModelProjPinIdeaStatiCaApi>> localVarResponse = Api1ProjectsProjectIdConnectionsConnectionIdMaterialsPinsGetWithHttpInfo(projectId, connectionId);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  
        /// </summary>
        /// <exception cref="connection_restapi_client_poc.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="projectId"></param>
        /// <param name="connectionId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;IdeaStatiCaApiConnectionModelProjPinIdeaStatiCaApi&gt;</returns>
        public connection_restapi_client_poc.Client.ApiResponse<List<IdeaStatiCaApiConnectionModelProjPinIdeaStatiCaApi>> Api1ProjectsProjectIdConnectionsConnectionIdMaterialsPinsGetWithHttpInfo(Guid projectId, int connectionId, int operationIndex = 0)
        {
            connection_restapi_client_poc.Client.RequestOptions localVarRequestOptions = new connection_restapi_client_poc.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = connection_restapi_client_poc.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = connection_restapi_client_poc.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("projectId", connection_restapi_client_poc.Client.ClientUtils.ParameterToString(projectId)); // path parameter
            localVarRequestOptions.PathParameters.Add("connectionId", connection_restapi_client_poc.Client.ClientUtils.ParameterToString(connectionId)); // path parameter

            localVarRequestOptions.Operation = "MaterialApi.Api1ProjectsProjectIdConnectionsConnectionIdMaterialsPinsGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<List<IdeaStatiCaApiConnectionModelProjPinIdeaStatiCaApi>>("/api/1/projects/{projectId}/connections/{connectionId}/materials/pins", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("Api1ProjectsProjectIdConnectionsConnectionIdMaterialsPinsGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        ///  
        /// </summary>
        /// <exception cref="connection_restapi_client_poc.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="projectId"></param>
        /// <param name="connectionId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;IdeaStatiCaApiConnectionModelProjPinIdeaStatiCaApi&gt;</returns>
        public async System.Threading.Tasks.Task<List<IdeaStatiCaApiConnectionModelProjPinIdeaStatiCaApi>> Api1ProjectsProjectIdConnectionsConnectionIdMaterialsPinsGetAsync(Guid projectId, int connectionId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            connection_restapi_client_poc.Client.ApiResponse<List<IdeaStatiCaApiConnectionModelProjPinIdeaStatiCaApi>> localVarResponse = await Api1ProjectsProjectIdConnectionsConnectionIdMaterialsPinsGetWithHttpInfoAsync(projectId, connectionId, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  
        /// </summary>
        /// <exception cref="connection_restapi_client_poc.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="projectId"></param>
        /// <param name="connectionId"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;IdeaStatiCaApiConnectionModelProjPinIdeaStatiCaApi&gt;)</returns>
        public async System.Threading.Tasks.Task<connection_restapi_client_poc.Client.ApiResponse<List<IdeaStatiCaApiConnectionModelProjPinIdeaStatiCaApi>>> Api1ProjectsProjectIdConnectionsConnectionIdMaterialsPinsGetWithHttpInfoAsync(Guid projectId, int connectionId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            connection_restapi_client_poc.Client.RequestOptions localVarRequestOptions = new connection_restapi_client_poc.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = connection_restapi_client_poc.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = connection_restapi_client_poc.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("projectId", connection_restapi_client_poc.Client.ClientUtils.ParameterToString(projectId)); // path parameter
            localVarRequestOptions.PathParameters.Add("connectionId", connection_restapi_client_poc.Client.ClientUtils.ParameterToString(connectionId)); // path parameter

            localVarRequestOptions.Operation = "MaterialApi.Api1ProjectsProjectIdConnectionsConnectionIdMaterialsPinsGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<List<IdeaStatiCaApiConnectionModelProjPinIdeaStatiCaApi>>("/api/1/projects/{projectId}/connections/{connectionId}/materials/pins", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("Api1ProjectsProjectIdConnectionsConnectionIdMaterialsPinsGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        ///  
        /// </summary>
        /// <exception cref="connection_restapi_client_poc.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="projectId"></param>
        /// <param name="connectionId"></param>
        /// <param name="ideaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>IdeaStatiCaApiConnectionModelProjPinIdeaStatiCaApi</returns>
        public IdeaStatiCaApiConnectionModelProjPinIdeaStatiCaApi Api1ProjectsProjectIdConnectionsConnectionIdMaterialsPinsPost(Guid projectId, int connectionId, IdeaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi? ideaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi = default(IdeaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi?), int operationIndex = 0)
        {
            connection_restapi_client_poc.Client.ApiResponse<IdeaStatiCaApiConnectionModelProjPinIdeaStatiCaApi> localVarResponse = Api1ProjectsProjectIdConnectionsConnectionIdMaterialsPinsPostWithHttpInfo(projectId, connectionId, ideaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  
        /// </summary>
        /// <exception cref="connection_restapi_client_poc.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="projectId"></param>
        /// <param name="connectionId"></param>
        /// <param name="ideaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of IdeaStatiCaApiConnectionModelProjPinIdeaStatiCaApi</returns>
        public connection_restapi_client_poc.Client.ApiResponse<IdeaStatiCaApiConnectionModelProjPinIdeaStatiCaApi> Api1ProjectsProjectIdConnectionsConnectionIdMaterialsPinsPostWithHttpInfo(Guid projectId, int connectionId, IdeaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi? ideaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi = default(IdeaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi?), int operationIndex = 0)
        {
            connection_restapi_client_poc.Client.RequestOptions localVarRequestOptions = new connection_restapi_client_poc.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/xml",
                "text/xml",
                "application/*+xml",
                "application/json-patch+json",
                "application/json",
                "text/json",
                "application/*+json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = connection_restapi_client_poc.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = connection_restapi_client_poc.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("projectId", connection_restapi_client_poc.Client.ClientUtils.ParameterToString(projectId)); // path parameter
            localVarRequestOptions.PathParameters.Add("connectionId", connection_restapi_client_poc.Client.ClientUtils.ParameterToString(connectionId)); // path parameter
            localVarRequestOptions.Data = ideaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi;

            localVarRequestOptions.Operation = "MaterialApi.Api1ProjectsProjectIdConnectionsConnectionIdMaterialsPinsPost";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Post<IdeaStatiCaApiConnectionModelProjPinIdeaStatiCaApi>("/api/1/projects/{projectId}/connections/{connectionId}/materials/pins", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("Api1ProjectsProjectIdConnectionsConnectionIdMaterialsPinsPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        ///  
        /// </summary>
        /// <exception cref="connection_restapi_client_poc.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="projectId"></param>
        /// <param name="connectionId"></param>
        /// <param name="ideaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of IdeaStatiCaApiConnectionModelProjPinIdeaStatiCaApi</returns>
        public async System.Threading.Tasks.Task<IdeaStatiCaApiConnectionModelProjPinIdeaStatiCaApi> Api1ProjectsProjectIdConnectionsConnectionIdMaterialsPinsPostAsync(Guid projectId, int connectionId, IdeaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi? ideaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi = default(IdeaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            connection_restapi_client_poc.Client.ApiResponse<IdeaStatiCaApiConnectionModelProjPinIdeaStatiCaApi> localVarResponse = await Api1ProjectsProjectIdConnectionsConnectionIdMaterialsPinsPostWithHttpInfoAsync(projectId, connectionId, ideaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  
        /// </summary>
        /// <exception cref="connection_restapi_client_poc.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="projectId"></param>
        /// <param name="connectionId"></param>
        /// <param name="ideaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (IdeaStatiCaApiConnectionModelProjPinIdeaStatiCaApi)</returns>
        public async System.Threading.Tasks.Task<connection_restapi_client_poc.Client.ApiResponse<IdeaStatiCaApiConnectionModelProjPinIdeaStatiCaApi>> Api1ProjectsProjectIdConnectionsConnectionIdMaterialsPinsPostWithHttpInfoAsync(Guid projectId, int connectionId, IdeaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi? ideaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi = default(IdeaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            connection_restapi_client_poc.Client.RequestOptions localVarRequestOptions = new connection_restapi_client_poc.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/xml", 
                "text/xml", 
                "application/*+xml", 
                "application/json-patch+json", 
                "application/json", 
                "text/json", 
                "application/*+json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = connection_restapi_client_poc.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = connection_restapi_client_poc.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("projectId", connection_restapi_client_poc.Client.ClientUtils.ParameterToString(projectId)); // path parameter
            localVarRequestOptions.PathParameters.Add("connectionId", connection_restapi_client_poc.Client.ClientUtils.ParameterToString(connectionId)); // path parameter
            localVarRequestOptions.Data = ideaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi;

            localVarRequestOptions.Operation = "MaterialApi.Api1ProjectsProjectIdConnectionsConnectionIdMaterialsPinsPost";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<IdeaStatiCaApiConnectionModelProjPinIdeaStatiCaApi>("/api/1/projects/{projectId}/connections/{connectionId}/materials/pins", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("Api1ProjectsProjectIdConnectionsConnectionIdMaterialsPinsPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        ///  
        /// </summary>
        /// <exception cref="connection_restapi_client_poc.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="projectId"></param>
        /// <param name="connectionId"></param>
        /// <param name="ideaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>IdeaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi</returns>
        public IdeaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi Api1ProjectsProjectIdConnectionsConnectionIdMaterialsPost(Guid projectId, int connectionId, IdeaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi? ideaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi = default(IdeaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi?), int operationIndex = 0)
        {
            connection_restapi_client_poc.Client.ApiResponse<IdeaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi> localVarResponse = Api1ProjectsProjectIdConnectionsConnectionIdMaterialsPostWithHttpInfo(projectId, connectionId, ideaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  
        /// </summary>
        /// <exception cref="connection_restapi_client_poc.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="projectId"></param>
        /// <param name="connectionId"></param>
        /// <param name="ideaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of IdeaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi</returns>
        public connection_restapi_client_poc.Client.ApiResponse<IdeaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi> Api1ProjectsProjectIdConnectionsConnectionIdMaterialsPostWithHttpInfo(Guid projectId, int connectionId, IdeaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi? ideaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi = default(IdeaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi?), int operationIndex = 0)
        {
            connection_restapi_client_poc.Client.RequestOptions localVarRequestOptions = new connection_restapi_client_poc.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/xml",
                "text/xml",
                "application/*+xml",
                "application/json-patch+json",
                "application/json",
                "text/json",
                "application/*+json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = connection_restapi_client_poc.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = connection_restapi_client_poc.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("projectId", connection_restapi_client_poc.Client.ClientUtils.ParameterToString(projectId)); // path parameter
            localVarRequestOptions.PathParameters.Add("connectionId", connection_restapi_client_poc.Client.ClientUtils.ParameterToString(connectionId)); // path parameter
            localVarRequestOptions.Data = ideaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi;

            localVarRequestOptions.Operation = "MaterialApi.Api1ProjectsProjectIdConnectionsConnectionIdMaterialsPost";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Post<IdeaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi>("/api/1/projects/{projectId}/connections/{connectionId}/materials", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("Api1ProjectsProjectIdConnectionsConnectionIdMaterialsPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        ///  
        /// </summary>
        /// <exception cref="connection_restapi_client_poc.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="projectId"></param>
        /// <param name="connectionId"></param>
        /// <param name="ideaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of IdeaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi</returns>
        public async System.Threading.Tasks.Task<IdeaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi> Api1ProjectsProjectIdConnectionsConnectionIdMaterialsPostAsync(Guid projectId, int connectionId, IdeaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi? ideaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi = default(IdeaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            connection_restapi_client_poc.Client.ApiResponse<IdeaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi> localVarResponse = await Api1ProjectsProjectIdConnectionsConnectionIdMaterialsPostWithHttpInfoAsync(projectId, connectionId, ideaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  
        /// </summary>
        /// <exception cref="connection_restapi_client_poc.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="projectId"></param>
        /// <param name="connectionId"></param>
        /// <param name="ideaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (IdeaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi)</returns>
        public async System.Threading.Tasks.Task<connection_restapi_client_poc.Client.ApiResponse<IdeaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi>> Api1ProjectsProjectIdConnectionsConnectionIdMaterialsPostWithHttpInfoAsync(Guid projectId, int connectionId, IdeaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi? ideaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi = default(IdeaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            connection_restapi_client_poc.Client.RequestOptions localVarRequestOptions = new connection_restapi_client_poc.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/xml", 
                "text/xml", 
                "application/*+xml", 
                "application/json-patch+json", 
                "application/json", 
                "text/json", 
                "application/*+json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = connection_restapi_client_poc.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = connection_restapi_client_poc.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("projectId", connection_restapi_client_poc.Client.ClientUtils.ParameterToString(projectId)); // path parameter
            localVarRequestOptions.PathParameters.Add("connectionId", connection_restapi_client_poc.Client.ClientUtils.ParameterToString(connectionId)); // path parameter
            localVarRequestOptions.Data = ideaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi;

            localVarRequestOptions.Operation = "MaterialApi.Api1ProjectsProjectIdConnectionsConnectionIdMaterialsPost";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<IdeaStatiCaApiConnectionModelProjMaterialIdeaStatiCaApi>("/api/1/projects/{projectId}/connections/{connectionId}/materials", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("Api1ProjectsProjectIdConnectionsConnectionIdMaterialsPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

    }
}
